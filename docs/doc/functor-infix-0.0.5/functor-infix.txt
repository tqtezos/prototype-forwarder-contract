-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Infix operators for mapping over compositions of functors. Lots of them.
--   
--   Infix operators for mapping over compositions of functors. Lots of
--   them.
@package functor-infix
@version 0.0.5

module Data.Functor.Infix
(<$$>) :: forall a b f_a8Sh f_a8Si. (Functor f_a8Sh, Functor f_a8Si) => (a -> b) -> f_a8Sh (f_a8Si a) -> f_a8Sh (f_a8Si b)
infixl 4 <$$>
(<$$$>) :: forall a b f_a8Sj f_a8Sk f_a8Sl. (Functor f_a8Sj, Functor f_a8Sk, Functor f_a8Sl) => (a -> b) -> f_a8Sj (f_a8Sk (f_a8Sl a)) -> f_a8Sj (f_a8Sk (f_a8Sl b))
infixl 4 <$$$>
(<$$$$>) :: forall a b f_a8Sm f_a8Sn f_a8So f_a8Sp. (Functor f_a8Sm, Functor f_a8Sn, Functor f_a8So, Functor f_a8Sp) => (a -> b) -> f_a8Sm (f_a8Sn (f_a8So (f_a8Sp a))) -> f_a8Sm (f_a8Sn (f_a8So (f_a8Sp b)))
infixl 4 <$$$$>
(<$$$$$>) :: forall a b f_a8Sq f_a8Sr f_a8Ss f_a8St f_a8Su. (Functor f_a8Sq, Functor f_a8Sr, Functor f_a8Ss, Functor f_a8St, Functor f_a8Su) => (a -> b) -> f_a8Sq (f_a8Sr (f_a8Ss (f_a8St (f_a8Su a)))) -> f_a8Sq (f_a8Sr (f_a8Ss (f_a8St (f_a8Su b))))
infixl 4 <$$$$$>
(<$$$$$$>) :: forall a b f_a8Sv f_a8Sw f_a8Sx f_a8Sy f_a8Sz f_a8SA. (Functor f_a8Sv, Functor f_a8Sw, Functor f_a8Sx, Functor f_a8Sy, Functor f_a8Sz, Functor f_a8SA) => (a -> b) -> f_a8Sv (f_a8Sw (f_a8Sx (f_a8Sy (f_a8Sz (f_a8SA a))))) -> f_a8Sv (f_a8Sw (f_a8Sx (f_a8Sy (f_a8Sz (f_a8SA b)))))
infixl 4 <$$$$$$>
(<$$$$$$$>) :: forall a b f_a8SB f_a8SC f_a8SD f_a8SE f_a8SF f_a8SG f_a8SH. (Functor f_a8SB, Functor f_a8SC, Functor f_a8SD, Functor f_a8SE, Functor f_a8SF, Functor f_a8SG, Functor f_a8SH) => (a -> b) -> f_a8SB (f_a8SC (f_a8SD (f_a8SE (f_a8SF (f_a8SG (f_a8SH a)))))) -> f_a8SB (f_a8SC (f_a8SD (f_a8SE (f_a8SF (f_a8SG (f_a8SH b))))))
infixl 4 <$$$$$$$>
(<$$$$$$$$>) :: forall a b f_a8SI f_a8SJ f_a8SK f_a8SL f_a8SM f_a8SN f_a8SO f_a8SP. (Functor f_a8SI, Functor f_a8SJ, Functor f_a8SK, Functor f_a8SL, Functor f_a8SM, Functor f_a8SN, Functor f_a8SO, Functor f_a8SP) => (a -> b) -> f_a8SI (f_a8SJ (f_a8SK (f_a8SL (f_a8SM (f_a8SN (f_a8SO (f_a8SP a))))))) -> f_a8SI (f_a8SJ (f_a8SK (f_a8SL (f_a8SM (f_a8SN (f_a8SO (f_a8SP b)))))))
infixl 4 <$$$$$$$$>
(<$$$$$$$$$>) :: forall a b f_a8SQ f_a8SR f_a8SS f_a8ST f_a8SU f_a8SV f_a8SW f_a8SX f_a8SY. (Functor f_a8SQ, Functor f_a8SR, Functor f_a8SS, Functor f_a8ST, Functor f_a8SU, Functor f_a8SV, Functor f_a8SW, Functor f_a8SX, Functor f_a8SY) => (a -> b) -> f_a8SQ (f_a8SR (f_a8SS (f_a8ST (f_a8SU (f_a8SV (f_a8SW (f_a8SX (f_a8SY a)))))))) -> f_a8SQ (f_a8SR (f_a8SS (f_a8ST (f_a8SU (f_a8SV (f_a8SW (f_a8SX (f_a8SY b))))))))
infixl 4 <$$$$$$$$$>
(<$$$$$$$$$$>) :: forall a b f_a8SZ f_a8T0 f_a8T1 f_a8T2 f_a8T3 f_a8T4 f_a8T5 f_a8T6 f_a8T7 f_a8T8. (Functor f_a8SZ, Functor f_a8T0, Functor f_a8T1, Functor f_a8T2, Functor f_a8T3, Functor f_a8T4, Functor f_a8T5, Functor f_a8T6, Functor f_a8T7, Functor f_a8T8) => (a -> b) -> f_a8SZ (f_a8T0 (f_a8T1 (f_a8T2 (f_a8T3 (f_a8T4 (f_a8T5 (f_a8T6 (f_a8T7 (f_a8T8 a))))))))) -> f_a8SZ (f_a8T0 (f_a8T1 (f_a8T2 (f_a8T3 (f_a8T4 (f_a8T5 (f_a8T6 (f_a8T7 (f_a8T8 b)))))))))
infixl 4 <$$$$$$$$$$>
(<$$$$$$$$$$$>) :: forall a b f_a8T9 f_a8Ta f_a8Tb f_a8Tc f_a8Td f_a8Te f_a8Tf f_a8Tg f_a8Th f_a8Ti f_a8Tj. (Functor f_a8T9, Functor f_a8Ta, Functor f_a8Tb, Functor f_a8Tc, Functor f_a8Td, Functor f_a8Te, Functor f_a8Tf, Functor f_a8Tg, Functor f_a8Th, Functor f_a8Ti, Functor f_a8Tj) => (a -> b) -> f_a8T9 (f_a8Ta (f_a8Tb (f_a8Tc (f_a8Td (f_a8Te (f_a8Tf (f_a8Tg (f_a8Th (f_a8Ti (f_a8Tj a)))))))))) -> f_a8T9 (f_a8Ta (f_a8Tb (f_a8Tc (f_a8Td (f_a8Te (f_a8Tf (f_a8Tg (f_a8Th (f_a8Ti (f_a8Tj b))))))))))
infixl 4 <$$$$$$$$$$$>
(<$$$$$$$$$$$$>) :: forall a b f_a8Tk f_a8Tl f_a8Tm f_a8Tn f_a8To f_a8Tp f_a8Tq f_a8Tr f_a8Ts f_a8Tt f_a8Tu f_a8Tv. (Functor f_a8Tk, Functor f_a8Tl, Functor f_a8Tm, Functor f_a8Tn, Functor f_a8To, Functor f_a8Tp, Functor f_a8Tq, Functor f_a8Tr, Functor f_a8Ts, Functor f_a8Tt, Functor f_a8Tu, Functor f_a8Tv) => (a -> b) -> f_a8Tk (f_a8Tl (f_a8Tm (f_a8Tn (f_a8To (f_a8Tp (f_a8Tq (f_a8Tr (f_a8Ts (f_a8Tt (f_a8Tu (f_a8Tv a))))))))))) -> f_a8Tk (f_a8Tl (f_a8Tm (f_a8Tn (f_a8To (f_a8Tp (f_a8Tq (f_a8Tr (f_a8Ts (f_a8Tt (f_a8Tu (f_a8Tv b)))))))))))
infixl 4 <$$$$$$$$$$$$>
(<$$$$$$$$$$$$$>) :: forall a b f_a8Tw f_a8Tx f_a8Ty f_a8Tz f_a8TA f_a8TB f_a8TC f_a8TD f_a8TE f_a8TF f_a8TG f_a8TH f_a8TI. (Functor f_a8Tw, Functor f_a8Tx, Functor f_a8Ty, Functor f_a8Tz, Functor f_a8TA, Functor f_a8TB, Functor f_a8TC, Functor f_a8TD, Functor f_a8TE, Functor f_a8TF, Functor f_a8TG, Functor f_a8TH, Functor f_a8TI) => (a -> b) -> f_a8Tw (f_a8Tx (f_a8Ty (f_a8Tz (f_a8TA (f_a8TB (f_a8TC (f_a8TD (f_a8TE (f_a8TF (f_a8TG (f_a8TH (f_a8TI a)))))))))))) -> f_a8Tw (f_a8Tx (f_a8Ty (f_a8Tz (f_a8TA (f_a8TB (f_a8TC (f_a8TD (f_a8TE (f_a8TF (f_a8TG (f_a8TH (f_a8TI b))))))))))))
infixl 4 <$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$>) :: forall a b f_a8TJ f_a8TK f_a8TL f_a8TM f_a8TN f_a8TO f_a8TP f_a8TQ f_a8TR f_a8TS f_a8TT f_a8TU f_a8TV f_a8TW. (Functor f_a8TJ, Functor f_a8TK, Functor f_a8TL, Functor f_a8TM, Functor f_a8TN, Functor f_a8TO, Functor f_a8TP, Functor f_a8TQ, Functor f_a8TR, Functor f_a8TS, Functor f_a8TT, Functor f_a8TU, Functor f_a8TV, Functor f_a8TW) => (a -> b) -> f_a8TJ (f_a8TK (f_a8TL (f_a8TM (f_a8TN (f_a8TO (f_a8TP (f_a8TQ (f_a8TR (f_a8TS (f_a8TT (f_a8TU (f_a8TV (f_a8TW a))))))))))))) -> f_a8TJ (f_a8TK (f_a8TL (f_a8TM (f_a8TN (f_a8TO (f_a8TP (f_a8TQ (f_a8TR (f_a8TS (f_a8TT (f_a8TU (f_a8TV (f_a8TW b)))))))))))))
infixl 4 <$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$>) :: forall a b f_a8TX f_a8TY f_a8TZ f_a8U0 f_a8U1 f_a8U2 f_a8U3 f_a8U4 f_a8U5 f_a8U6 f_a8U7 f_a8U8 f_a8U9 f_a8Ua f_a8Ub. (Functor f_a8TX, Functor f_a8TY, Functor f_a8TZ, Functor f_a8U0, Functor f_a8U1, Functor f_a8U2, Functor f_a8U3, Functor f_a8U4, Functor f_a8U5, Functor f_a8U6, Functor f_a8U7, Functor f_a8U8, Functor f_a8U9, Functor f_a8Ua, Functor f_a8Ub) => (a -> b) -> f_a8TX (f_a8TY (f_a8TZ (f_a8U0 (f_a8U1 (f_a8U2 (f_a8U3 (f_a8U4 (f_a8U5 (f_a8U6 (f_a8U7 (f_a8U8 (f_a8U9 (f_a8Ua (f_a8Ub a)))))))))))))) -> f_a8TX (f_a8TY (f_a8TZ (f_a8U0 (f_a8U1 (f_a8U2 (f_a8U3 (f_a8U4 (f_a8U5 (f_a8U6 (f_a8U7 (f_a8U8 (f_a8U9 (f_a8Ua (f_a8Ub b))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$$>) :: forall a b f_a8Uc f_a8Ud f_a8Ue f_a8Uf f_a8Ug f_a8Uh f_a8Ui f_a8Uj f_a8Uk f_a8Ul f_a8Um f_a8Un f_a8Uo f_a8Up f_a8Uq f_a8Ur. (Functor f_a8Uc, Functor f_a8Ud, Functor f_a8Ue, Functor f_a8Uf, Functor f_a8Ug, Functor f_a8Uh, Functor f_a8Ui, Functor f_a8Uj, Functor f_a8Uk, Functor f_a8Ul, Functor f_a8Um, Functor f_a8Un, Functor f_a8Uo, Functor f_a8Up, Functor f_a8Uq, Functor f_a8Ur) => (a -> b) -> f_a8Uc (f_a8Ud (f_a8Ue (f_a8Uf (f_a8Ug (f_a8Uh (f_a8Ui (f_a8Uj (f_a8Uk (f_a8Ul (f_a8Um (f_a8Un (f_a8Uo (f_a8Up (f_a8Uq (f_a8Ur a))))))))))))))) -> f_a8Uc (f_a8Ud (f_a8Ue (f_a8Uf (f_a8Ug (f_a8Uh (f_a8Ui (f_a8Uj (f_a8Uk (f_a8Ul (f_a8Um (f_a8Un (f_a8Uo (f_a8Up (f_a8Uq (f_a8Ur b)))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$$$>) :: forall a b f_a8Us f_a8Ut f_a8Uu f_a8Uv f_a8Uw f_a8Ux f_a8Uy f_a8Uz f_a8UA f_a8UB f_a8UC f_a8UD f_a8UE f_a8UF f_a8UG f_a8UH f_a8UI. (Functor f_a8Us, Functor f_a8Ut, Functor f_a8Uu, Functor f_a8Uv, Functor f_a8Uw, Functor f_a8Ux, Functor f_a8Uy, Functor f_a8Uz, Functor f_a8UA, Functor f_a8UB, Functor f_a8UC, Functor f_a8UD, Functor f_a8UE, Functor f_a8UF, Functor f_a8UG, Functor f_a8UH, Functor f_a8UI) => (a -> b) -> f_a8Us (f_a8Ut (f_a8Uu (f_a8Uv (f_a8Uw (f_a8Ux (f_a8Uy (f_a8Uz (f_a8UA (f_a8UB (f_a8UC (f_a8UD (f_a8UE (f_a8UF (f_a8UG (f_a8UH (f_a8UI a)))))))))))))))) -> f_a8Us (f_a8Ut (f_a8Uu (f_a8Uv (f_a8Uw (f_a8Ux (f_a8Uy (f_a8Uz (f_a8UA (f_a8UB (f_a8UC (f_a8UD (f_a8UE (f_a8UF (f_a8UG (f_a8UH (f_a8UI b))))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$$$$>) :: forall a b f_a8UJ f_a8UK f_a8UL f_a8UM f_a8UN f_a8UO f_a8UP f_a8UQ f_a8UR f_a8US f_a8UT f_a8UU f_a8UV f_a8UW f_a8UX f_a8UY f_a8UZ f_a8V0. (Functor f_a8UJ, Functor f_a8UK, Functor f_a8UL, Functor f_a8UM, Functor f_a8UN, Functor f_a8UO, Functor f_a8UP, Functor f_a8UQ, Functor f_a8UR, Functor f_a8US, Functor f_a8UT, Functor f_a8UU, Functor f_a8UV, Functor f_a8UW, Functor f_a8UX, Functor f_a8UY, Functor f_a8UZ, Functor f_a8V0) => (a -> b) -> f_a8UJ (f_a8UK (f_a8UL (f_a8UM (f_a8UN (f_a8UO (f_a8UP (f_a8UQ (f_a8UR (f_a8US (f_a8UT (f_a8UU (f_a8UV (f_a8UW (f_a8UX (f_a8UY (f_a8UZ (f_a8V0 a))))))))))))))))) -> f_a8UJ (f_a8UK (f_a8UL (f_a8UM (f_a8UN (f_a8UO (f_a8UP (f_a8UQ (f_a8UR (f_a8US (f_a8UT (f_a8UU (f_a8UV (f_a8UW (f_a8UX (f_a8UY (f_a8UZ (f_a8V0 b)))))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$$$$$>) :: forall a b f_a8V1 f_a8V2 f_a8V3 f_a8V4 f_a8V5 f_a8V6 f_a8V7 f_a8V8 f_a8V9 f_a8Va f_a8Vb f_a8Vc f_a8Vd f_a8Ve f_a8Vf f_a8Vg f_a8Vh f_a8Vi f_a8Vj. (Functor f_a8V1, Functor f_a8V2, Functor f_a8V3, Functor f_a8V4, Functor f_a8V5, Functor f_a8V6, Functor f_a8V7, Functor f_a8V8, Functor f_a8V9, Functor f_a8Va, Functor f_a8Vb, Functor f_a8Vc, Functor f_a8Vd, Functor f_a8Ve, Functor f_a8Vf, Functor f_a8Vg, Functor f_a8Vh, Functor f_a8Vi, Functor f_a8Vj) => (a -> b) -> f_a8V1 (f_a8V2 (f_a8V3 (f_a8V4 (f_a8V5 (f_a8V6 (f_a8V7 (f_a8V8 (f_a8V9 (f_a8Va (f_a8Vb (f_a8Vc (f_a8Vd (f_a8Ve (f_a8Vf (f_a8Vg (f_a8Vh (f_a8Vi (f_a8Vj a)))))))))))))))))) -> f_a8V1 (f_a8V2 (f_a8V3 (f_a8V4 (f_a8V5 (f_a8V6 (f_a8V7 (f_a8V8 (f_a8V9 (f_a8Va (f_a8Vb (f_a8Vc (f_a8Vd (f_a8Ve (f_a8Vf (f_a8Vg (f_a8Vh (f_a8Vi (f_a8Vj b))))))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$$$$$>
(<$$$$$$$$$$$$$$$$$$$$>) :: forall a b f_a8Vk f_a8Vl f_a8Vm f_a8Vn f_a8Vo f_a8Vp f_a8Vq f_a8Vr f_a8Vs f_a8Vt f_a8Vu f_a8Vv f_a8Vw f_a8Vx f_a8Vy f_a8Vz f_a8VA f_a8VB f_a8VC f_a8VD. (Functor f_a8Vk, Functor f_a8Vl, Functor f_a8Vm, Functor f_a8Vn, Functor f_a8Vo, Functor f_a8Vp, Functor f_a8Vq, Functor f_a8Vr, Functor f_a8Vs, Functor f_a8Vt, Functor f_a8Vu, Functor f_a8Vv, Functor f_a8Vw, Functor f_a8Vx, Functor f_a8Vy, Functor f_a8Vz, Functor f_a8VA, Functor f_a8VB, Functor f_a8VC, Functor f_a8VD) => (a -> b) -> f_a8Vk (f_a8Vl (f_a8Vm (f_a8Vn (f_a8Vo (f_a8Vp (f_a8Vq (f_a8Vr (f_a8Vs (f_a8Vt (f_a8Vu (f_a8Vv (f_a8Vw (f_a8Vx (f_a8Vy (f_a8Vz (f_a8VA (f_a8VB (f_a8VC (f_a8VD a))))))))))))))))))) -> f_a8Vk (f_a8Vl (f_a8Vm (f_a8Vn (f_a8Vo (f_a8Vp (f_a8Vq (f_a8Vr (f_a8Vs (f_a8Vt (f_a8Vu (f_a8Vv (f_a8Vw (f_a8Vx (f_a8Vy (f_a8Vz (f_a8VA (f_a8VB (f_a8VC (f_a8VD b)))))))))))))))))))
infixl 4 <$$$$$$$$$$$$$$$$$$$$>
(<&>) :: forall a b f_a9Va. Functor f_a9Va => f_a9Va a -> (a -> b) -> f_a9Va b
infixl 1 <&>
(<&&>) :: forall a b f_a9Vb f_a9Vc. (Functor f_a9Vb, Functor f_a9Vc) => f_a9Vb (f_a9Vc a) -> (a -> b) -> f_a9Vb (f_a9Vc b)
infixl 1 <&&>
(<&&&>) :: forall a b f_a9Vd f_a9Ve f_a9Vf. (Functor f_a9Vd, Functor f_a9Ve, Functor f_a9Vf) => f_a9Vd (f_a9Ve (f_a9Vf a)) -> (a -> b) -> f_a9Vd (f_a9Ve (f_a9Vf b))
infixl 1 <&&&>
(<&&&&>) :: forall a b f_a9Vg f_a9Vh f_a9Vi f_a9Vj. (Functor f_a9Vg, Functor f_a9Vh, Functor f_a9Vi, Functor f_a9Vj) => f_a9Vg (f_a9Vh (f_a9Vi (f_a9Vj a))) -> (a -> b) -> f_a9Vg (f_a9Vh (f_a9Vi (f_a9Vj b)))
infixl 1 <&&&&>
(<&&&&&>) :: forall a b f_a9Vk f_a9Vl f_a9Vm f_a9Vn f_a9Vo. (Functor f_a9Vk, Functor f_a9Vl, Functor f_a9Vm, Functor f_a9Vn, Functor f_a9Vo) => f_a9Vk (f_a9Vl (f_a9Vm (f_a9Vn (f_a9Vo a)))) -> (a -> b) -> f_a9Vk (f_a9Vl (f_a9Vm (f_a9Vn (f_a9Vo b))))
infixl 1 <&&&&&>
(<&&&&&&>) :: forall a b f_a9Vp f_a9Vq f_a9Vr f_a9Vs f_a9Vt f_a9Vu. (Functor f_a9Vp, Functor f_a9Vq, Functor f_a9Vr, Functor f_a9Vs, Functor f_a9Vt, Functor f_a9Vu) => f_a9Vp (f_a9Vq (f_a9Vr (f_a9Vs (f_a9Vt (f_a9Vu a))))) -> (a -> b) -> f_a9Vp (f_a9Vq (f_a9Vr (f_a9Vs (f_a9Vt (f_a9Vu b)))))
infixl 1 <&&&&&&>
(<&&&&&&&>) :: forall a b f_a9Vv f_a9Vw f_a9Vx f_a9Vy f_a9Vz f_a9VA f_a9VB. (Functor f_a9Vv, Functor f_a9Vw, Functor f_a9Vx, Functor f_a9Vy, Functor f_a9Vz, Functor f_a9VA, Functor f_a9VB) => f_a9Vv (f_a9Vw (f_a9Vx (f_a9Vy (f_a9Vz (f_a9VA (f_a9VB a)))))) -> (a -> b) -> f_a9Vv (f_a9Vw (f_a9Vx (f_a9Vy (f_a9Vz (f_a9VA (f_a9VB b))))))
infixl 1 <&&&&&&&>
(<&&&&&&&&>) :: forall a b f_a9VC f_a9VD f_a9VE f_a9VF f_a9VG f_a9VH f_a9VI f_a9VJ. (Functor f_a9VC, Functor f_a9VD, Functor f_a9VE, Functor f_a9VF, Functor f_a9VG, Functor f_a9VH, Functor f_a9VI, Functor f_a9VJ) => f_a9VC (f_a9VD (f_a9VE (f_a9VF (f_a9VG (f_a9VH (f_a9VI (f_a9VJ a))))))) -> (a -> b) -> f_a9VC (f_a9VD (f_a9VE (f_a9VF (f_a9VG (f_a9VH (f_a9VI (f_a9VJ b)))))))
infixl 1 <&&&&&&&&>
(<&&&&&&&&&>) :: forall a b f_a9VK f_a9VL f_a9VM f_a9VN f_a9VO f_a9VP f_a9VQ f_a9VR f_a9VS. (Functor f_a9VK, Functor f_a9VL, Functor f_a9VM, Functor f_a9VN, Functor f_a9VO, Functor f_a9VP, Functor f_a9VQ, Functor f_a9VR, Functor f_a9VS) => f_a9VK (f_a9VL (f_a9VM (f_a9VN (f_a9VO (f_a9VP (f_a9VQ (f_a9VR (f_a9VS a)))))))) -> (a -> b) -> f_a9VK (f_a9VL (f_a9VM (f_a9VN (f_a9VO (f_a9VP (f_a9VQ (f_a9VR (f_a9VS b))))))))
infixl 1 <&&&&&&&&&>
(<&&&&&&&&&&>) :: forall a b f_a9VT f_a9VU f_a9VV f_a9VW f_a9VX f_a9VY f_a9VZ f_a9W0 f_a9W1 f_a9W2. (Functor f_a9VT, Functor f_a9VU, Functor f_a9VV, Functor f_a9VW, Functor f_a9VX, Functor f_a9VY, Functor f_a9VZ, Functor f_a9W0, Functor f_a9W1, Functor f_a9W2) => f_a9VT (f_a9VU (f_a9VV (f_a9VW (f_a9VX (f_a9VY (f_a9VZ (f_a9W0 (f_a9W1 (f_a9W2 a))))))))) -> (a -> b) -> f_a9VT (f_a9VU (f_a9VV (f_a9VW (f_a9VX (f_a9VY (f_a9VZ (f_a9W0 (f_a9W1 (f_a9W2 b)))))))))
infixl 1 <&&&&&&&&&&>
(<&&&&&&&&&&&>) :: forall a b f_a9W3 f_a9W4 f_a9W5 f_a9W6 f_a9W7 f_a9W8 f_a9W9 f_a9Wa f_a9Wb f_a9Wc f_a9Wd. (Functor f_a9W3, Functor f_a9W4, Functor f_a9W5, Functor f_a9W6, Functor f_a9W7, Functor f_a9W8, Functor f_a9W9, Functor f_a9Wa, Functor f_a9Wb, Functor f_a9Wc, Functor f_a9Wd) => f_a9W3 (f_a9W4 (f_a9W5 (f_a9W6 (f_a9W7 (f_a9W8 (f_a9W9 (f_a9Wa (f_a9Wb (f_a9Wc (f_a9Wd a)))))))))) -> (a -> b) -> f_a9W3 (f_a9W4 (f_a9W5 (f_a9W6 (f_a9W7 (f_a9W8 (f_a9W9 (f_a9Wa (f_a9Wb (f_a9Wc (f_a9Wd b))))))))))
infixl 1 <&&&&&&&&&&&>
(<&&&&&&&&&&&&>) :: forall a b f_a9We f_a9Wf f_a9Wg f_a9Wh f_a9Wi f_a9Wj f_a9Wk f_a9Wl f_a9Wm f_a9Wn f_a9Wo f_a9Wp. (Functor f_a9We, Functor f_a9Wf, Functor f_a9Wg, Functor f_a9Wh, Functor f_a9Wi, Functor f_a9Wj, Functor f_a9Wk, Functor f_a9Wl, Functor f_a9Wm, Functor f_a9Wn, Functor f_a9Wo, Functor f_a9Wp) => f_a9We (f_a9Wf (f_a9Wg (f_a9Wh (f_a9Wi (f_a9Wj (f_a9Wk (f_a9Wl (f_a9Wm (f_a9Wn (f_a9Wo (f_a9Wp a))))))))))) -> (a -> b) -> f_a9We (f_a9Wf (f_a9Wg (f_a9Wh (f_a9Wi (f_a9Wj (f_a9Wk (f_a9Wl (f_a9Wm (f_a9Wn (f_a9Wo (f_a9Wp b)))))))))))
infixl 1 <&&&&&&&&&&&&>
(<&&&&&&&&&&&&&>) :: forall a b f_a9Wq f_a9Wr f_a9Ws f_a9Wt f_a9Wu f_a9Wv f_a9Ww f_a9Wx f_a9Wy f_a9Wz f_a9WA f_a9WB f_a9WC. (Functor f_a9Wq, Functor f_a9Wr, Functor f_a9Ws, Functor f_a9Wt, Functor f_a9Wu, Functor f_a9Wv, Functor f_a9Ww, Functor f_a9Wx, Functor f_a9Wy, Functor f_a9Wz, Functor f_a9WA, Functor f_a9WB, Functor f_a9WC) => f_a9Wq (f_a9Wr (f_a9Ws (f_a9Wt (f_a9Wu (f_a9Wv (f_a9Ww (f_a9Wx (f_a9Wy (f_a9Wz (f_a9WA (f_a9WB (f_a9WC a)))))))))))) -> (a -> b) -> f_a9Wq (f_a9Wr (f_a9Ws (f_a9Wt (f_a9Wu (f_a9Wv (f_a9Ww (f_a9Wx (f_a9Wy (f_a9Wz (f_a9WA (f_a9WB (f_a9WC b))))))))))))
infixl 1 <&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&>) :: forall a b f_a9WD f_a9WE f_a9WF f_a9WG f_a9WH f_a9WI f_a9WJ f_a9WK f_a9WL f_a9WM f_a9WN f_a9WO f_a9WP f_a9WQ. (Functor f_a9WD, Functor f_a9WE, Functor f_a9WF, Functor f_a9WG, Functor f_a9WH, Functor f_a9WI, Functor f_a9WJ, Functor f_a9WK, Functor f_a9WL, Functor f_a9WM, Functor f_a9WN, Functor f_a9WO, Functor f_a9WP, Functor f_a9WQ) => f_a9WD (f_a9WE (f_a9WF (f_a9WG (f_a9WH (f_a9WI (f_a9WJ (f_a9WK (f_a9WL (f_a9WM (f_a9WN (f_a9WO (f_a9WP (f_a9WQ a))))))))))))) -> (a -> b) -> f_a9WD (f_a9WE (f_a9WF (f_a9WG (f_a9WH (f_a9WI (f_a9WJ (f_a9WK (f_a9WL (f_a9WM (f_a9WN (f_a9WO (f_a9WP (f_a9WQ b)))))))))))))
infixl 1 <&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&>) :: forall a b f_a9WR f_a9WS f_a9WT f_a9WU f_a9WV f_a9WW f_a9WX f_a9WY f_a9WZ f_a9X0 f_a9X1 f_a9X2 f_a9X3 f_a9X4 f_a9X5. (Functor f_a9WR, Functor f_a9WS, Functor f_a9WT, Functor f_a9WU, Functor f_a9WV, Functor f_a9WW, Functor f_a9WX, Functor f_a9WY, Functor f_a9WZ, Functor f_a9X0, Functor f_a9X1, Functor f_a9X2, Functor f_a9X3, Functor f_a9X4, Functor f_a9X5) => f_a9WR (f_a9WS (f_a9WT (f_a9WU (f_a9WV (f_a9WW (f_a9WX (f_a9WY (f_a9WZ (f_a9X0 (f_a9X1 (f_a9X2 (f_a9X3 (f_a9X4 (f_a9X5 a)))))))))))))) -> (a -> b) -> f_a9WR (f_a9WS (f_a9WT (f_a9WU (f_a9WV (f_a9WW (f_a9WX (f_a9WY (f_a9WZ (f_a9X0 (f_a9X1 (f_a9X2 (f_a9X3 (f_a9X4 (f_a9X5 b))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&&>) :: forall a b f_a9X6 f_a9X7 f_a9X8 f_a9X9 f_a9Xa f_a9Xb f_a9Xc f_a9Xd f_a9Xe f_a9Xf f_a9Xg f_a9Xh f_a9Xi f_a9Xj f_a9Xk f_a9Xl. (Functor f_a9X6, Functor f_a9X7, Functor f_a9X8, Functor f_a9X9, Functor f_a9Xa, Functor f_a9Xb, Functor f_a9Xc, Functor f_a9Xd, Functor f_a9Xe, Functor f_a9Xf, Functor f_a9Xg, Functor f_a9Xh, Functor f_a9Xi, Functor f_a9Xj, Functor f_a9Xk, Functor f_a9Xl) => f_a9X6 (f_a9X7 (f_a9X8 (f_a9X9 (f_a9Xa (f_a9Xb (f_a9Xc (f_a9Xd (f_a9Xe (f_a9Xf (f_a9Xg (f_a9Xh (f_a9Xi (f_a9Xj (f_a9Xk (f_a9Xl a))))))))))))))) -> (a -> b) -> f_a9X6 (f_a9X7 (f_a9X8 (f_a9X9 (f_a9Xa (f_a9Xb (f_a9Xc (f_a9Xd (f_a9Xe (f_a9Xf (f_a9Xg (f_a9Xh (f_a9Xi (f_a9Xj (f_a9Xk (f_a9Xl b)))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&&&>) :: forall a b f_a9Xm f_a9Xn f_a9Xo f_a9Xp f_a9Xq f_a9Xr f_a9Xs f_a9Xt f_a9Xu f_a9Xv f_a9Xw f_a9Xx f_a9Xy f_a9Xz f_a9XA f_a9XB f_a9XC. (Functor f_a9Xm, Functor f_a9Xn, Functor f_a9Xo, Functor f_a9Xp, Functor f_a9Xq, Functor f_a9Xr, Functor f_a9Xs, Functor f_a9Xt, Functor f_a9Xu, Functor f_a9Xv, Functor f_a9Xw, Functor f_a9Xx, Functor f_a9Xy, Functor f_a9Xz, Functor f_a9XA, Functor f_a9XB, Functor f_a9XC) => f_a9Xm (f_a9Xn (f_a9Xo (f_a9Xp (f_a9Xq (f_a9Xr (f_a9Xs (f_a9Xt (f_a9Xu (f_a9Xv (f_a9Xw (f_a9Xx (f_a9Xy (f_a9Xz (f_a9XA (f_a9XB (f_a9XC a)))))))))))))))) -> (a -> b) -> f_a9Xm (f_a9Xn (f_a9Xo (f_a9Xp (f_a9Xq (f_a9Xr (f_a9Xs (f_a9Xt (f_a9Xu (f_a9Xv (f_a9Xw (f_a9Xx (f_a9Xy (f_a9Xz (f_a9XA (f_a9XB (f_a9XC b))))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&&&&>) :: forall a b f_a9XD f_a9XE f_a9XF f_a9XG f_a9XH f_a9XI f_a9XJ f_a9XK f_a9XL f_a9XM f_a9XN f_a9XO f_a9XP f_a9XQ f_a9XR f_a9XS f_a9XT f_a9XU. (Functor f_a9XD, Functor f_a9XE, Functor f_a9XF, Functor f_a9XG, Functor f_a9XH, Functor f_a9XI, Functor f_a9XJ, Functor f_a9XK, Functor f_a9XL, Functor f_a9XM, Functor f_a9XN, Functor f_a9XO, Functor f_a9XP, Functor f_a9XQ, Functor f_a9XR, Functor f_a9XS, Functor f_a9XT, Functor f_a9XU) => f_a9XD (f_a9XE (f_a9XF (f_a9XG (f_a9XH (f_a9XI (f_a9XJ (f_a9XK (f_a9XL (f_a9XM (f_a9XN (f_a9XO (f_a9XP (f_a9XQ (f_a9XR (f_a9XS (f_a9XT (f_a9XU a))))))))))))))))) -> (a -> b) -> f_a9XD (f_a9XE (f_a9XF (f_a9XG (f_a9XH (f_a9XI (f_a9XJ (f_a9XK (f_a9XL (f_a9XM (f_a9XN (f_a9XO (f_a9XP (f_a9XQ (f_a9XR (f_a9XS (f_a9XT (f_a9XU b)))))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&&&&&>) :: forall a b f_a9XV f_a9XW f_a9XX f_a9XY f_a9XZ f_a9Y0 f_a9Y1 f_a9Y2 f_a9Y3 f_a9Y4 f_a9Y5 f_a9Y6 f_a9Y7 f_a9Y8 f_a9Y9 f_a9Ya f_a9Yb f_a9Yc f_a9Yd. (Functor f_a9XV, Functor f_a9XW, Functor f_a9XX, Functor f_a9XY, Functor f_a9XZ, Functor f_a9Y0, Functor f_a9Y1, Functor f_a9Y2, Functor f_a9Y3, Functor f_a9Y4, Functor f_a9Y5, Functor f_a9Y6, Functor f_a9Y7, Functor f_a9Y8, Functor f_a9Y9, Functor f_a9Ya, Functor f_a9Yb, Functor f_a9Yc, Functor f_a9Yd) => f_a9XV (f_a9XW (f_a9XX (f_a9XY (f_a9XZ (f_a9Y0 (f_a9Y1 (f_a9Y2 (f_a9Y3 (f_a9Y4 (f_a9Y5 (f_a9Y6 (f_a9Y7 (f_a9Y8 (f_a9Y9 (f_a9Ya (f_a9Yb (f_a9Yc (f_a9Yd a)))))))))))))))))) -> (a -> b) -> f_a9XV (f_a9XW (f_a9XX (f_a9XY (f_a9XZ (f_a9Y0 (f_a9Y1 (f_a9Y2 (f_a9Y3 (f_a9Y4 (f_a9Y5 (f_a9Y6 (f_a9Y7 (f_a9Y8 (f_a9Y9 (f_a9Ya (f_a9Yb (f_a9Yc (f_a9Yd b))))))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&&&&&>
(<&&&&&&&&&&&&&&&&&&&&>) :: forall a b f_a9Ye f_a9Yf f_a9Yg f_a9Yh f_a9Yi f_a9Yj f_a9Yk f_a9Yl f_a9Ym f_a9Yn f_a9Yo f_a9Yp f_a9Yq f_a9Yr f_a9Ys f_a9Yt f_a9Yu f_a9Yv f_a9Yw f_a9Yx. (Functor f_a9Ye, Functor f_a9Yf, Functor f_a9Yg, Functor f_a9Yh, Functor f_a9Yi, Functor f_a9Yj, Functor f_a9Yk, Functor f_a9Yl, Functor f_a9Ym, Functor f_a9Yn, Functor f_a9Yo, Functor f_a9Yp, Functor f_a9Yq, Functor f_a9Yr, Functor f_a9Ys, Functor f_a9Yt, Functor f_a9Yu, Functor f_a9Yv, Functor f_a9Yw, Functor f_a9Yx) => f_a9Ye (f_a9Yf (f_a9Yg (f_a9Yh (f_a9Yi (f_a9Yj (f_a9Yk (f_a9Yl (f_a9Ym (f_a9Yn (f_a9Yo (f_a9Yp (f_a9Yq (f_a9Yr (f_a9Ys (f_a9Yt (f_a9Yu (f_a9Yv (f_a9Yw (f_a9Yx a))))))))))))))))))) -> (a -> b) -> f_a9Ye (f_a9Yf (f_a9Yg (f_a9Yh (f_a9Yi (f_a9Yj (f_a9Yk (f_a9Yl (f_a9Ym (f_a9Yn (f_a9Yo (f_a9Yp (f_a9Yq (f_a9Yr (f_a9Ys (f_a9Yt (f_a9Yu (f_a9Yv (f_a9Yw (f_a9Yx b)))))))))))))))))))
infixl 1 <&&&&&&&&&&&&&&&&&&&&>

-- | An infix synonym for <a>fmap</a>.
--   
--   The name of this operator is an allusion to <tt>$</tt>. Note the
--   similarities between their types:
--   
--   <pre>
--    ($)  ::              (a -&gt; b) -&gt;   a -&gt;   b
--   (&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b
--   </pre>
--   
--   Whereas <tt>$</tt> is function application, <a>&lt;$&gt;</a> is
--   function application lifted over a <a>Functor</a>.
--   
--   <h4><b>Examples</b></h4>
--   
--   Convert from a <tt><tt>Maybe</tt> <tt>Int</tt></tt> to a
--   <tt><tt>Maybe</tt> <tt>String</tt></tt> using <tt>show</tt>:
--   
--   <pre>
--   &gt;&gt;&gt; show &lt;$&gt; Nothing
--   Nothing
--   
--   &gt;&gt;&gt; show &lt;$&gt; Just 3
--   Just "3"
--   </pre>
--   
--   Convert from an <tt><tt>Either</tt> <tt>Int</tt> <tt>Int</tt></tt> to
--   an <tt><tt>Either</tt> <tt>Int</tt></tt> <tt>String</tt> using
--   <tt>show</tt>:
--   
--   <pre>
--   &gt;&gt;&gt; show &lt;$&gt; Left 17
--   Left 17
--   
--   &gt;&gt;&gt; show &lt;$&gt; Right 17
--   Right "17"
--   </pre>
--   
--   Double each element of a list:
--   
--   <pre>
--   &gt;&gt;&gt; (*2) &lt;$&gt; [1,2,3]
--   [2,4,6]
--   </pre>
--   
--   Apply <tt>even</tt> to the second element of a pair:
--   
--   <pre>
--   &gt;&gt;&gt; even &lt;$&gt; (2,2)
--   (2,True)
--   </pre>
(<$>) :: Functor f => (a -> b) -> f a -> f b
infixl 4 <$>
declareInfixFmapForFunctorCompositionOfDegree :: Int -> Q [Dec]
declareFlippedInfixFmapForFunctorCompositionOfDegree :: Int -> Q [Dec]

-- | <i>Deprecated: Use
--   <a>declareInfixFmapForFunctorCompositionOfDegree</a> and/or reconsider
--   your life choices.</i>
declareInfixFmapN :: Int -> Q [Dec]

-- | <i>Deprecated: Use
--   <a>declareFlippedInfixFmapForFunctorCompositionOfDegree</a> and/or
--   reconsider your life choices.</i>
declareInfixPamfN :: Int -> Q [Dec]
