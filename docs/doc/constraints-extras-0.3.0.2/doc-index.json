[{"display_html":"<span class=\"keyword\">class</span> p (f a) =&gt; <a href=\"#t:ComposeC\">ComposeC</a> (p :: k2 -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: k1 -&gt; k2) (a :: k1)","name":"ComposeC","module":"Data.Constraint.Compose","link":"Data-Constraint-Compose.html#t:ComposeC"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ArgDict\">ArgDict</a> (c :: k -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: k -&gt; *) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ConstraintsFor\">ConstraintsFor</a> f (c :: k -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a></li><li><a href=\"#v:argDict\">argDict</a> :: <a href=\"Data-Constraint-Extras.html#t:ConstraintsFor\" title=\"Data.Constraint.Extras\">ConstraintsFor</a> f c =&gt; f a -&gt; <a href=\"../constraints-0.11/Data-Constraint.html#t:Dict\" title=\"Data.Constraint\">Dict</a> (c a)</li></ul>","name":"ArgDict argDict ConstraintsFor","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:ArgDict"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConstraintsFor-39-\">ConstraintsFor'</a> f (c :: k -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (g :: k' -&gt; k) = <a href=\"Data-Constraint-Extras.html#t:ConstraintsFor\" title=\"Data.Constraint.Extras\">ConstraintsFor</a> f (<a href=\"Data-Constraint-Compose.html#t:ComposeC\" title=\"Data.Constraint.Compose\">ComposeC</a> c g)","name":"ConstraintsFor'","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:ConstraintsFor-39-"},{"display_html":"<a href=\"#v:argDict-39-\">argDict'</a> :: <span class=\"keyword\">forall</span> f c g a. <a href=\"Data-Constraint-Extras.html#t:Has-39-\" title=\"Data.Constraint.Extras\">Has'</a> c f g =&gt; f a -&gt; <a href=\"../constraints-0.11/Data-Constraint.html#t:Dict\" title=\"Data.Constraint\">Dict</a> (c (g a))","name":"argDict'","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:argDict-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ConstraintsForV\">ConstraintsForV</a> (f :: (k -&gt; k') -&gt; *) (c :: k' -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (g :: k) = <a href=\"Data-Constraint-Extras.html#t:ConstraintsFor\" title=\"Data.Constraint.Extras\">ConstraintsFor</a> f (FlipC (<a href=\"Data-Constraint-Compose.html#t:ComposeC\" title=\"Data.Constraint.Compose\">ComposeC</a> c) g)","name":"ConstraintsForV","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:ConstraintsForV"},{"display_html":"<a href=\"#v:argDictV\">argDictV</a> :: <span class=\"keyword\">forall</span> f c g v. <a href=\"Data-Constraint-Extras.html#t:HasV\" title=\"Data.Constraint.Extras\">HasV</a> c f g =&gt; f v -&gt; <a href=\"../constraints-0.11/Data-Constraint.html#t:Dict\" title=\"Data.Constraint\">Dict</a> (c (v g))","name":"argDictV","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:argDictV"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ArgDictV\">ArgDictV</a> f c = <a href=\"Data-Constraint-Extras.html#t:ArgDict\" title=\"Data.Constraint.Extras\">ArgDict</a> f c","name":"ArgDictV","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:ArgDictV"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Has\">Has</a> (c :: k -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) f = (<a href=\"Data-Constraint-Extras.html#t:ArgDict\" title=\"Data.Constraint.Extras\">ArgDict</a> c f, <a href=\"Data-Constraint-Extras.html#t:ConstraintsFor\" title=\"Data.Constraint.Extras\">ConstraintsFor</a> f c)","name":"Has","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:Has"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Has-39-\">Has'</a> (c :: k -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) f (g :: k' -&gt; k) = (<a href=\"Data-Constraint-Extras.html#t:ArgDict\" title=\"Data.Constraint.Extras\">ArgDict</a> (<a href=\"Data-Constraint-Compose.html#t:ComposeC\" title=\"Data.Constraint.Compose\">ComposeC</a> c g) f, <a href=\"Data-Constraint-Extras.html#t:ConstraintsFor-39-\" title=\"Data.Constraint.Extras\">ConstraintsFor'</a> f c g)","name":"Has'","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:Has-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HasV\">HasV</a> c f g = (<a href=\"Data-Constraint-Extras.html#t:ArgDict\" title=\"Data.Constraint.Extras\">ArgDict</a> (FlipC (<a href=\"Data-Constraint-Compose.html#t:ComposeC\" title=\"Data.Constraint.Compose\">ComposeC</a> c) g) f, <a href=\"Data-Constraint-Extras.html#t:ConstraintsForV\" title=\"Data.Constraint.Extras\">ConstraintsForV</a> f c g)","name":"HasV","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:HasV"},{"display_html":"<a href=\"#v:has\">has</a> :: <span class=\"keyword\">forall</span> c f a r. <a href=\"Data-Constraint-Extras.html#t:Has\" title=\"Data.Constraint.Extras\">Has</a> c f =&gt; f a -&gt; (c a =&gt; r) -&gt; r","name":"has","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:has"},{"display_html":"<a href=\"#v:has-39-\">has'</a> :: <span class=\"keyword\">forall</span> c g f a r. <a href=\"Data-Constraint-Extras.html#t:Has-39-\" title=\"Data.Constraint.Extras\">Has'</a> c f g =&gt; f a -&gt; (c (g a) =&gt; r) -&gt; r","name":"has'","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:has-39-"},{"display_html":"<a href=\"#v:hasV\">hasV</a> :: <span class=\"keyword\">forall</span> c g f v r. <a href=\"Data-Constraint-Extras.html#t:HasV\" title=\"Data.Constraint.Extras\">HasV</a> c f g =&gt; f v -&gt; (c (v g) =&gt; r) -&gt; r","name":"hasV","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:hasV"},{"display_html":"<a href=\"#v:whichever\">whichever</a> :: <span class=\"keyword\">forall</span> c t a r. <a href=\"../constraints-0.11/Data-Constraint-Forall.html#t:ForallF\" title=\"Data.Constraint.Forall\">ForallF</a> c t =&gt; (c (t a) =&gt; r) -&gt; r","name":"whichever","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#v:whichever"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Implies1\">Implies1</a> c d <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:implies1\">implies1</a> :: c a <a href=\"../constraints-0.11/Data-Constraint.html#t::-45-\" title=\"Data.Constraint\">:-</a> d a</li></ul>","name":"Implies1 implies1","module":"Data.Constraint.Extras","link":"Data-Constraint-Extras.html#t:Implies1"},{"display_html":"<a href=\"#v:deriveArgDict\">deriveArgDict</a> :: <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveArgDict","module":"Data.Constraint.Extras.TH","link":"Data-Constraint-Extras-TH.html#v:deriveArgDict"},{"display_html":"<a href=\"#v:deriveArgDictV\">deriveArgDictV</a> :: <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveArgDictV","module":"Data.Constraint.Extras.TH","link":"Data-Constraint-Extras-TH.html#v:deriveArgDictV"},{"display_html":"<a href=\"#v:gadtIndices\">gadtIndices</a> :: <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../base-4.12.0.0/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a> <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Type\" title=\"Language.Haskell.TH.Syntax\">Type</a>]","name":"gadtIndices","module":"Data.Constraint.Extras.TH","link":"Data-Constraint-Extras-TH.html#v:gadtIndices"}]