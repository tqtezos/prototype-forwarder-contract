-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | convert types into string values in haskell
--   
--   Convert types into string values in Haskell.
--   
--   More information can be found in the <a>hackage's haddock</a> or the
--   <a>updated haddock</a>.
@package show-type
@version 0.1.1

module Type.Showtype

-- | Conversion of types to readable <a>String</a>s. Analogous to
--   <a>Show</a>.
class Showtype (a :: k)

-- | Convert a type <tt>a</tt> to a readable <a>String</a>. Analogous to
--   <a>show</a> in <a>Show</a>.
showtype :: Showtype a => proxy a -> String

-- | Convert a type <tt>a</tt> to a readable <a>String</a> with additional
--   arguments. Analogous to <a>showsPrec</a> in <a>Show</a>.
showtypesPrec :: Showtype a => Int -> proxy a -> String -> String
printtype :: Showtype a => proxy a -> IO ()
instance forall k (a :: k) (as :: [k]). (Type.Showtype.Showtype a, Type.Showtype.Showlisttype as) => Type.Showtype.Showtype (a : as)
instance Type.Showtype.Showlisttype '[]
instance forall k (a :: k) (as :: [k]). (Type.Showtype.Showtype a, Type.Showtype.Showlisttype as) => Type.Showtype.Showlisttype (a : as)
instance Type.Showtype.Showtype 'GHC.Types.False
instance Type.Showtype.Showtype 'GHC.Types.True
instance Type.Showtype.Showtype 'GHC.Types.LT
instance Type.Showtype.Showtype 'GHC.Types.EQ
instance Type.Showtype.Showtype 'GHC.Types.GT
instance GHC.TypeNats.KnownNat n => Type.Showtype.Showtype n
instance GHC.TypeLits.KnownSymbol s => Type.Showtype.Showtype s
instance Type.Showtype.Showtype 'GHC.Maybe.Nothing
instance forall a1 (a2 :: a1). Type.Showtype.Showtype a2 => Type.Showtype.Showtype ('GHC.Maybe.Just a2)
instance forall b a1 (a2 :: a1). Type.Showtype.Showtype a2 => Type.Showtype.Showtype ('Data.Either.Left a2)
instance forall a1 b (a2 :: b). Type.Showtype.Showtype a2 => Type.Showtype.Showtype ('Data.Either.Right a2)
instance Type.Showtype.Showtype '[]
instance Type.Showtype.Showtype '()
instance forall k1 k2 (a :: k2) (b :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b) => Type.Showtype.Showtype '(a, b)
instance forall k1 k2 k3 (a :: k3) (b :: k2) (c :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c) => Type.Showtype.Showtype '(a, b, c)
instance forall k1 k2 k3 k4 (a :: k4) (b :: k3) (c :: k2) (d :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d) => Type.Showtype.Showtype '(a, b, c, d)
instance forall k1 k2 k3 k4 k5 (a :: k5) (b :: k4) (c :: k3) (d :: k2) (e :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e) => Type.Showtype.Showtype '(a, b, c, d, e)
instance forall k1 k2 k3 k4 k5 k6 (a :: k6) (b :: k5) (c :: k4) (d :: k3) (e :: k2) (f :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e, Type.Showtype.Showtype f) => Type.Showtype.Showtype '(a, b, c, d, e, f)
instance forall k1 k2 k3 k4 k5 k6 k7 (a :: k7) (b :: k6) (c :: k5) (d :: k4) (e :: k3) (f :: k2) (g :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e, Type.Showtype.Showtype f, Type.Showtype.Showtype g) => Type.Showtype.Showtype '(a, b, c, d, e, f, g)
instance forall k1 k2 k3 k4 k5 k6 k7 k8 (a :: k8) (b :: k7) (c :: k6) (d :: k5) (e :: k4) (f :: k3) (g :: k2) (h :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e, Type.Showtype.Showtype f, Type.Showtype.Showtype g, Type.Showtype.Showtype h) => Type.Showtype.Showtype '(a, b, c, d, e, f, g, h)
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 (a :: k9) (b :: k8) (c :: k7) (d :: k6) (e :: k5) (f :: k4) (g :: k3) (h :: k2) (i :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e, Type.Showtype.Showtype f, Type.Showtype.Showtype g, Type.Showtype.Showtype h, Type.Showtype.Showtype i) => Type.Showtype.Showtype '(a, b, c, d, e, f, g, h, i)
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 k10 (a :: k10) (b :: k9) (c :: k8) (d :: k7) (e :: k6) (f :: k5) (g :: k4) (h :: k3) (i :: k2) (j :: k1). (Type.Showtype.Showtype a, Type.Showtype.Showtype b, Type.Showtype.Showtype c, Type.Showtype.Showtype d, Type.Showtype.Showtype e, Type.Showtype.Showtype f, Type.Showtype.Showtype g, Type.Showtype.Showtype h, Type.Showtype.Showtype i, Type.Showtype.Showtype j) => Type.Showtype.Showtype '(a, b, c, d, e, f, g, h, i, j)
instance Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k (a :: k -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 (a :: k1 -> k2 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 (a :: k1 -> k2 -> k3 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 (a :: k1 -> k2 -> k3 -> k4 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> k9 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 k10 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> k9 -> k10 -> *). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k (a :: k -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 (a :: k1 -> k2 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 (a :: k1 -> k2 -> k3 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 (a :: k1 -> k2 -> k3 -> k4 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> k9 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
instance forall k1 k2 k3 k4 k5 k6 k7 k8 k9 k10 (a :: k1 -> k2 -> k3 -> k4 -> k5 -> k6 -> k7 -> k8 -> k9 -> k10 -> GHC.Types.Constraint). Data.Typeable.Internal.Typeable a => Type.Showtype.Showtype a
