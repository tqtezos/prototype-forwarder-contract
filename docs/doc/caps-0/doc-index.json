[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Capabilities\">Capabilities</a> (caps :: [CapK]) (m :: MonadK)","name":"Capabilities","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:Capabilities"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CapsT\">CapsT</a> caps m = <a href=\"../transformers-0.5.6.2/Control-Monad-Trans-Reader.html#t:ReaderT\" title=\"Control.Monad.Trans.Reader\">ReaderT</a> (<a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m) m","name":"CapsT","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:CapsT"},{"display_html":"<a href=\"#v:emptyCaps\">emptyCaps</a> :: <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> '[] m","name":"emptyCaps","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:emptyCaps"},{"display_html":"<a href=\"#v:buildCaps\">buildCaps</a> :: <span class=\"keyword\">forall</span> caps m. <a href=\"Monad-Capabilities.html#t:CapabilitiesBuilder\" title=\"Monad.Capabilities\">CapabilitiesBuilder</a> caps caps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m","name":"buildCaps","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:buildCaps"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CapabilitiesBuilder\">CapabilitiesBuilder</a> (allCaps :: [CapK]) (caps :: [CapK]) (m :: MonadK) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:AddCap\">AddCap</a> :: (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCaps\" title=\"Monad.Capabilities\">HasCaps</a> icaps allCaps, <a href=\"Monad-Capabilities.html#t:HasNoCap\" title=\"Monad.Capabilities\">HasNoCap</a> cap caps) =&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> cap icaps m -&gt; <a href=\"Monad-Capabilities.html#t:CapabilitiesBuilder\" title=\"Monad.Capabilities\">CapabilitiesBuilder</a> allCaps caps m -&gt; <a href=\"Monad-Capabilities.html#t:CapabilitiesBuilder\" title=\"Monad.Capabilities\">CapabilitiesBuilder</a> allCaps (cap ': caps) m</li><li><a href=\"#v:BaseCaps\">BaseCaps</a> :: <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:CapabilitiesBuilder\" title=\"Monad.Capabilities\">CapabilitiesBuilder</a> allCaps caps m</li></ul>","name":"CapabilitiesBuilder AddCap BaseCaps","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:CapabilitiesBuilder"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CapImpl\">CapImpl</a> cap icaps m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:CapImpl\">CapImpl</a> :: WithSpine icaps =&gt; {..} -&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> cap icaps m</li></ul>","name":"CapImpl CapImpl getCapImpl","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:CapImpl"},{"display_html":"<a href=\"#v:getCap\">getCap</a> :: <span class=\"keyword\">forall</span> cap m caps. (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> cap caps) =&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; cap (<a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m)","name":"getCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:getCap"},{"display_html":"<a href=\"#v:overrideCap\">overrideCap</a> :: (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> cap caps, <a href=\"Monad-Capabilities.html#t:HasCaps\" title=\"Monad.Capabilities\">HasCaps</a> icaps caps) =&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> cap icaps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m","name":"overrideCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:overrideCap"},{"display_html":"<a href=\"#v:addCap\">addCap</a> :: (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasNoCap\" title=\"Monad.Capabilities\">HasNoCap</a> cap caps, <a href=\"Monad-Capabilities.html#t:HasCaps\" title=\"Monad.Capabilities\">HasCaps</a> icaps (cap ': caps)) =&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> cap icaps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> (cap ': caps) m","name":"addCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:addCap"},{"display_html":"<a href=\"#v:insertCap\">insertCap</a> :: (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCaps\" title=\"Monad.Capabilities\">HasCaps</a> icaps (cap ': caps)) =&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> cap icaps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> (cap ': caps) m","name":"insertCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:insertCap"},{"display_html":"<a href=\"#v:withCap\">withCap</a> :: (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> cap caps) =&gt; (cap (<a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m) -&gt; <a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m a) -&gt; <a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m a","name":"withCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:withCap"},{"display_html":"<a href=\"#v:checkCap\">checkCap</a> :: <span class=\"keyword\">forall</span> cap caps m. <a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap =&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:HasCapDecision\" title=\"Monad.Capabilities\">HasCapDecision</a> cap caps","name":"checkCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:checkCap"},{"display_html":"<a href=\"#v:adjustCap\">adjustCap</a> :: <span class=\"keyword\">forall</span> cap caps m. (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> cap, <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> cap caps) =&gt; (<span class=\"keyword\">forall</span> caps'. cap (<a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps' m) -&gt; cap (<a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps' m)) -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m -&gt; <a href=\"Monad-Capabilities.html#t:Capabilities\" title=\"Monad.Capabilities\">Capabilities</a> caps m","name":"adjustCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:adjustCap"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Context\">Context</a> x (m :: MonadK) = <a href=\"#v:Context\">Context</a> x","name":"Context Context","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:Context"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"../base-4.12.0.0/Type-Reflection.html#t:Typeable\" title=\"Type.Reflection\">Typeable</a> x, <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> (<a href=\"Monad-Capabilities.html#t:Context\" title=\"Monad.Capabilities\">Context</a> x) caps) =&gt; <a href=\"#t:HasContext\">HasContext</a> x caps","name":"HasContext","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:HasContext"},{"display_html":"<a href=\"#v:newContext\">newContext</a> :: <span class=\"keyword\">forall</span> x m. x -&gt; <a href=\"Monad-Capabilities.html#t:CapImpl\" title=\"Monad.Capabilities\">CapImpl</a> (<a href=\"Monad-Capabilities.html#t:Context\" title=\"Monad.Capabilities\">Context</a> x) '[] m","name":"newContext","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:newContext"},{"display_html":"<a href=\"#v:askContext\">askContext</a> :: (<a href=\"Monad-Capabilities.html#t:HasContext\" title=\"Monad.Capabilities\">HasContext</a> x caps, <a href=\"../base-4.12.0.0/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m) =&gt; <a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m x","name":"askContext","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:askContext"},{"display_html":"<a href=\"#v:localContext\">localContext</a> :: <span class=\"keyword\">forall</span> x caps m a. <a href=\"Monad-Capabilities.html#t:HasContext\" title=\"Monad.Capabilities\">HasContext</a> x caps =&gt; (x -&gt; x) -&gt; <a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m a -&gt; <a href=\"Monad-Capabilities.html#t:CapsT\" title=\"Monad.Capabilities\">CapsT</a> caps m a","name":"localContext","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:localContext"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:HasCap\">HasCap</a> cap caps :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"HasCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:HasCap"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:HasCaps\">HasCaps</a> icaps caps :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"HasCaps","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:HasCaps"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:HasNoCap\">HasNoCap</a> cap caps :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"HasNoCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:HasNoCap"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HasCapDecision\">HasCapDecision</a> cap caps <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:HasNoCap\">HasNoCap</a> :: <a href=\"Monad-Capabilities.html#t:HasNoCap\" title=\"Monad.Capabilities\">HasNoCap</a> cap caps =&gt; <a href=\"Monad-Capabilities.html#t:HasCapDecision\" title=\"Monad.Capabilities\">HasCapDecision</a> cap caps</li><li><a href=\"#v:HasCap\">HasCap</a> :: <a href=\"Monad-Capabilities.html#t:HasCap\" title=\"Monad.Capabilities\">HasCap</a> cap caps =&gt; <a href=\"Monad-Capabilities.html#t:HasCapDecision\" title=\"Monad.Capabilities\">HasCapDecision</a> cap caps</li></ul>","name":"HasCapDecision HasCap HasNoCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#t:HasCapDecision"},{"display_html":"<a href=\"#v:makeCap\">makeCap</a> :: <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.14.0.0/Language-Haskell-TH-Lib-Internal.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib.Internal\">DecsQ</a>","name":"makeCap","module":"Monad.Capabilities","link":"Monad-Capabilities.html#v:makeCap"}]