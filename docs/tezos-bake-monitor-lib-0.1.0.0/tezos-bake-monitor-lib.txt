-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Shared types and code between tezos-bake-monitor and tezos-bake-central.
--   
--   Shared types and code between tezos-bake-monitor and
--   tezos-bake-central.
@package tezos-bake-monitor-lib
@version 0.1.0.0


-- | Provides online calculation of the the lowest common ancestor in
--   <i>O(log h)</i> by compressing the spine of the paths using a
--   skew-binary random access list.
--   
--   This library implements the technique described in my talk
--   
--   
--   <a>http://www.slideshare.net/ekmett/skewbinary-online-lowest-common-ancestor-search</a>
--   
--   to improve the known asymptotic bounds on both online lowest common
--   ancestor search
--   
--   <a>http://en.wikipedia.org/wiki/Lowest_common_ancestor</a>
--   
--   and the online level ancestor problem:
--   
--   <a>http://en.wikipedia.org/wiki/Level_ancestor_problem</a>
--   
--   Algorithms used here assume that the key values chosen for <tt>k</tt>
--   are globally unique.
--   
--   This version provides access to a monoidal "summary" of the elided
--   path for many operations.
module Data.LCA.Online.Polymorphic

-- | A compressed <a>Path</a> as a skew binary random access list
data Path k a

-- | Convert a <a>Path</a> to a list of <tt>(ID, value)</tt> pairs.
toList :: Path k a -> [(k, a)]

-- | Build a <a>Path</a> from a list of <tt>(ID, value)</tt> pairs.
fromList :: Monoid a => [(k, a)] -> Path k a

-- | <i>O(n)</i> Re-annotate a <a>Path</a> full of monoidal values using a
--   different <a>Monoid</a>.
map :: Monoid b => (a -> b) -> Path k a -> Path k b

-- | <i>O(n)</i> Re-annotate a <a>Path</a> full of monoidal values/
--   
--   Unlike <a>map</a>, <tt><a>mapHom</a> f</tt> assumes that <tt>f</tt> is
--   a <a>Monoid</a> homomorphism, that is to say you must ensure
--   
--   <pre>
--   f a `<tt>mappend'</tt> f b = f (a `<tt>mappend'</tt> b)
--   f <a>mempty</a> = <a>mempty</a>
--   </pre>
mapHom :: (a -> b) -> Path k a -> Path k b

-- | <i>O(n)</i> Re-annotate a <a>Path</a> full of monoidal values with
--   access to the key.
mapWithKey :: Monoid b => (k -> a -> b) -> Path k a -> Path k b

-- | Traverse a <a>Path</a> yielding a new monoidal annotation.
traverseP :: (Applicative f, Monoid b) => (a -> f b) -> Path k a -> f (Path k b)

-- | Traverse a <a>Path</a> with access to the node IDs.
traverseWithKey :: (Applicative f, Monoid b) => (k -> a -> f b) -> Path k a -> f (Path k b)

-- | The empty <a>Path</a>
empty :: Path k a

-- | <i>O(1)</i> Invariant: most operations assume that the keys <tt>k</tt>
--   are globally unique
--   
--   Extend the <a>Path</a> with a new node ID and value.
cons :: Monoid a => k -> a -> Path k a -> Path k a

-- | <i>O(1)</i> Extract the node ID and value from the newest node on the
--   <a>Path</a>.
uncons :: Monoid a => Path k a -> Maybe (k, a, Path k a)

-- | <i>O(1)</i> Extract the node ID and value from the newest node on the
--   <a>Path</a>, slightly faster than <a>uncons</a>.
view :: Monoid a => Path k a -> View k Path a

-- | Test whether the structure is empty. The default implementation is
--   optimized for structures that are similar to cons-lists, because there
--   is no general way to do better.
null :: Foldable t => t a -> Bool

-- | Returns the size/length of a finite structure as an <a>Int</a>. The
--   default implementation is optimized for structures that are similar to
--   cons-lists, because there is no general way to do better.
length :: Foldable t => t a -> Int

-- | Extract a monoidal summary of a <a>Path</a>.
measure :: Monoid a => Path k a -> a

-- | <i>O(log h)</i> <tt>xs `<tt>isAncestorOf'</tt> ys</tt> holds when
--   <tt>xs</tt> is a prefix starting at the root of path <tt>ys</tt>.
isAncestorOf :: (Monoid b, Eq k) => Path k a -> Path k b -> Bool

-- | <i>O(log (h - k))</i> to <tt><a>keep</a> k</tt> elements of
--   <a>Path</a> of <a>length</a> <tt>h</tt>
--   
--   This solves the online version of the "level ancestor problem" with no
--   preprocessing in <i>O(log h)</i> time, improving known complexity
--   bounds.
--   
--   <a>http://en.wikipedia.org/wiki/Level_ancestor_problem</a>
keep :: Monoid a => Int -> Path k a -> Path k a

-- | <i>O(log (h - k))</i> to keep <tt>k</tt> elements of <a>Path</a> of
--   <a>length</a> <tt>h</tt>, and provide a monoidal summary of the
--   dropped elements using a supplied monoid homomorphism.
mkeep :: (Monoid a, Monoid b) => (a -> b) -> Int -> Path k a -> (b, Path k a)

-- | <i>O(log k)</i> to <tt><a>drop</a> k</tt> elements from a <a>Path</a>
drop :: Monoid a => Int -> Path k a -> Path k a

-- | <i>O(log k)</i> to drop <tt>k</tt> elements from a <a>Path</a> and
--   provide a monoidal summary of the dropped elements using a suplied
--   monoid homomorphism
mdrop :: (Monoid a, Monoid b) => (a -> b) -> Int -> Path k a -> (b, Path k a)

-- | <i>O(1)</i> Compare to see if two trees have the same leaf key
(~=) :: Eq k => Path k a -> Path k b -> Bool
infix 4 ~=

-- | <i>O(log h)</i> Compute the lowest common ancestor of two paths
lca :: (Monoid a, Monoid b, Eq k) => Path k a -> Path k b -> Path k a

-- | <i>O(log h)</i> Compute the lowest common ancestor of two paths along
--   with a monoidal summary of their respective tails using the supplied
--   monoid homomorphisms.
mlca :: (Monoid a, Monoid b, Monoid c, Monoid d, Eq k) => (a -> c) -> (b -> d) -> Path k a -> Path k b -> (c, Path k a, d, Path k b)

-- | Provides a consistent <a>View</a> for peeling off the bottom node of a
--   path.
data View k f a
Root :: View k f a
Node :: !k -> a -> f k a -> View k f a
nearest :: (Foldable f, Monoid a, Monoid b, Eq k) => Path k b -> f (Path k a) -> Maybe (Path k a)
concatPaths :: Monoid a => Path k a -> Path k a -> Path k a
instance (GHC.Show.Show k, GHC.Show.Show a, GHC.Show.Show (f k a)) => GHC.Show.Show (Data.LCA.Online.Polymorphic.View k f a)
instance (GHC.Read.Read k, GHC.Read.Read a, GHC.Read.Read (f k a)) => GHC.Read.Read (Data.LCA.Online.Polymorphic.View k f a)
instance (GHC.Classes.Ord k, GHC.Classes.Ord a, GHC.Classes.Ord (f k a)) => GHC.Classes.Ord (Data.LCA.Online.Polymorphic.View k f a)
instance (GHC.Classes.Eq k, GHC.Classes.Eq a, GHC.Classes.Eq (f k a)) => GHC.Classes.Eq (Data.LCA.Online.Polymorphic.View k f a)
instance GHC.Generics.Generic (Data.LCA.Online.Polymorphic.Path k a)
instance (GHC.Read.Read a, GHC.Read.Read k) => GHC.Read.Read (Data.LCA.Online.Polymorphic.Path k a)
instance (GHC.Show.Show a, GHC.Show.Show k) => GHC.Show.Show (Data.LCA.Online.Polymorphic.Path k a)
instance GHC.Generics.Generic (Data.LCA.Online.Polymorphic.Tree k a)
instance (GHC.Read.Read a, GHC.Read.Read k) => GHC.Read.Read (Data.LCA.Online.Polymorphic.Tree k a)
instance (GHC.Show.Show a, GHC.Show.Show k) => GHC.Show.Show (Data.LCA.Online.Polymorphic.Tree k a)
instance GHC.Base.Functor (f k) => GHC.Base.Functor (Data.LCA.Online.Polymorphic.View k f)
instance Data.Foldable.Foldable (f k) => Data.Foldable.Foldable (Data.LCA.Online.Polymorphic.View k f)
instance Data.Traversable.Traversable (f k) => Data.Traversable.Traversable (Data.LCA.Online.Polymorphic.View k f)
instance (Control.DeepSeq.NFData k, Control.DeepSeq.NFData a) => Control.DeepSeq.NFData (Data.LCA.Online.Polymorphic.Path k a)
instance Data.Foldable.Foldable (Data.LCA.Online.Polymorphic.Path k)
instance (Control.DeepSeq.NFData k, Control.DeepSeq.NFData a) => Control.DeepSeq.NFData (Data.LCA.Online.Polymorphic.Tree k a)
instance Data.Foldable.Foldable (Data.LCA.Online.Polymorphic.Tree k)

module Tezos.Common.Json
parseAsString :: forall a. (Read a, Typeable a) => Value -> Parser a
parseStringEncodedIntegral :: (Read a, Integral a, Typeable a) => Value -> Parser (StringEncode a)
deriveTezosJson :: Name -> Q [Dec]
deriveTezosToJson :: Name -> Q [Dec]
deriveTezosJsonKind :: String -> Name -> Q [Dec]
tezosJsonOptions :: Options
tezosJsonOptionsKind :: String -> Options

-- | JavaScript compatibility forces us and the Tezos JSON/RPC to encode
--   any integer with more than 32 bits into a decimal string format.
--   StringEncode helps us safely represent a range of different types for
--   which we must always respect this property.
newtype StringEncode a
StringEncode :: a -> StringEncode a
type TezosInt64 = StringEncode Int64
type TezosBigNum = StringEncode Integer

-- | WARNING: Due to a major oversight on the part of Tezos Core, this type
--   is incorrectly named. It represents _non-negative_ integers (including
--   zero), not _strictly positive_ integers. Therefore the Haskell Natural
--   type is indeed the correct counterpart.
type TezosPositiveBigNum = StringEncode Natural

-- | "$ref": "#<i>definitions</i>error",
newtype JsonRpcError
JsonRpcError :: Value -> JsonRpcError
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Json.JsonRpcError
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Json.JsonRpcError
instance GHC.Show.Show Tezos.Common.Json.JsonRpcError
instance GHC.Classes.Eq Tezos.Common.Json.JsonRpcError
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Tezos.Common.Json.StringEncode a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Tezos.Common.Json.StringEncode a)
instance GHC.Real.Real a => GHC.Real.Real (Tezos.Common.Json.StringEncode a)
instance Data.Bits.Bits a => Data.Bits.Bits (Tezos.Common.Json.StringEncode a)
instance GHC.Real.Integral a => GHC.Real.Integral (Tezos.Common.Json.StringEncode a)
instance GHC.Num.Num a => GHC.Num.Num (Tezos.Common.Json.StringEncode a)
instance GHC.Enum.Enum a => GHC.Enum.Enum (Tezos.Common.Json.StringEncode a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Tezos.Common.Json.StringEncode a)
instance GHC.Show.Show a => GHC.Show.Show (Tezos.Common.Json.StringEncode a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.Common.Json.StringEncode a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.Common.Json.StringEncode a)
instance GHC.Generics.Generic (Tezos.Common.Json.StringEncode a)
instance GHC.Classes.Ord Tezos.Common.Json.JsonRpcError
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Json.TezosPositiveBigNum
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Json.TezosPositiveBigNum
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Json.TezosBigNum
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Json.TezosBigNum
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Json.TezosInt64
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Json.TezosInt64

module Tezos.Common.NetworkStat
data NetworkStat
NetworkStat :: TezosInt64 -> TezosInt64 -> Int32 -> Int32 -> NetworkStat
[_networkStat_totalSent] :: NetworkStat -> TezosInt64
[_networkStat_totalRecv] :: NetworkStat -> TezosInt64
[_networkStat_currentInflow] :: NetworkStat -> Int32
[_networkStat_currentOutflow] :: NetworkStat -> Int32
newtype BlockPrefix
BlockPrefix :: Text -> BlockPrefix
networkStat_totalSent :: Lens' NetworkStat TezosInt64
networkStat_totalRecv :: Lens' NetworkStat TezosInt64
networkStat_currentOutflow :: Lens' NetworkStat Int32
networkStat_currentInflow :: Lens' NetworkStat Int32
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.NetworkStat.NetworkStat
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.NetworkStat.NetworkStat
instance GHC.Show.Show Tezos.Common.NetworkStat.BlockPrefix
instance GHC.Classes.Eq Tezos.Common.NetworkStat.BlockPrefix
instance GHC.Show.Show Tezos.Common.NetworkStat.NetworkStat
instance GHC.Classes.Ord Tezos.Common.NetworkStat.NetworkStat
instance GHC.Classes.Eq Tezos.Common.NetworkStat.NetworkStat

module Tezos.Common.NodeRPC.Types
type RpcResponse = Either RpcError
data RpcError
RpcError_HttpException :: Text -> RpcError
RpcError_UnexpectedStatus :: Int -> ByteString -> RpcError
RpcError_NonJSON :: String -> ByteString -> RpcError
class AsRpcError e
asRpcError :: AsRpcError e => Prism' e RpcError
rpcResponse_HttpException :: AsRpcError e => Text -> e
rpcResponse_UnexpectedStatus :: AsRpcError e => Int -> ByteString -> e
rpcResponse_NonJSON :: AsRpcError e => String -> ByteString -> e
instance GHC.Show.Show Tezos.Common.NodeRPC.Types.RpcError
instance GHC.Classes.Ord Tezos.Common.NodeRPC.Types.RpcError
instance GHC.Classes.Eq Tezos.Common.NodeRPC.Types.RpcError
instance Tezos.Common.NodeRPC.Types.AsRpcError Tezos.Common.NodeRPC.Types.RpcError
instance GHC.Exception.Type.Exception Tezos.Common.NodeRPC.Types.RpcError

module Tezos.Common.ShortByteString

-- | A compact representation of a <a>Word8</a> vector.
--   
--   It has a lower memory overhead than a <a>ByteString</a> and and does
--   not contribute to heap fragmentation. It can be converted to or from a
--   <a>ByteString</a> (at the cost of copying the string data). It
--   supports very few other operations.
--   
--   It is suitable for use as an internal representation for code that
--   needs to keep many short strings in memory, but it <i>should not</i>
--   be used as an interchange type. That is, it should not generally be
--   used in public APIs. The <a>ByteString</a> type is usually more
--   suitable for use in interfaces; it is more flexible and it supports a
--   wide range of operations.
data ShortByteString

-- | <i>O(n)</i>. Convert a <a>ByteString</a> into a
--   <a>ShortByteString</a>.
--   
--   This makes a copy, so does not retain the input string.
toShort :: ByteString -> ShortByteString

-- | <i>O(n)</i>. Convert a <a>ShortByteString</a> into a
--   <a>ByteString</a>.
fromShort :: ShortByteString -> ByteString

module Tezos.Common.Binary
class TezosBinary a
build :: TezosBinary a => a -> Builder
put :: TezosBinary a => a -> Const Builder ()
get :: TezosBinary a => Get a
puts :: TezosBinary b => (a -> b) -> a -> Const Builder ()
encode :: TezosBinary a => a -> ByteString
decode :: TezosBinary a => ByteString -> a
decodeEither :: TezosBinary a => ByteString -> Either String a
pattern TezosBinary :: TezosBinary a => a -> ByteString
pattern Undecodable :: forall a. TezosBinary a => Tagged a String -> ByteString
pattern Untagged :: forall t x. Tagged t x -> x
class TezosUnsignedBinary a
putUnsigned :: TezosUnsignedBinary a => a -> Const Builder ()
getUnsigned :: TezosUnsignedBinary a => Get a
newtype ToSign a
ToSign :: a -> ToSign a
[unToSign] :: ToSign a -> a
newtype DynamicSize a
DynamicSize :: a -> DynamicSize a
[unDynamicSize] :: DynamicSize a -> a
readZ :: (Num a, Bits a) => Int -> a -> Get a
writeZ :: (Integral a, Ord a, Bits a) => Int -> a -> Builder
(<**) :: (Applicative f, Applicative g) => f (g a) -> f (g b) -> f (g a)
instance Tezos.Common.Binary.TezosBinary a => Tezos.Common.Binary.TezosBinary (Tezos.Common.Binary.DynamicSize a)
instance Tezos.Common.Binary.TezosUnsignedBinary a => Tezos.Common.Binary.TezosBinary (Tezos.Common.Binary.ToSign a)
instance Tezos.Common.Binary.TezosBinary GHC.Word.Word8
instance Tezos.Common.Binary.TezosBinary GHC.Word.Word16
instance Tezos.Common.Binary.TezosBinary GHC.Word.Word32
instance Tezos.Common.Binary.TezosBinary GHC.Int.Int32
instance Tezos.Common.Binary.TezosBinary GHC.Int.Int64
instance Tezos.Common.Binary.TezosBinary GHC.Natural.Natural
instance Tezos.Common.Binary.TezosBinary GHC.Integer.Type.Integer
instance Tezos.Common.Binary.TezosBinary GHC.Types.Bool
instance Tezos.Common.Binary.TezosBinary x => Tezos.Common.Binary.TezosBinary (GHC.Maybe.Maybe x)
instance Tezos.Common.Binary.TezosBinary Data.Time.Clock.Internal.UTCTime.UTCTime
instance Tezos.Common.Binary.TezosBinary Data.ByteString.Internal.ByteString
instance Tezos.Common.Binary.TezosBinary Data.ByteString.Short.Internal.ShortByteString
instance Tezos.Common.Binary.TezosBinary a => Tezos.Common.Binary.TezosBinary (Data.Sequence.Internal.Seq a)
instance Tezos.Common.Binary.TezosBinary Data.Text.Internal.Text
instance Tezos.Common.Binary.TezosBinary a => Tezos.Common.Binary.TezosBinary (Tezos.Common.Json.StringEncode a)

module Tezos.Common.Base16ByteString
newtype Base16ByteString a
Base16ByteString :: a -> Base16ByteString a
[unbase16ByteString] :: Base16ByteString a -> a
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Tezos.Common.Base16ByteString.Base16ByteString a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Tezos.Common.Base16ByteString.Base16ByteString a)
instance GHC.Generics.Generic (Tezos.Common.Base16ByteString.Base16ByteString a)
instance Data.Traversable.Traversable Tezos.Common.Base16ByteString.Base16ByteString
instance Data.Foldable.Foldable Tezos.Common.Base16ByteString.Base16ByteString
instance GHC.Base.Functor Tezos.Common.Base16ByteString.Base16ByteString
instance GHC.Show.Show a => GHC.Show.Show (Tezos.Common.Base16ByteString.Base16ByteString a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.Common.Base16ByteString.Base16ByteString a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.Common.Base16ByteString.Base16ByteString a)
instance Tezos.Common.Binary.TezosBinary a => Tezos.Common.Binary.TezosBinary (Tezos.Common.Base16ByteString.Base16ByteString a)
instance Tezos.Common.Binary.TezosBinary a => Data.Aeson.Types.FromJSON.FromJSON (Tezos.Common.Base16ByteString.Base16ByteString a)
instance Tezos.Common.Binary.TezosBinary a => Data.Aeson.Types.ToJSON.ToJSON (Tezos.Common.Base16ByteString.Base16ByteString a)

module Tezos.Common.Base58Check
type BlockHash = HashedValue  'HashType_BlockHash
type OperationHash = HashedValue  'HashType_OperationHash
type OperationListHash = HashedValue  'HashType_OperationListHash
type OperationListListHash = HashedValue  'HashType_OperationListListHash
type ProtocolHash = HashedValue  'HashType_ProtocolHash
type ContextHash = HashedValue  'HashType_ContextHash
type Ed25519PublicKeyHash = HashedValue  'HashType_Ed25519PublicKeyHash
type Secp256k1PublicKeyHash = HashedValue  'HashType_Secp256k1PublicKeyHash
type CryptoboxPublicKeyHash = HashedValue  'HashType_CryptoboxPublicKeyHash
type Ed25519Seed = HashedValue  'HashType_Ed25519Seed
type Ed25519PublicKey = HashedValue  'HashType_Ed25519PublicKey
type Secp256k1SecretKey = HashedValue  'HashType_Secp256k1SecretKey
type Secp256k1PublicKey = HashedValue  'HashType_Secp256k1PublicKey
type Ed25519SecretKey = HashedValue  'HashType_Ed25519SecretKey
type Ed25519Signature = HashedValue  'HashType_Ed25519Signature
type Secp256k1Signature = HashedValue  'HashType_Secp256k1Signature
type GenericSignature = HashedValue  'HashType_GenericSignature
type ChainId = HashedValue  'HashType_ChainId
type P256PublicKeyHash = HashedValue  'HashType_P256PublicKeyHash
type P256PublicKey = HashedValue  'HashType_P256PublicKey
type P256Signature = HashedValue  'HashType_P256Signature
type ContractHash = HashedValue  'HashType_ContractHash
type NonceHash = HashedValue  'HashType_NonceHash
type CycleNonce = NonceHash
type BlindedPublicKeyHash = HashedValue  'HashType_BlindedPublicKeyHash
data HashType
HashType_BlockHash :: HashType
HashType_OperationHash :: HashType
HashType_OperationListHash :: HashType
HashType_OperationListListHash :: HashType
HashType_ProtocolHash :: HashType
HashType_ContextHash :: HashType
HashType_Ed25519PublicKeyHash :: HashType
HashType_Secp256k1PublicKeyHash :: HashType
HashType_CryptoboxPublicKeyHash :: HashType
HashType_Ed25519Seed :: HashType
HashType_Ed25519PublicKey :: HashType
HashType_Secp256k1SecretKey :: HashType
HashType_Secp256k1PublicKey :: HashType
HashType_Ed25519SecretKey :: HashType
HashType_Ed25519Signature :: HashType
HashType_Secp256k1Signature :: HashType
HashType_GenericSignature :: HashType
HashType_ChainId :: HashType
HashType_ContractHash :: HashType
HashType_NonceHash :: HashType
HashType_BlindedPublicKeyHash :: HashType
HashType_P256PublicKeyHash :: HashType
HashType_P256Signature :: HashType
HashType_P256PublicKey :: HashType
newtype HashedValue (tag :: HashType)
HashedValue :: ShortByteString -> HashedValue
[unHashedValue] :: HashedValue -> ShortByteString
class IsBase58Hash (t :: HashType)
hashSize :: IsBase58Hash t => f t -> Int
prefix :: IsBase58Hash t => f t -> ByteString
checksum :: ByteString -> ByteString
sha256 :: ByteString -> ByteString
toBase58 :: forall t. IsBase58Hash t => HashedValue t -> ByteString
toBase58Text :: forall t. IsBase58Hash t => HashedValue t -> Text
data HashBase58Error
HashBase58Error_DecodeError :: HashBase58Error
HashBase58Error_InvalidPrefix :: ByteString -> ByteString -> HashBase58Error
HashBase58Error_WrongLength :: Int -> Int -> HashBase58Error
HashBase58Error_BadChecksum :: ByteString -> ByteString -> ByteString -> HashBase58Error
data TryDecodeBase58 a
[TryDecodeBase58] :: IsBase58Hash t => (HashedValue t -> a) -> TryDecodeBase58 a
tryFromBase58 :: [TryDecodeBase58 a] -> ByteString -> Either HashBase58Error a
fromBase58 :: forall t. IsBase58Hash t => ByteString -> Either HashBase58Error (HashedValue t)
instance GHC.Show.Show Tezos.Common.Base58Check.HashBase58Error
instance GHC.Classes.Ord Tezos.Common.Base58Check.HashBase58Error
instance GHC.Classes.Eq Tezos.Common.Base58Check.HashBase58Error
instance Data.Hashable.Class.Hashable (Tezos.Common.Base58Check.HashedValue tag)
instance Control.DeepSeq.NFData (Tezos.Common.Base58Check.HashedValue tag)
instance GHC.Generics.Generic (Tezos.Common.Base58Check.HashedValue tag)
instance GHC.Classes.Ord (Tezos.Common.Base58Check.HashedValue tag)
instance GHC.Classes.Eq (Tezos.Common.Base58Check.HashedValue tag)
instance GHC.Enum.Enum Tezos.Common.Base58Check.HashType
instance GHC.Show.Show Tezos.Common.Base58Check.HashType
instance GHC.Classes.Ord Tezos.Common.Base58Check.HashType
instance GHC.Classes.Eq Tezos.Common.Base58Check.HashType
instance Tezos.Common.Base58Check.IsBase58Hash tag => Data.Aeson.Types.ToJSON.ToJSON (Tezos.Common.Base58Check.HashedValue tag)
instance Tezos.Common.Base58Check.IsBase58Hash tag => Data.Aeson.Types.FromJSON.FromJSON (Tezos.Common.Base58Check.HashedValue tag)
instance Tezos.Common.Base58Check.IsBase58Hash tag => Data.Aeson.Types.FromJSON.FromJSONKey (Tezos.Common.Base58Check.HashedValue tag)
instance Tezos.Common.Base58Check.IsBase58Hash tag => Data.Aeson.Types.ToJSON.ToJSONKey (Tezos.Common.Base58Check.HashedValue tag)
instance Tezos.Common.Base58Check.IsBase58Hash t => Data.String.IsString (Tezos.Common.Base58Check.HashedValue t)
instance Tezos.Common.Base58Check.IsBase58Hash t => GHC.Show.Show (Tezos.Common.Base58Check.HashedValue t)
instance Tezos.Common.Base58Check.IsBase58Hash t => GHC.Read.Read (Tezos.Common.Base58Check.HashedValue t)
instance Tezos.Common.Base58Check.IsBase58Hash t => Tezos.Common.Binary.TezosBinary (Tezos.Common.Base58Check.HashedValue t)
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_BlockHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_ChainId
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_ContextHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_CryptoboxPublicKeyHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Ed25519PublicKey
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Ed25519PublicKeyHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Ed25519SecretKey
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Ed25519Seed
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Ed25519Signature
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_GenericSignature
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_OperationHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_OperationListHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_OperationListListHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_ProtocolHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Secp256k1PublicKey
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Secp256k1PublicKeyHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Secp256k1SecretKey
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_Secp256k1Signature
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_ContractHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_NonceHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_BlindedPublicKeyHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_P256PublicKeyHash
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_P256Signature
instance Tezos.Common.Base58Check.IsBase58Hash 'Tezos.Common.Base58Check.HashType_P256PublicKey

module Tezos.Common.Chain
data NamedChain
NamedChain_Mainnet :: NamedChain
NamedChain_Zeronet :: NamedChain
NamedChain_Babylonnet :: NamedChain
NamedChain_Carthagenet :: NamedChain
showNamedChain :: NamedChain -> Text
parseNamedChain :: Text -> Maybe NamedChain
showChain :: Either NamedChain ChainId -> Text
parseChain :: MonadError Text m => Text -> m (Either NamedChain ChainId)
getNamedChainId :: NamedChain -> Maybe ChainId
identifyChain :: ChainId -> Maybe NamedChain
data ChainTag
ChainTag_Main :: ChainTag
ChainTag_Test :: ChainTag
ChainTag_Hash :: ChainId -> ChainTag
toChainTagText :: ChainTag -> Text
parseChainTagText :: MonadError HashBase58Error m => Text -> m ChainTag
instance GHC.Show.Show Tezos.Common.Chain.ChainTag
instance GHC.Read.Read Tezos.Common.Chain.ChainTag
instance GHC.Generics.Generic Tezos.Common.Chain.ChainTag
instance GHC.Classes.Ord Tezos.Common.Chain.ChainTag
instance GHC.Classes.Eq Tezos.Common.Chain.ChainTag
instance GHC.Show.Show Tezos.Common.Chain.NamedChain
instance GHC.Read.Read Tezos.Common.Chain.NamedChain
instance GHC.Generics.Generic Tezos.Common.Chain.NamedChain
instance GHC.Enum.Enum Tezos.Common.Chain.NamedChain
instance GHC.Enum.Bounded Tezos.Common.Chain.NamedChain
instance GHC.Classes.Ord Tezos.Common.Chain.NamedChain
instance GHC.Classes.Eq Tezos.Common.Chain.NamedChain
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Chain.ChainTag
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Chain.ChainTag
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.Chain.NamedChain
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.Chain.NamedChain

module Tezos.Common.NodeRPC.Sources
type DataSource = (PublicNode, Either NamedChain ChainId, NonEmpty URI)
data PublicNode
PublicNode_Blockscale :: PublicNode
PublicNode_Obsidian :: PublicNode
canFetchHistory :: PublicNode -> Bool
publicNodeShortName :: PublicNode -> Text
getPublicNodeUri :: PublicNode -> NamedChain -> Maybe (NonEmpty URI)
data PublicNodeError
PublicNodeError_RpcError :: RpcError -> PublicNodeError
PublicNodeError_FeatureNotSupported :: PublicNodeError
_PublicNodeError_FeatureNotSupported :: Prism' PublicNodeError ()
_PublicNodeError_RpcError :: Prism' PublicNodeError RpcError
instance GHC.Generics.Generic Tezos.Common.NodeRPC.Sources.PublicNodeError
instance GHC.Show.Show Tezos.Common.NodeRPC.Sources.PublicNodeError
instance GHC.Classes.Ord Tezos.Common.NodeRPC.Sources.PublicNodeError
instance GHC.Classes.Eq Tezos.Common.NodeRPC.Sources.PublicNodeError
instance GHC.Generics.Generic Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Enum.Bounded Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Enum.Enum Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Read.Read Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Show.Show Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Classes.Ord Tezos.Common.NodeRPC.Sources.PublicNode
instance GHC.Classes.Eq Tezos.Common.NodeRPC.Sources.PublicNode
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.Common.NodeRPC.Sources.PublicNode
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.Common.NodeRPC.Sources.PublicNode
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.Common.NodeRPC.Sources.PublicNode
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.Common.NodeRPC.Sources.PublicNode

module Tezos.V004.Fitness
newtype FitnessF a
FitnessF :: Seq a -> FitnessF a
[unFitnessF] :: FitnessF a -> Seq a

-- | for these to be useful, you'd need `TezosBinary ByteString`, but
--   that's definately not the same one as needed for the above FromJSON
--   instances; since both would be needed, both are wrong. we satisfy
--   ourselves with the fully monomorphic instances for both
--   
--   instance TezosBinary a =&gt; TezosBinary (FitnessF a) where
--   parseBinary = FitnessF <a>$</a> parseBinary encodeBinary =
--   encodeBinary . unFitnessF
type Fitness' a = FitnessF (Base16ByteString a)
type Fitness = Fitness' ShortByteString
toFitness :: Seq a -> Fitness' a
unFitness :: FitnessF (Base16ByteString a) -> Seq a
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Tezos.V004.Fitness.FitnessF a)
instance GHC.Generics.Generic (Tezos.V004.Fitness.FitnessF a)
instance Data.Traversable.Traversable Tezos.V004.Fitness.FitnessF
instance Data.Foldable.Foldable Tezos.V004.Fitness.FitnessF
instance GHC.Base.Functor Tezos.V004.Fitness.FitnessF
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V004.Fitness.FitnessF a)
instance GHC.Show.Show Tezos.V004.Fitness.Fitness
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Fitness.Fitness
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Tezos.V004.Fitness.FitnessF a)
instance Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.Fitness.FitnessF (Tezos.Common.Base16ByteString.Base16ByteString Data.ByteString.Short.Internal.ShortByteString))
instance Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.Fitness.FitnessF (Tezos.Common.Base16ByteString.Base16ByteString Data.ByteString.Short.Internal.ShortByteString))
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V004.Fitness.FitnessF a)
instance GHC.Classes.Ord a => GHC.Base.Semigroup (Tezos.V004.Fitness.FitnessF a)
instance GHC.Classes.Ord a => GHC.Base.Monoid (Tezos.V004.Fitness.FitnessF a)

module Tezos.V004.Ledger
newtype LedgerIdentifier
LedgerIdentifier :: Text -> LedgerIdentifier
[unLedgerIdentifier] :: LedgerIdentifier -> Text
data SecretKey
SecretKey :: !LedgerIdentifier -> !SigningCurve -> !DerivationPath -> SecretKey
[_secretKey_ledgerIdentifier] :: SecretKey -> !LedgerIdentifier
[_secretKey_signingCurve] :: SecretKey -> !SigningCurve
[_secretKey_derivationPath] :: SecretKey -> !DerivationPath
toSecretKeyText :: SecretKey -> Text
data DerivationPath
DerivationPath :: Text -> DerivationPath
[unDerivationPath] :: DerivationPath -> Text
data SigningCurve
SigningCurve_Bip25519 :: SigningCurve
SigningCurve_Ed25519 :: SigningCurve
SigningCurve_Secp256k1 :: SigningCurve
SigningCurve_P256 :: SigningCurve
toSigningCurveText :: SigningCurve -> Text
secretKey_signingCurve :: Lens' SecretKey SigningCurve
secretKey_ledgerIdentifier :: Lens' SecretKey LedgerIdentifier
secretKey_derivationPath :: Lens' SecretKey DerivationPath
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Ledger.SecretKey
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Ledger.SecretKey
instance GHC.Generics.Generic Tezos.V004.Ledger.SecretKey
instance GHC.Classes.Ord Tezos.V004.Ledger.SecretKey
instance GHC.Classes.Eq Tezos.V004.Ledger.SecretKey
instance GHC.Read.Read Tezos.V004.Ledger.SecretKey
instance GHC.Show.Show Tezos.V004.Ledger.SecretKey
instance GHC.Enum.Bounded Tezos.V004.Ledger.SigningCurve
instance GHC.Enum.Enum Tezos.V004.Ledger.SigningCurve
instance GHC.Generics.Generic Tezos.V004.Ledger.SigningCurve
instance GHC.Classes.Ord Tezos.V004.Ledger.SigningCurve
instance GHC.Classes.Eq Tezos.V004.Ledger.SigningCurve
instance GHC.Read.Read Tezos.V004.Ledger.SigningCurve
instance GHC.Show.Show Tezos.V004.Ledger.SigningCurve
instance GHC.Generics.Generic Tezos.V004.Ledger.DerivationPath
instance GHC.Classes.Ord Tezos.V004.Ledger.DerivationPath
instance GHC.Classes.Eq Tezos.V004.Ledger.DerivationPath
instance GHC.Read.Read Tezos.V004.Ledger.DerivationPath
instance GHC.Show.Show Tezos.V004.Ledger.DerivationPath
instance GHC.Generics.Generic Tezos.V004.Ledger.LedgerIdentifier
instance GHC.Classes.Ord Tezos.V004.Ledger.LedgerIdentifier
instance GHC.Classes.Eq Tezos.V004.Ledger.LedgerIdentifier
instance GHC.Read.Read Tezos.V004.Ledger.LedgerIdentifier
instance GHC.Show.Show Tezos.V004.Ledger.LedgerIdentifier
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.Ledger.SecretKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.Ledger.SecretKey
instance Control.DeepSeq.NFData Tezos.V004.Ledger.SigningCurve
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Ledger.SigningCurve
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Ledger.SigningCurve
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Ledger.DerivationPath
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Ledger.DerivationPath
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Ledger.LedgerIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Ledger.LedgerIdentifier

module Tezos.V004.Level
newtype RawLevel
RawLevel :: Int32 -> RawLevel
[unRawLevel] :: RawLevel -> Int32
newtype Cycle
Cycle :: Int32 -> Cycle
[unCycle] :: Cycle -> Int32

-- | "level": {
data Level
Level :: Cycle -> RawLevel -> Bool -> RawLevel -> RawLevel -> RawLevel -> RawLevel -> Level
[_level_cycle] :: Level -> Cycle
[_level_cyclePosition] :: Level -> RawLevel
[_level_expectedCommitment] :: Level -> Bool
[_level_level] :: Level -> RawLevel
[_level_levelPosition] :: Level -> RawLevel
[_level_votingPeriod] :: Level -> RawLevel
[_level_votingPeriodPosition] :: Level -> RawLevel
level_votingPeriodPosition :: Lens' Level RawLevel
level_votingPeriod :: Lens' Level RawLevel
level_levelPosition :: Lens' Level RawLevel
level_level :: Lens' Level RawLevel
level_expectedCommitment :: Lens' Level Bool
level_cyclePosition :: Lens' Level RawLevel
level_cycle :: Lens' Level Cycle
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Level.Level
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Level.Level
instance GHC.Generics.Generic Tezos.V004.Level.Level
instance GHC.Classes.Ord Tezos.V004.Level.Level
instance GHC.Classes.Eq Tezos.V004.Level.Level
instance GHC.Show.Show Tezos.V004.Level.Level
instance Data.Hashable.Class.Hashable Tezos.V004.Level.Cycle
instance Control.DeepSeq.NFData Tezos.V004.Level.Cycle
instance GHC.Generics.Generic Tezos.V004.Level.Cycle
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.Level.Cycle
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Level.Cycle
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.Level.Cycle
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Level.Cycle
instance GHC.Enum.Enum Tezos.V004.Level.Cycle
instance GHC.Real.Integral Tezos.V004.Level.Cycle
instance GHC.Real.Real Tezos.V004.Level.Cycle
instance GHC.Num.Num Tezos.V004.Level.Cycle
instance GHC.Classes.Ord Tezos.V004.Level.Cycle
instance GHC.Classes.Eq Tezos.V004.Level.Cycle
instance GHC.Show.Show Tezos.V004.Level.Cycle
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Level.RawLevel
instance Data.Hashable.Class.Hashable Tezos.V004.Level.RawLevel
instance Control.DeepSeq.NFData Tezos.V004.Level.RawLevel
instance GHC.Generics.Generic Tezos.V004.Level.RawLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.Level.RawLevel
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Level.RawLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.Level.RawLevel
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Level.RawLevel
instance GHC.Enum.Enum Tezos.V004.Level.RawLevel
instance GHC.Real.Integral Tezos.V004.Level.RawLevel
instance GHC.Real.Real Tezos.V004.Level.RawLevel
instance GHC.Num.Num Tezos.V004.Level.RawLevel
instance GHC.Classes.Ord Tezos.V004.Level.RawLevel
instance GHC.Classes.Eq Tezos.V004.Level.RawLevel
instance GHC.Show.Show Tezos.V004.Level.RawLevel
instance Data.Hashable.Class.Hashable Tezos.V004.Level.Level
instance Control.DeepSeq.NFData Tezos.V004.Level.Level

module Tezos.V004.Micheline
newtype MichelinePrimitive
MichelinePrimitive :: Text -> MichelinePrimitive
michelineV1Primitive :: Seq Text
michelsonV1Enum :: Seq Text
data Expression
Expression_Int :: !TezosBigNum -> Expression
Expression_String :: !Text -> Expression
Expression_Bytes :: !Base16ByteString ByteString -> Expression
Expression_Seq :: !Seq Expression -> Expression
Expression_Prim :: !MichelinePrimAp -> Expression
data MichelinePrimAp
MichelinePrimAp :: !MichelinePrimitive -> !Seq Expression -> !Seq Annotation -> MichelinePrimAp
[_michelinePrimAp_prim] :: MichelinePrimAp -> !MichelinePrimitive
[_michelinePrimAp_args] :: MichelinePrimAp -> !Seq Expression
[_michelinePrimAp_annots] :: MichelinePrimAp -> !Seq Annotation
data Annotation
Annotation_Type :: !Text -> Annotation
Annotation_Variable :: !Text -> Annotation
Annotation_Field :: !Text -> Annotation
annotFromText :: MonadFail m => Text -> m Annotation
annotToText :: Annotation -> Text
putAnnotationSeq :: Seq Annotation -> Const Builder ()
getAnnotationSeq :: Get (Seq Annotation)
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Micheline.MichelinePrimAp
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Micheline.Expression
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Micheline.Expression
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Micheline.Expression
instance GHC.Show.Show Tezos.V004.Micheline.Expression
instance GHC.Classes.Ord Tezos.V004.Micheline.Expression
instance GHC.Classes.Eq Tezos.V004.Micheline.Expression
instance GHC.Show.Show Tezos.V004.Micheline.MichelinePrimAp
instance GHC.Classes.Ord Tezos.V004.Micheline.MichelinePrimAp
instance GHC.Classes.Eq Tezos.V004.Micheline.MichelinePrimAp
instance GHC.Show.Show Tezos.V004.Micheline.Annotation
instance GHC.Classes.Ord Tezos.V004.Micheline.Annotation
instance GHC.Classes.Eq Tezos.V004.Micheline.Annotation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Micheline.MichelinePrimitive
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Micheline.MichelinePrimitive
instance GHC.Show.Show Tezos.V004.Micheline.MichelinePrimitive
instance GHC.Classes.Ord Tezos.V004.Micheline.MichelinePrimitive
instance GHC.Classes.Eq Tezos.V004.Micheline.MichelinePrimitive
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Micheline.MichelinePrimAp
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Micheline.Annotation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Micheline.Annotation
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Micheline.MichelinePrimitive

module Tezos.V004.PeriodSequence
newtype PeriodSequenceF a
PeriodSequence :: NonEmpty a -> PeriodSequenceF a
[unPeriodSequence] :: PeriodSequenceF a -> NonEmpty a
type PeriodSequence = PeriodSequenceF TezosInt64
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance GHC.Base.Functor Tezos.V004.PeriodSequence.PeriodSequenceF
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance GHC.Generics.Generic (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V004.PeriodSequence.PeriodSequenceF a)
instance Data.Foldable.Foldable Tezos.V004.PeriodSequence.PeriodSequenceF

module Tezos.V004.PublicKey
data PublicKey
PublicKey_Ed25519 :: !Ed25519PublicKey -> PublicKey
PublicKey_Secp256k1 :: !Secp256k1PublicKey -> PublicKey
PublicKey_P256 :: !P256PublicKey -> PublicKey
publicKeyConstructorDecoders :: [TryDecodeBase58 PublicKey]
toPublicKeyText :: PublicKey -> Text
instance GHC.Generics.Generic Tezos.V004.PublicKey.PublicKey
instance GHC.Classes.Ord Tezos.V004.PublicKey.PublicKey
instance GHC.Classes.Eq Tezos.V004.PublicKey.PublicKey
instance Data.Hashable.Class.Hashable Tezos.V004.PublicKey.PublicKey
instance Control.DeepSeq.NFData Tezos.V004.PublicKey.PublicKey
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.PublicKey.PublicKey
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.PublicKey.PublicKey
instance Tezos.Common.Binary.TezosBinary Tezos.V004.PublicKey.PublicKey
instance GHC.Show.Show Tezos.V004.PublicKey.PublicKey
instance Data.String.IsString Tezos.V004.PublicKey.PublicKey

module Tezos.V004.PublicKeyHash
data PublicKeyHash
PublicKeyHash_Ed25519 :: !Ed25519PublicKeyHash -> PublicKeyHash
PublicKeyHash_Secp256k1 :: !Secp256k1PublicKeyHash -> PublicKeyHash
PublicKeyHash_P256 :: !P256PublicKeyHash -> PublicKeyHash
publicKeyHashConstructorDecoders :: [TryDecodeBase58 PublicKeyHash]
tryReadPublicKeyHash :: ByteString -> Either HashBase58Error PublicKeyHash
tryReadPublicKeyHashText :: Text -> Either HashBase58Error PublicKeyHash
toPublicKeyHashText :: PublicKeyHash -> Text
rawContextLink :: PublicKeyHash -> Text
instance GHC.Generics.Generic Tezos.V004.PublicKeyHash.PublicKeyHash
instance GHC.Classes.Ord Tezos.V004.PublicKeyHash.PublicKeyHash
instance GHC.Classes.Eq Tezos.V004.PublicKeyHash.PublicKeyHash
instance Control.DeepSeq.NFData Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.Hashable.Class.Hashable Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.PublicKeyHash.PublicKeyHash
instance GHC.Show.Show Tezos.V004.PublicKeyHash.PublicKeyHash
instance GHC.Read.Read Tezos.V004.PublicKeyHash.PublicKeyHash
instance Data.String.IsString Tezos.V004.PublicKeyHash.PublicKeyHash
instance Tezos.Common.Binary.TezosBinary Tezos.V004.PublicKeyHash.PublicKeyHash

module Tezos.V004.Contract
data ContractId
Implicit :: !PublicKeyHash -> ContractId
Originated :: !ContractHash -> ContractId
contractIdConstructorDecoders :: [TryDecodeBase58 ContractId]
tryReadContractId :: ByteString -> Either HashBase58Error ContractId
tryReadContractIdText :: Text -> Either HashBase58Error ContractId
toContractIdText :: ContractId -> Text

-- | "scripted.contracts": {
data ContractScript
ContractScript :: Expression -> Expression -> ContractScript
[_contractScript_code] :: ContractScript -> Expression
[_contractScript_storage] :: ContractScript -> Expression
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Contract.ContractScript
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Contract.ContractScript
instance GHC.Show.Show Tezos.V004.Contract.ContractScript
instance GHC.Classes.Ord Tezos.V004.Contract.ContractScript
instance GHC.Classes.Eq Tezos.V004.Contract.ContractScript
instance GHC.Generics.Generic Tezos.V004.Contract.ContractId
instance GHC.Classes.Ord Tezos.V004.Contract.ContractId
instance GHC.Classes.Eq Tezos.V004.Contract.ContractId
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Contract.ContractScript
instance Data.Hashable.Class.Hashable Tezos.V004.Contract.ContractId
instance Control.DeepSeq.NFData Tezos.V004.Contract.ContractId
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Contract.ContractId
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Contract.ContractId
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.Contract.ContractId
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.Contract.ContractId
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Contract.ContractId
instance GHC.Show.Show Tezos.V004.Contract.ContractId
instance Data.String.IsString Tezos.V004.Contract.ContractId

module Tezos.V004.Michelson
pattern Prim :: Text -> Seq Expression -> Expression
pattern Prim0 :: Text -> Expression
pattern Prim1 :: Text -> Expression -> Expression
pattern Prim2 :: Text -> Expression -> Expression -> Expression
pattern Pair :: Expression -> Expression -> Expression
pattern Left :: Expression -> Expression
pattern Right :: Expression -> Expression
pattern Int :: Integral a => a -> Expression
pattern Bytes :: ByteString -> Expression
pattern AsBytes :: TezosBinary a => a -> Expression
findInOrTree :: Text -> Expression -> Maybe (Expression -> Expression)
wrapEndpointCall :: Text -> ContractScript -> Expression -> Maybe Expression
class FromMicheline a
fromMicheline :: FromMicheline a => Expression -> Either String a
mapEitherToString :: Show a => Either a b -> Either String b
class ToMicheline a
toMicheline :: ToMicheline a => a -> Expression
instance Tezos.V004.Michelson.ToMicheline Tezos.V004.Micheline.Expression
instance Tezos.V004.Michelson.ToMicheline Tezos.V004.Contract.ContractId
instance Tezos.V004.Michelson.FromMicheline Tezos.V004.Micheline.Expression
instance Tezos.V004.Michelson.FromMicheline Tezos.V004.Contract.ContractId

module Tezos.V004.Signature
data Signature
Signature_Ed25519 :: Ed25519Signature -> Signature
Signature_Secp256k1 :: Secp256k1Signature -> Signature
Signature_P256 :: P256Signature -> Signature
Signature_Unknown :: GenericSignature -> Signature
signatureConstructorDecoders :: [TryDecodeBase58 Signature]
tryReadSignature :: ByteString -> Either HashBase58Error Signature
tryReadSignatureText :: Text -> Either HashBase58Error Signature
toSignatureText :: Signature -> Text
instance GHC.Generics.Generic Tezos.V004.Signature.Signature
instance GHC.Classes.Ord Tezos.V004.Signature.Signature
instance GHC.Classes.Eq Tezos.V004.Signature.Signature
instance Data.Hashable.Class.Hashable Tezos.V004.Signature.Signature
instance Control.DeepSeq.NFData Tezos.V004.Signature.Signature
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Signature.Signature
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Signature.Signature
instance GHC.Show.Show Tezos.V004.Signature.Signature
instance Data.String.IsString Tezos.V004.Signature.Signature
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Signature.Signature

module Tezos.V004.BlockHeader
data BlockHeaderFull
BlockHeaderFull :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderFull
[_blockHeaderFull_level] :: BlockHeaderFull -> !RawLevel
[_blockHeaderFull_proto] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_predecessor] :: BlockHeaderFull -> !BlockHash
[_blockHeaderFull_timestamp] :: BlockHeaderFull -> !UTCTime
[_blockHeaderFull_validationPass] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_operationsHash] :: BlockHeaderFull -> !OperationListListHash
[_blockHeaderFull_fitness] :: BlockHeaderFull -> !Fitness
[_blockHeaderFull_context] :: BlockHeaderFull -> !ContextHash
[_blockHeaderFull_priority] :: BlockHeaderFull -> !Priority
[_blockHeaderFull_proofOfWorkNonce] :: BlockHeaderFull -> !Base16ByteString ByteString
[_blockHeaderFull_seedNonceHash] :: BlockHeaderFull -> !Maybe NonceHash
[_blockHeaderFull_signature] :: BlockHeaderFull -> !Maybe Signature
data BlockHeader
BlockHeader :: !RawLevel -> !BlockHash -> !Word8 -> !ProtocolHash -> !ChainId -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeader
[_blockHeader_level] :: BlockHeader -> !RawLevel
[_blockHeader_hash] :: BlockHeader -> !BlockHash
[_blockHeader_proto] :: BlockHeader -> !Word8
[_blockHeader_protocol] :: BlockHeader -> !ProtocolHash
[_blockHeader_chainId] :: BlockHeader -> !ChainId
[_blockHeader_predecessor] :: BlockHeader -> !BlockHash
[_blockHeader_timestamp] :: BlockHeader -> !UTCTime
[_blockHeader_validationPass] :: BlockHeader -> !Word8
[_blockHeader_operationsHash] :: BlockHeader -> !OperationListListHash
[_blockHeader_fitness] :: BlockHeader -> !Fitness
[_blockHeader_context] :: BlockHeader -> !ContextHash
[_blockHeader_priority] :: BlockHeader -> !Priority
[_blockHeader_proofOfWorkNonce] :: BlockHeader -> !Base16ByteString ByteString
[_blockHeader_seedNonceHash] :: BlockHeader -> !Maybe NonceHash
[_blockHeader_signature] :: BlockHeader -> !Maybe Signature
data BlockHeaderProto
BlockHeaderProto :: !ProtocolHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderProto
[_blockHeaderProto_protocol] :: BlockHeaderProto -> !ProtocolHash
[_blockHeaderProto_priority] :: BlockHeaderProto -> !Priority
[_blockHeaderProto_proofOfWorkNonce] :: BlockHeaderProto -> !Base16ByteString ByteString
[_blockHeaderProto_seedNonceHash] :: BlockHeaderProto -> !Maybe NonceHash
[_blockHeaderProto_signature] :: BlockHeaderProto -> !Maybe Signature
data BlockHeaderShell
BlockHeaderShell :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> BlockHeaderShell
[_blockHeaderShell_level] :: BlockHeaderShell -> !RawLevel
[_blockHeaderShell_proto] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_predecessor] :: BlockHeaderShell -> !BlockHash
[_blockHeaderShell_timestamp] :: BlockHeaderShell -> !UTCTime
[_blockHeaderShell_validationPass] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_operationsHash] :: BlockHeaderShell -> !OperationListListHash
[_blockHeaderShell_fitness] :: BlockHeaderShell -> !Fitness
[_blockHeaderShell_context] :: BlockHeaderShell -> !ContextHash
newtype Priority
Priority :: Word16 -> Priority
[unPriority] :: Priority -> Word16
blockHeaderShell_validationPass :: Lens' BlockHeaderShell Word8
blockHeaderShell_timestamp :: Lens' BlockHeaderShell UTCTime
blockHeaderShell_proto :: Lens' BlockHeaderShell Word8
blockHeaderShell_predecessor :: Lens' BlockHeaderShell BlockHash
blockHeaderShell_operationsHash :: Lens' BlockHeaderShell OperationListListHash
blockHeaderShell_level :: Lens' BlockHeaderShell RawLevel
blockHeaderShell_fitness :: Lens' BlockHeaderShell Fitness
blockHeaderShell_context :: Lens' BlockHeaderShell ContextHash
blockHeaderProto_signature :: Lens' BlockHeaderProto (Maybe Signature)
blockHeaderProto_seedNonceHash :: Lens' BlockHeaderProto (Maybe NonceHash)
blockHeaderProto_protocol :: Lens' BlockHeaderProto ProtocolHash
blockHeaderProto_proofOfWorkNonce :: Lens' BlockHeaderProto (Base16ByteString ByteString)
blockHeaderProto_priority :: Lens' BlockHeaderProto Priority
blockHeaderFull_validationPass :: Lens' BlockHeaderFull Word8
blockHeaderFull_timestamp :: Lens' BlockHeaderFull UTCTime
blockHeaderFull_signature :: Lens' BlockHeaderFull (Maybe Signature)
blockHeaderFull_seedNonceHash :: Lens' BlockHeaderFull (Maybe NonceHash)
blockHeaderFull_proto :: Lens' BlockHeaderFull Word8
blockHeaderFull_proofOfWorkNonce :: Lens' BlockHeaderFull (Base16ByteString ByteString)
blockHeaderFull_priority :: Lens' BlockHeaderFull Priority
blockHeaderFull_predecessor :: Lens' BlockHeaderFull BlockHash
blockHeaderFull_operationsHash :: Lens' BlockHeaderFull OperationListListHash
blockHeaderFull_level :: Lens' BlockHeaderFull RawLevel
blockHeaderFull_fitness :: Lens' BlockHeaderFull Fitness
blockHeaderFull_context :: Lens' BlockHeaderFull ContextHash
blockHeader_validationPass :: Lens' BlockHeader Word8
blockHeader_timestamp :: Lens' BlockHeader UTCTime
blockHeader_signature :: Lens' BlockHeader (Maybe Signature)
blockHeader_seedNonceHash :: Lens' BlockHeader (Maybe NonceHash)
blockHeader_protocol :: Lens' BlockHeader ProtocolHash
blockHeader_proto :: Lens' BlockHeader Word8
blockHeader_proofOfWorkNonce :: Lens' BlockHeader (Base16ByteString ByteString)
blockHeader_priority :: Lens' BlockHeader Priority
blockHeader_predecessor :: Lens' BlockHeader BlockHash
blockHeader_operationsHash :: Lens' BlockHeader OperationListListHash
blockHeader_level :: Lens' BlockHeader RawLevel
blockHeader_hash :: Lens' BlockHeader BlockHash
blockHeader_fitness :: Lens' BlockHeader Fitness
blockHeader_context :: Lens' BlockHeader ContextHash
blockHeader_chainId :: Lens' BlockHeader ChainId
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BlockHeader.BlockHeader
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BlockHeader.BlockHeader
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BlockHeader.BlockHeaderFull
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BlockHeader.BlockHeaderFull
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BlockHeader.BlockHeaderProto
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BlockHeader.BlockHeaderProto
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BlockHeader.BlockHeaderShell
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BlockHeader.BlockHeaderShell
instance GHC.Generics.Generic Tezos.V004.BlockHeader.BlockHeaderFull
instance GHC.Classes.Ord Tezos.V004.BlockHeader.BlockHeaderFull
instance GHC.Classes.Eq Tezos.V004.BlockHeader.BlockHeaderFull
instance GHC.Show.Show Tezos.V004.BlockHeader.BlockHeaderFull
instance GHC.Generics.Generic Tezos.V004.BlockHeader.BlockHeader
instance GHC.Classes.Ord Tezos.V004.BlockHeader.BlockHeader
instance GHC.Classes.Eq Tezos.V004.BlockHeader.BlockHeader
instance GHC.Show.Show Tezos.V004.BlockHeader.BlockHeader
instance GHC.Generics.Generic Tezos.V004.BlockHeader.BlockHeaderProto
instance GHC.Classes.Ord Tezos.V004.BlockHeader.BlockHeaderProto
instance GHC.Classes.Eq Tezos.V004.BlockHeader.BlockHeaderProto
instance GHC.Show.Show Tezos.V004.BlockHeader.BlockHeaderProto
instance Tezos.Common.Binary.TezosBinary Tezos.V004.BlockHeader.Priority
instance Data.Bits.Bits Tezos.V004.BlockHeader.Priority
instance GHC.Real.Real Tezos.V004.BlockHeader.Priority
instance GHC.Real.Integral Tezos.V004.BlockHeader.Priority
instance GHC.Num.Num Tezos.V004.BlockHeader.Priority
instance GHC.Enum.Enum Tezos.V004.BlockHeader.Priority
instance Data.Hashable.Class.Hashable Tezos.V004.BlockHeader.Priority
instance Control.DeepSeq.NFData Tezos.V004.BlockHeader.Priority
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BlockHeader.Priority
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BlockHeader.Priority
instance GHC.Show.Show Tezos.V004.BlockHeader.Priority
instance GHC.Generics.Generic Tezos.V004.BlockHeader.Priority
instance GHC.Classes.Ord Tezos.V004.BlockHeader.Priority
instance GHC.Classes.Eq Tezos.V004.BlockHeader.Priority
instance GHC.Generics.Generic Tezos.V004.BlockHeader.BlockHeaderShell
instance GHC.Classes.Ord Tezos.V004.BlockHeader.BlockHeaderShell
instance GHC.Classes.Eq Tezos.V004.BlockHeader.BlockHeaderShell
instance GHC.Show.Show Tezos.V004.BlockHeader.BlockHeaderShell
instance Control.DeepSeq.NFData Tezos.V004.BlockHeader.BlockHeaderFull
instance Tezos.Common.Binary.TezosUnsignedBinary Tezos.V004.BlockHeader.BlockHeaderFull
instance Tezos.Common.Binary.TezosBinary Tezos.V004.BlockHeader.BlockHeaderFull
instance Control.DeepSeq.NFData Tezos.V004.BlockHeader.BlockHeader
instance Control.DeepSeq.NFData Tezos.V004.BlockHeader.BlockHeaderProto
instance Control.DeepSeq.NFData Tezos.V004.BlockHeader.BlockHeaderShell

module Tezos.V004.Checkpoint
data Checkpoint
Checkpoint :: !RawLevel -> !RawLevel -> !HistoryMode -> !BlockHeaderShell -> Checkpoint
[_checkpoint_savePoint] :: Checkpoint -> !RawLevel
[_checkpoint_caboose] :: Checkpoint -> !RawLevel
[_checkpoint_historyMode] :: Checkpoint -> !HistoryMode
[_checkpoint_block] :: Checkpoint -> !BlockHeaderShell
data HistoryMode
HistoryMode_Archive :: HistoryMode
HistoryMode_Full :: HistoryMode
HistoryMode_Rolling :: HistoryMode
checkpoint_savePoint :: Lens' Checkpoint RawLevel
checkpoint_historyMode :: Lens' Checkpoint HistoryMode
checkpoint_caboose :: Lens' Checkpoint RawLevel
checkpoint_block :: Lens' Checkpoint BlockHeaderShell
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Checkpoint.Checkpoint
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Checkpoint.Checkpoint
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Checkpoint.HistoryMode
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Checkpoint.HistoryMode
instance GHC.Generics.Generic Tezos.V004.Checkpoint.Checkpoint
instance GHC.Classes.Ord Tezos.V004.Checkpoint.Checkpoint
instance GHC.Classes.Eq Tezos.V004.Checkpoint.Checkpoint
instance GHC.Show.Show Tezos.V004.Checkpoint.Checkpoint
instance GHC.Generics.Generic Tezos.V004.Checkpoint.HistoryMode
instance GHC.Classes.Ord Tezos.V004.Checkpoint.HistoryMode
instance GHC.Classes.Eq Tezos.V004.Checkpoint.HistoryMode
instance GHC.Read.Read Tezos.V004.Checkpoint.HistoryMode
instance GHC.Show.Show Tezos.V004.Checkpoint.HistoryMode
instance Control.DeepSeq.NFData Tezos.V004.Checkpoint.Checkpoint
instance Control.DeepSeq.NFData Tezos.V004.Checkpoint.HistoryMode

module Tezos.V004.TestChainStatus

-- | "test_chain_status": {
data TestChainStatus
TestChainStatus_NotRunning :: TestChainStatus
TestChainStatus_Forking :: !ProtocolHash -> !UTCTime -> TestChainStatus
[_testChainStatusForking_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusForking_expiration] :: TestChainStatus -> !UTCTime
TestChainStatus_Running :: !ChainId -> !BlockHash -> !ProtocolHash -> UTCTime -> TestChainStatus
[_testChainStatusRunning_chainId] :: TestChainStatus -> !ChainId
[_testChainStatusRunning_genesis] :: TestChainStatus -> !BlockHash
[_testChainStatusRunning_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusRunning_expiration] :: TestChainStatus -> UTCTime
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.TestChainStatus.TestChainStatus
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.TestChainStatus.TestChainStatus
instance GHC.Show.Show Tezos.V004.TestChainStatus.TestChainStatus
instance GHC.Classes.Ord Tezos.V004.TestChainStatus.TestChainStatus
instance GHC.Classes.Eq Tezos.V004.TestChainStatus.TestChainStatus

module Tezos.V004.Tez
newtype Tez
Tez :: Micro -> Tez
[getTez] :: Tez -> Micro
getMicroTez :: Tez -> Natural
microTez :: Natural -> Tez
newtype TezDelta
TezDelta :: Micro -> TezDelta
[getTezDelta] :: TezDelta -> Micro
getMicroTezDelta :: TezDelta -> Int64
microTezDelta :: Int64 -> TezDelta
instance Data.Hashable.Class.Hashable Tezos.V004.Tez.TezDelta
instance Control.DeepSeq.NFData Tezos.V004.Tez.TezDelta
instance GHC.Real.RealFrac Tezos.V004.Tez.TezDelta
instance GHC.Real.Real Tezos.V004.Tez.TezDelta
instance GHC.Num.Num Tezos.V004.Tez.TezDelta
instance GHC.Real.Fractional Tezos.V004.Tez.TezDelta
instance GHC.Enum.Enum Tezos.V004.Tez.TezDelta
instance GHC.Show.Show Tezos.V004.Tez.TezDelta
instance GHC.Classes.Ord Tezos.V004.Tez.TezDelta
instance GHC.Classes.Eq Tezos.V004.Tez.TezDelta
instance GHC.Read.Read Tezos.V004.Tez.Tez
instance Data.Hashable.Class.Hashable Tezos.V004.Tez.Tez
instance Control.DeepSeq.NFData Tezos.V004.Tez.Tez
instance GHC.Real.RealFrac Tezos.V004.Tez.Tez
instance GHC.Real.Real Tezos.V004.Tez.Tez
instance GHC.Num.Num Tezos.V004.Tez.Tez
instance GHC.Real.Fractional Tezos.V004.Tez.Tez
instance GHC.Enum.Enum Tezos.V004.Tez.Tez
instance GHC.Show.Show Tezos.V004.Tez.Tez
instance GHC.Classes.Ord Tezos.V004.Tez.Tez
instance GHC.Classes.Eq Tezos.V004.Tez.Tez
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Tez.TezDelta
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Tez.TezDelta
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Tez.TezDelta
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Tez.Tez
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Tez.Tez
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Tez.Tez

module Tezos.V004.BalanceUpdate
data FreezerCategory
FreezerCategory_Rewards :: FreezerCategory
FreezerCategory_Fees :: FreezerCategory
FreezerCategory_Deposits :: FreezerCategory
data ContractUpdate
ContractUpdate :: !ContractId -> !TezDelta -> ContractUpdate
[_contractUpdate_contract] :: ContractUpdate -> !ContractId
[_contractUpdate_change] :: ContractUpdate -> !TezDelta
data FreezerUpdate
FreezerUpdate :: !FreezerCategory -> !PublicKeyHash -> !Cycle -> !TezDelta -> FreezerUpdate
[_freezerUpdate_category] :: FreezerUpdate -> !FreezerCategory
[_freezerUpdate_delegate] :: FreezerUpdate -> !PublicKeyHash
[_freezerUpdate_cycle] :: FreezerUpdate -> !Cycle
[_freezerUpdate_change] :: FreezerUpdate -> !TezDelta
data BalanceUpdate
BalanceUpdate_Contract :: ContractUpdate -> BalanceUpdate
BalanceUpdate_Freezer :: FreezerUpdate -> BalanceUpdate
class HasBalanceUpdates a
balanceUpdates :: HasBalanceUpdates a => Traversal' a BalanceUpdate
data Balance' g
Balance :: !g -> !Map Cycle (Map FreezerCategory g) -> Balance' g
[_balance_spendable] :: Balance' g -> !g
[_balance_frozen] :: Balance' g -> !Map Cycle (Map FreezerCategory g)
type Balance = Balance' (Sum TezDelta)
newtype Balances
Balances :: Map ContractId Balance -> Balances
[unBalances] :: Balances -> Map ContractId Balance
getBalanceChanges :: HasBalanceUpdates a => a -> Balances
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BalanceUpdate.FreezerUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BalanceUpdate.ContractUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BalanceUpdate.ContractUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BalanceUpdate.FreezerCategory
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BalanceUpdate.FreezerCategory
instance Data.Aeson.Types.ToJSON.ToJSON g => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.BalanceUpdate.Balance' g)
instance Data.Aeson.Types.FromJSON.FromJSON g => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.BalanceUpdate.Balance' g)
instance GHC.Generics.Generic Tezos.V004.BalanceUpdate.Balances
instance GHC.Show.Show Tezos.V004.BalanceUpdate.Balances
instance GHC.Classes.Ord Tezos.V004.BalanceUpdate.Balances
instance GHC.Classes.Eq Tezos.V004.BalanceUpdate.Balances
instance GHC.Generics.Generic (Tezos.V004.BalanceUpdate.Balance' g)
instance GHC.Show.Show g => GHC.Show.Show (Tezos.V004.BalanceUpdate.Balance' g)
instance GHC.Classes.Ord g => GHC.Classes.Ord (Tezos.V004.BalanceUpdate.Balance' g)
instance GHC.Classes.Eq g => GHC.Classes.Eq (Tezos.V004.BalanceUpdate.Balance' g)
instance GHC.Generics.Generic Tezos.V004.BalanceUpdate.BalanceUpdate
instance GHC.Show.Show Tezos.V004.BalanceUpdate.BalanceUpdate
instance GHC.Classes.Ord Tezos.V004.BalanceUpdate.BalanceUpdate
instance GHC.Classes.Eq Tezos.V004.BalanceUpdate.BalanceUpdate
instance GHC.Generics.Generic Tezos.V004.BalanceUpdate.FreezerUpdate
instance GHC.Show.Show Tezos.V004.BalanceUpdate.FreezerUpdate
instance GHC.Classes.Ord Tezos.V004.BalanceUpdate.FreezerUpdate
instance GHC.Classes.Eq Tezos.V004.BalanceUpdate.FreezerUpdate
instance GHC.Generics.Generic Tezos.V004.BalanceUpdate.ContractUpdate
instance GHC.Show.Show Tezos.V004.BalanceUpdate.ContractUpdate
instance GHC.Classes.Ord Tezos.V004.BalanceUpdate.ContractUpdate
instance GHC.Classes.Eq Tezos.V004.BalanceUpdate.ContractUpdate
instance GHC.Generics.Generic Tezos.V004.BalanceUpdate.FreezerCategory
instance GHC.Show.Show Tezos.V004.BalanceUpdate.FreezerCategory
instance GHC.Classes.Ord Tezos.V004.BalanceUpdate.FreezerCategory
instance GHC.Classes.Eq Tezos.V004.BalanceUpdate.FreezerCategory
instance GHC.Base.Semigroup Tezos.V004.BalanceUpdate.Balances
instance GHC.Base.Monoid Tezos.V004.BalanceUpdate.Balances
instance Data.Group.Group Tezos.V004.BalanceUpdate.Balances
instance GHC.Base.Semigroup g => GHC.Base.Semigroup (Tezos.V004.BalanceUpdate.Balance' g)
instance (GHC.Base.Semigroup g, GHC.Base.Monoid g) => GHC.Base.Monoid (Tezos.V004.BalanceUpdate.Balance' g)
instance (GHC.Base.Semigroup g, Data.Group.Group g) => Data.Group.Group (Tezos.V004.BalanceUpdate.Balance' g)
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BalanceUpdate.BalanceUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.BalanceUpdate.BalanceUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.BalanceUpdate.FreezerUpdate
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.BalanceUpdate.FreezerCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.BalanceUpdate.FreezerCategory

module Tezos.V004.Account

-- | A special nonce that must increment with each successive operation
--   signed and submitted by a particular account.
type Counter = TezosPositiveBigNum
data AccountDelegate
AccountDelegate :: !Bool -> !Maybe PublicKeyHash -> AccountDelegate
[_accountDelegate_setable] :: AccountDelegate -> !Bool
[_accountDelegate_value] :: AccountDelegate -> !Maybe PublicKeyHash
data Account
Account :: !PublicKeyHash -> !Tez -> !Bool -> !AccountDelegate -> !Maybe ContractScript -> !Counter -> Account
[_account_manager] :: Account -> !PublicKeyHash
[_account_balance] :: Account -> !Tez
[_account_spendable] :: Account -> !Bool
[_account_delegate] :: Account -> !AccountDelegate
[_account_script] :: Account -> !Maybe ContractScript
[_account_counter] :: Account -> !Counter
data BakingRights
BakingRights :: !RawLevel -> !PublicKeyHash -> !Priority -> !Maybe UTCTime -> BakingRights
[_bakingRights_level] :: BakingRights -> !RawLevel
[_bakingRights_delegate] :: BakingRights -> !PublicKeyHash
[_bakingRights_priority] :: BakingRights -> !Priority
[_bakingRights_estimatedTime] :: BakingRights -> !Maybe UTCTime
data EndorsingRights
EndorsingRights :: !RawLevel -> !PublicKeyHash -> !Seq Word8 -> !Maybe UTCTime -> EndorsingRights
[_endorsingRights_level] :: EndorsingRights -> !RawLevel
[_endorsingRights_delegate] :: EndorsingRights -> !PublicKeyHash
[_endorsingRights_slots] :: EndorsingRights -> !Seq Word8
[_endorsingRights_estimatedTime] :: EndorsingRights -> !Maybe UTCTime
data FrozenBalanceByCycle
FrozenBalanceByCycle :: !Cycle -> !Tez -> !Tez -> !Tez -> FrozenBalanceByCycle
[_frozenBalanceByCycle_cycle] :: FrozenBalanceByCycle -> !Cycle
[_frozenBalanceByCycle_deposit] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_fees] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_rewards] :: FrozenBalanceByCycle -> !Tez
data DelegateInfo
DelegateInfo :: !Tez -> !Tez -> !Seq FrozenBalanceByCycle -> !Tez -> !Seq ContractId -> !Tez -> !Bool -> !Cycle -> DelegateInfo
[_delegateInfo_balance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalanceByCycle] :: DelegateInfo -> !Seq FrozenBalanceByCycle
[_delegateInfo_stakingBalance] :: DelegateInfo -> !Tez
[_delegateInfo_delegatedContracts] :: DelegateInfo -> !Seq ContractId
[_delegateInfo_delegatedBalance] :: DelegateInfo -> !Tez
[_delegateInfo_deactivated] :: DelegateInfo -> !Bool
[_delegateInfo_gracePeriod] :: DelegateInfo -> !Cycle
data ManagerKey
ManagerKey :: !PublicKeyHash -> !Maybe PublicKey -> ManagerKey
[_managerKey_manager] :: ManagerKey -> !PublicKeyHash
[_managerKey_key] :: ManagerKey -> !Maybe PublicKey
managerKey_manager :: Lens' ManagerKey PublicKeyHash
managerKey_key :: Lens' ManagerKey (Maybe PublicKey)
frozenBalanceByCycle_rewards :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_fees :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_deposit :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_cycle :: Lens' FrozenBalanceByCycle Cycle
endorsingRights_slots :: Lens' EndorsingRights (Seq Word8)
endorsingRights_level :: Lens' EndorsingRights RawLevel
endorsingRights_estimatedTime :: Lens' EndorsingRights (Maybe UTCTime)
endorsingRights_delegate :: Lens' EndorsingRights PublicKeyHash
delegateInfo_stakingBalance :: Lens' DelegateInfo Tez
delegateInfo_gracePeriod :: Lens' DelegateInfo Cycle
delegateInfo_frozenBalanceByCycle :: Lens' DelegateInfo (Seq FrozenBalanceByCycle)
delegateInfo_frozenBalance :: Lens' DelegateInfo Tez
delegateInfo_delegatedContracts :: Lens' DelegateInfo (Seq ContractId)
delegateInfo_delegatedBalance :: Lens' DelegateInfo Tez
delegateInfo_deactivated :: Lens' DelegateInfo Bool
delegateInfo_balance :: Lens' DelegateInfo Tez
bakingRights_priority :: Lens' BakingRights Priority
bakingRights_level :: Lens' BakingRights RawLevel
bakingRights_estimatedTime :: Lens' BakingRights (Maybe UTCTime)
bakingRights_delegate :: Lens' BakingRights PublicKeyHash
accountDelegate_value :: Lens' AccountDelegate (Maybe PublicKeyHash)
accountDelegate_setable :: Lens' AccountDelegate Bool
account_spendable :: Lens' Account Bool
account_script :: Lens' Account (Maybe ContractScript)
account_manager :: Lens' Account PublicKeyHash
account_delegate :: Lens' Account AccountDelegate
account_counter :: Lens' Account Counter
account_balance :: Lens' Account Tez
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.Account
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.Account
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.AccountDelegate
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.AccountDelegate
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.BakingRights
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.BakingRights
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.DelegateInfo
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.DelegateInfo
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.EndorsingRights
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.EndorsingRights
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.FrozenBalanceByCycle
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.FrozenBalanceByCycle
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Account.ManagerKey
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Account.ManagerKey
instance GHC.Classes.Ord Tezos.V004.Account.ManagerKey
instance GHC.Classes.Eq Tezos.V004.Account.ManagerKey
instance GHC.Show.Show Tezos.V004.Account.ManagerKey
instance GHC.Show.Show Tezos.V004.Account.FrozenBalanceByCycle
instance GHC.Classes.Ord Tezos.V004.Account.FrozenBalanceByCycle
instance GHC.Classes.Eq Tezos.V004.Account.FrozenBalanceByCycle
instance GHC.Show.Show Tezos.V004.Account.EndorsingRights
instance GHC.Classes.Ord Tezos.V004.Account.EndorsingRights
instance GHC.Classes.Eq Tezos.V004.Account.EndorsingRights
instance GHC.Show.Show Tezos.V004.Account.BakingRights
instance GHC.Classes.Ord Tezos.V004.Account.BakingRights
instance GHC.Classes.Eq Tezos.V004.Account.BakingRights
instance GHC.Classes.Ord Tezos.V004.Account.Account
instance GHC.Classes.Eq Tezos.V004.Account.Account
instance GHC.Show.Show Tezos.V004.Account.Account
instance GHC.Classes.Ord Tezos.V004.Account.AccountDelegate
instance GHC.Classes.Eq Tezos.V004.Account.AccountDelegate
instance GHC.Show.Show Tezos.V004.Account.AccountDelegate

module Tezos.V004.Operation

-- | "operation": {
data Operation
Operation :: !ProtocolHash -> !ChainId -> !OperationHash -> !BlockHash -> !Seq OperationContents -> !Maybe Signature -> Operation
[_operation_protocol] :: Operation -> !ProtocolHash
[_operation_chainId] :: Operation -> !ChainId
[_operation_hash] :: Operation -> !OperationHash
[_operation_branch] :: Operation -> !BlockHash
[_operation_contents] :: Operation -> !Seq OperationContents
[_operation_signature] :: Operation -> !Maybe Signature
data OperationWithMetadata
OperationWithMetadata :: !Seq OperationContents -> !Maybe Signature -> OperationWithMetadata
[_operationWithMetadata_contents] :: OperationWithMetadata -> !Seq OperationContents
[_operationWithMetadata_signature] :: OperationWithMetadata -> !Maybe Signature
data OpKind
OpKind_SeedNonceRevelation :: OpKind
OpKind_DoubleEndorsementEvidence :: OpKind
OpKind_DoubleBakingEvidence :: OpKind
OpKind_ActivateAccount :: OpKind
OpKind_Endorsement :: OpKind
OpKind_Proposals :: OpKind
OpKind_Ballot :: OpKind
OpKind_Manager :: [OpKindManager] -> OpKind
data OpKindTag opKind
[OpKindTag_Endorsement] :: OpKindTag  'OpKind_Endorsement
[OpKindTag_SeedNonceRevelation] :: OpKindTag  'OpKind_SeedNonceRevelation
[OpKindTag_DoubleEndorsementEvidence] :: OpKindTag  'OpKind_DoubleEndorsementEvidence
[OpKindTag_DoubleBakingEvidence] :: OpKindTag  'OpKind_DoubleBakingEvidence
[OpKindTag_ActivateAccount] :: OpKindTag  'OpKind_ActivateAccount
[OpKindTag_Proposals] :: OpKindTag  'OpKind_Proposals
[OpKindTag_Ballot] :: OpKindTag  'OpKind_Ballot
[OpKindTag_Manager] :: OpKindManagerTag opKindManager -> OpKindTag ( 'OpKind_Manager (opKindManager : '[]))
data OpsKindTag opKinds
[OpsKindTag_Single] :: OpKindTag k -> OpsKindTag k
[OpsKindTag_Cons] :: OpKindTag ( 'OpKind_Manager (k : '[])) -> OpsKindTag ( 'OpKind_Manager (kk : ks)) -> OpsKindTag ( 'OpKind_Manager (k : (kk : ks)))
data OpKindManager
OpKindManager_Reveal :: OpKindManager
OpKindManager_Transaction :: OpKindManager
OpKindManager_Origination :: OpKindManager
OpKindManager_Delegation :: OpKindManager
data OpKindManagerTag opKindManager
[OpKindManagerTag_Reveal] :: OpKindManagerTag  'OpKindManager_Reveal
[OpKindManagerTag_Transaction] :: OpKindManagerTag  'OpKindManager_Transaction
[OpKindManagerTag_Origination] :: OpKindManagerTag  'OpKindManager_Origination
[OpKindManagerTag_Delegation] :: OpKindManagerTag  'OpKindManager_Delegation
data BatchableOp k
[BatchableOp] :: OpKindManagerTag k -> BatchableOp ( 'OpKind_Manager '[k])
data Op (a :: OpKind)
Op :: !BlockHash -> !OpContentsList a -> !Maybe Signature -> Op
[_op_branch] :: Op -> !BlockHash
[_op_contents] :: Op -> !OpContentsList a
[_op_signature] :: Op -> !Maybe Signature

-- | next_operation: { "protocol":
--   <a>Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd</a>, "branch":
--   $block_hash, "contents": [ $operation.alpha.contents ... ],
--   "signature": $Signature }
--   
--   Like Op but with a protocol hash added. Used in preapply.
data ProtoOp (a :: OpKind)
ProtoOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Maybe Signature -> ProtoOp
[_protoOp_protocol] :: ProtoOp -> !ProtocolHash
[_protoOp_branch] :: ProtoOp -> !BlockHash
[_protoOp_contents] :: ProtoOp -> !OpContentsList a
[_protoOp_signature] :: ProtoOp -> !Maybe Signature
stripOpProtocol :: ProtoOp a -> Op a
data EmptyMetadata
EmptyMetadata :: EmptyMetadata

-- | operation.alpha.operation_with_metadata: { "contents": [
--   $operation.alpha.operation_contents_and_result ... ], "signature"?:
--   $Signature } || { "contents": [ $operation.alpha.contents ... ],
--   "signature"?: $Signature }
--   
--   This is the return type of the run_operation RPC. RPC reference: POST
--   <i>chains</i><a>chain_id</a><i>blocks</i><a>block_id</a><i>helpers</i>scripts/run_operation
data NoContextOperation
NoContextOperation :: !Seq OperationContents -> !Maybe Signature -> NoContextOperation
[_noContextOperation_contents] :: NoContextOperation -> !Seq OperationContents
[_noContextOperation_signature] :: NoContextOperation -> !Maybe Signature
stripOperationContext :: Operation -> NoContextOperation

-- | Like Op but with its own hash. Used in the mempool.
data PendingOp (a :: OpKind)
PendingOp :: !OperationHash -> !BlockHash -> !OpContentsList a -> !Signature -> PendingOp
[_pendingOp_hash] :: PendingOp -> !OperationHash
[_pendingOp_branch] :: PendingOp -> !BlockHash
[_pendingOp_contents] :: PendingOp -> !OpContentsList a
[_pendingOp_signature] :: PendingOp -> !Signature

-- | This is also used in the mempool for operations that will not be
--   applied for one reason or another.
data ErroredOp (a :: OpKind)
ErroredOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Signature -> !Value -> ErroredOp
[_erroredOp_protocol] :: ErroredOp -> !ProtocolHash
[_erroredOp_branch] :: ErroredOp -> !BlockHash
[_erroredOp_contents] :: ErroredOp -> !OpContentsList a
[_erroredOp_signature] :: ErroredOp -> !Signature
[_erroredOp_error] :: ErroredOp -> !Value

-- | "operation.alpha.operation_contents_and_result": {
data OperationContents
OperationContents_Endorsement :: !OperationContentsEndorsement -> OperationContents
OperationContents_SeedNonceRevelation :: !OperationContentsSeedNonceRevelation -> OperationContents
OperationContents_DoubleEndorsementEvidence :: !OperationContentsDoubleEndorsementEvidence -> OperationContents
OperationContents_DoubleBakingEvidence :: !OperationContentsDoubleBakingEvidence -> OperationContents
OperationContents_ActivateAccount :: !OperationContentsActivateAccount -> OperationContents
OperationContents_Proposals :: !OperationContentsProposals -> OperationContents
OperationContents_Ballot :: !OperationContentsBallot -> OperationContents
OperationContents_Reveal :: !OperationContentsReveal -> OperationContents
OperationContents_Transaction :: !OperationContentsTransaction -> OperationContents
OperationContents_Origination :: !OperationContentsOrigination -> OperationContents
OperationContents_Delegation :: !OperationContentsDelegation -> OperationContents
data OpContentsList (a :: OpKind)
[OpContentsList_Single] :: OpContents a -> OpContentsList a
[OpContentsList_Cons] :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager (kk : ks)) -> OpContentsList ( 'OpKind_Manager (k : (kk : ks)))
data OpContents (a :: OpKind)
[OpContents_Endorsement] :: !OpContentsEndorsement -> OpContents  'OpKind_Endorsement
[OpContents_SeedNonceRevelation] :: !OpContentsSeedNonceRevelation -> OpContents  'OpKind_SeedNonceRevelation
[OpContents_DoubleEndorsementEvidence] :: !OpContentsDoubleEndorsementEvidence -> OpContents  'OpKind_DoubleEndorsementEvidence
[OpContents_DoubleBakingEvidence] :: !OpContentsDoubleBakingEvidence -> OpContents  'OpKind_DoubleBakingEvidence
[OpContents_ActivateAccount] :: !OpContentsActivateAccount -> OpContents  'OpKind_ActivateAccount
[OpContents_Proposals] :: !OpContentsProposals -> OpContents  'OpKind_Proposals
[OpContents_Ballot] :: !OpContentsBallot -> OpContents  'OpKind_Ballot
[OpContents_Reveal] :: !OpContentsManager OpContentsReveal -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Reveal])
[OpContents_Transaction] :: !OpContentsManager OpContentsTransaction -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Transaction])
[OpContents_Origination] :: !OpContentsManager OpContentsOrigination -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Origination])
[OpContents_Delegation] :: !OpContentsManager OpContentsDelegation -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Delegation])
data OpContentsEndorsement
OpContentsEndorsement :: !RawLevel -> OpContentsEndorsement
[_opContentsEndorsement_level] :: OpContentsEndorsement -> !RawLevel
data OpContentsSeedNonceRevelation
OpContentsSeedNonceRevelation :: !RawLevel -> !Base16ByteString ByteString -> OpContentsSeedNonceRevelation
[_opContentsSeedNonceRevelation_level] :: OpContentsSeedNonceRevelation -> !RawLevel
[_opContentsSeedNonceRevelation_nonce] :: OpContentsSeedNonceRevelation -> !Base16ByteString ByteString
data OpContentsDoubleEndorsementEvidence
OpContentsDoubleEndorsementEvidence :: !InlinedEndorsement -> !InlinedEndorsement -> OpContentsDoubleEndorsementEvidence
[_opContentsDoubleEndorsementEvidence_op1] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
[_opContentsDoubleEndorsementEvidence_op2] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
data OpContentsDoubleBakingEvidence
OpContentsDoubleBakingEvidence :: !BlockHeaderFull -> !BlockHeaderFull -> OpContentsDoubleBakingEvidence
[_opContentsDoubleBakingEvidence_bh1] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
[_opContentsDoubleBakingEvidence_bh2] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
data OpContentsActivateAccount
OpContentsActivateAccount :: !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OpContentsActivateAccount
[_opContentsActivateAccount_pkh] :: OpContentsActivateAccount -> !Ed25519PublicKeyHash
[_opContentsActivateAccount_secret] :: OpContentsActivateAccount -> !Base16ByteString ByteString
data OpContentsProposals
OpContentsProposals :: !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OpContentsProposals
[_opContentsProposals_source] :: OpContentsProposals -> !PublicKeyHash
[_opContentsProposals_period] :: OpContentsProposals -> !RawLevel
[_opContentsProposals_proposals] :: OpContentsProposals -> !Seq ProtocolHash
data OpContentsBallot
OpContentsBallot :: !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OpContentsBallot
[_opContentsBallot_source] :: OpContentsBallot -> !PublicKeyHash
[_opContentsBallot_period] :: OpContentsBallot -> !RawLevel
[_opContentsBallot_proposal] :: OpContentsBallot -> !ProtocolHash
[_opContentsBallot_ballot] :: OpContentsBallot -> !Ballot
data OpContentsManager op
OpContentsManager :: !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !op -> OpContentsManager op
[_opContentsManager_source] :: OpContentsManager op -> !ContractId
[_opContentsManager_fee] :: OpContentsManager op -> !Tez
[_opContentsManager_counter] :: OpContentsManager op -> !Counter
[_opContentsManager_gasLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_storageLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_operation] :: OpContentsManager op -> !op
data OpContentsReveal
OpContentsReveal :: !PublicKey -> OpContentsReveal
[_opContentsReveal_publicKey] :: OpContentsReveal -> !PublicKey
data OpContentsTransaction
OpContentsTransaction :: !Tez -> !ContractId -> !Maybe Expression -> OpContentsTransaction
[_opContentsTransaction_amount] :: OpContentsTransaction -> !Tez
[_opContentsTransaction_destination] :: OpContentsTransaction -> !ContractId
[_opContentsTransaction_parameters] :: OpContentsTransaction -> !Maybe Expression
data OpContentsOrigination
OpContentsOrigination :: !PublicKeyHash -> !Tez -> !Bool -> !Bool -> !Maybe PublicKeyHash -> !Maybe ContractScript -> OpContentsOrigination
[_opContentsOrigination_managerPubkey] :: OpContentsOrigination -> !PublicKeyHash
[_opContentsOrigination_balance] :: OpContentsOrigination -> !Tez
[_opContentsOrigination_spendable] :: OpContentsOrigination -> !Bool
[_opContentsOrigination_delegatable] :: OpContentsOrigination -> !Bool
[_opContentsOrigination_delegate] :: OpContentsOrigination -> !Maybe PublicKeyHash
[_opContentsOrigination_script] :: OpContentsOrigination -> !Maybe ContractScript
data OpContentsDelegation
OpContentsDelegation :: !PublicKeyHash -> OpContentsDelegation
[_opContentsDelegation_delegate] :: OpContentsDelegation -> !PublicKeyHash

-- | "kind": { "type": "string", "enum": [ "endorsement" ] },
data OperationContentsEndorsement
OperationContentsEndorsement :: EndorsementMetadata -> RawLevel -> OperationContentsEndorsement
[_operationContentsEndorsement_metadata] :: OperationContentsEndorsement -> EndorsementMetadata
[_operationContentsEndorsement_level] :: OperationContentsEndorsement -> RawLevel
data EndorsementMetadata
EndorsementMetadata :: !Seq BalanceUpdate -> !PublicKeyHash -> !Seq Word8 -> EndorsementMetadata
[_endorsementMetadata_balanceUpdates] :: EndorsementMetadata -> !Seq BalanceUpdate
[_endorsementMetadata_delegate] :: EndorsementMetadata -> !PublicKeyHash
[_endorsementMetadata_slots] :: EndorsementMetadata -> !Seq Word8

-- | "kind": { "type": "string", "enum": [ "seed_nonce_revelation" ] },
data OperationContentsSeedNonceRevelation
OperationContentsSeedNonceRevelation :: SeedNonceRevelationMetadata -> RawLevel -> !Base16ByteString ByteString -> OperationContentsSeedNonceRevelation
[_operationContentsSeedNonceRevelation_metadata] :: OperationContentsSeedNonceRevelation -> SeedNonceRevelationMetadata
[_operationContentsSeedNonceRevelation_level] :: OperationContentsSeedNonceRevelation -> RawLevel
[_operationContentsSeedNonceRevelation_nonce] :: OperationContentsSeedNonceRevelation -> !Base16ByteString ByteString
data SeedNonceRevelationMetadata
SeedNonceRevelationMetadata :: !Seq BalanceUpdate -> SeedNonceRevelationMetadata
[_seedNonceRevelationMetadata_balanceUpdates] :: SeedNonceRevelationMetadata -> !Seq BalanceUpdate
data InlinedEndorsement
InlinedEndorsement :: !BlockHash -> !InlinedEndorsementContents -> !Maybe Signature -> InlinedEndorsement
[_inlinedEndorsement_branch] :: InlinedEndorsement -> !BlockHash
[_inlinedEndorsement_operations] :: InlinedEndorsement -> !InlinedEndorsementContents
[_inlinedEndorsement_signature] :: InlinedEndorsement -> !Maybe Signature
data InlinedEndorsementContents
InlinedEndorsementContents :: RawLevel -> InlinedEndorsementContents
[_inlinedEndorsementContents_level] :: InlinedEndorsementContents -> RawLevel

-- | "kind": { "type": "string", "enum": [ "double_endorsement_evidence" ]
--   },
data OperationContentsDoubleEndorsementEvidence
OperationContentsDoubleEndorsementEvidence :: DoubleEndorsementEvidenceMetadata -> InlinedEndorsement -> InlinedEndorsement -> OperationContentsDoubleEndorsementEvidence
[_operationContentsDoubleEndorsementEvidence_metadata] :: OperationContentsDoubleEndorsementEvidence -> DoubleEndorsementEvidenceMetadata
[_operationContentsDoubleEndorsementEvidence_op1] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
[_operationContentsDoubleEndorsementEvidence_op2] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
data DoubleEndorsementEvidenceMetadata
DoubleEndorsementEvidenceMetadata :: !Seq BalanceUpdate -> DoubleEndorsementEvidenceMetadata
[_doubleEndorsementEvidenceMetadata_balanceUpdates] :: DoubleEndorsementEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_baking_evidence" ] },
data OperationContentsDoubleBakingEvidence
OperationContentsDoubleBakingEvidence :: !DoubleBakingEvidenceMetadata -> !BlockHeaderFull -> !BlockHeaderFull -> OperationContentsDoubleBakingEvidence
[_operationContentsDoubleBakingEvidence_metadata] :: OperationContentsDoubleBakingEvidence -> !DoubleBakingEvidenceMetadata
[_operationContentsDoubleBakingEvidence_bh1] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
[_operationContentsDoubleBakingEvidence_bh2] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
data DoubleBakingEvidenceMetadata
DoubleBakingEvidenceMetadata :: !Seq BalanceUpdate -> DoubleBakingEvidenceMetadata
[_doubleBakingEvidenceMetadata_balanceUpdates] :: DoubleBakingEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "activate_account" ] },
data OperationContentsActivateAccount
OperationContentsActivateAccount :: !ActivateMetadata -> !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OperationContentsActivateAccount
[_operationContentsActivateAccount_metadata] :: OperationContentsActivateAccount -> !ActivateMetadata
[_operationContentsActivateAccount_pkh] :: OperationContentsActivateAccount -> !Ed25519PublicKeyHash
[_operationContentsActivateAccount_secret] :: OperationContentsActivateAccount -> !Base16ByteString ByteString
data ActivateMetadata
ActivateMetadata :: !Seq BalanceUpdate -> ActivateMetadata
[_activateMetadata_balanceUpdates] :: ActivateMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "proposals" ] },
data OperationContentsProposals
OperationContentsProposals :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OperationContentsProposals
[_operationContentsProposals_metadata] :: OperationContentsProposals -> !EmptyMetadata
[_operationContentsProposals_source] :: OperationContentsProposals -> !PublicKeyHash
[_operationContentsProposals_period] :: OperationContentsProposals -> !RawLevel
[_operationContentsProposals_proposals] :: OperationContentsProposals -> !Seq ProtocolHash

-- | "ballot": { "type": "string", "enum": [ "nay", "yay", "pass" ] },
data Ballot
Ballot_Nay :: Ballot
Ballot_Yay :: Ballot
Ballot_Pass :: Ballot

-- | "kind": { "type": "string", "enum": [ "ballot" ] },
data OperationContentsBallot
OperationContentsBallot :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OperationContentsBallot
[_operationContentsBallot_metadata] :: OperationContentsBallot -> !EmptyMetadata
[_operationContentsBallot_source] :: OperationContentsBallot -> !PublicKeyHash
[_operationContentsBallot_period] :: OperationContentsBallot -> !RawLevel
[_operationContentsBallot_proposal] :: OperationContentsBallot -> !ProtocolHash
[_operationContentsBallot_ballot] :: OperationContentsBallot -> !Ballot
data ManagerOperationMetadata a
ManagerOperationMetadata :: !Seq BalanceUpdate -> !OperationResult a -> !Maybe (Seq InternalOperationResult) -> ManagerOperationMetadata a
[_managerOperationMetadata_balanceUpdates] :: ManagerOperationMetadata a -> !Seq BalanceUpdate
[_managerOperationMetadata_operationResult] :: ManagerOperationMetadata a -> !OperationResult a
[_managerOperationMetadata_internalOperationResults] :: ManagerOperationMetadata a -> !Maybe (Seq InternalOperationResult)
data InternalOperationResult
InternalOperationResult_Reveal :: !InternalOperationContentsReveal -> InternalOperationResult
InternalOperationResult_Transaction :: !InternalOperationContentsTransaction -> InternalOperationResult
InternalOperationResult_Origination :: !InternalOperationContentsOrigination -> InternalOperationResult
InternalOperationResult_Delegation :: !InternalOperationContentsDelegation -> InternalOperationResult
data InternalOperationContentsReveal
InternalOperationContentsReveal :: InternalOperationContentsReveal
data InternalOperationContentsTransaction
InternalOperationContentsTransaction :: !ContractId -> !Word16 -> !Tez -> !ContractId -> !Maybe Expression -> !OperationResultTransaction -> InternalOperationContentsTransaction
[_internalOperationContentsTransaction_source] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_nonce] :: InternalOperationContentsTransaction -> !Word16
[_internalOperationContentsTransaction_amount] :: InternalOperationContentsTransaction -> !Tez
[_internalOperationContentsTransaction_destination] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_parameters] :: InternalOperationContentsTransaction -> !Maybe Expression
[_internalOperationContentsTransaction_result] :: InternalOperationContentsTransaction -> !OperationResultTransaction
data InternalOperationContentsOrigination
InternalOperationContentsOrigination :: InternalOperationContentsOrigination
data InternalOperationContentsDelegation
InternalOperationContentsDelegation :: InternalOperationContentsDelegation
data OperationResultStatus
OperationResultStatus_Applied :: OperationResultStatus
OperationResultStatus_Failed :: OperationResultStatus
OperationResultStatus_Skipped :: OperationResultStatus
OperationResultStatus_Backtracked :: OperationResultStatus

-- | only certain combinations of status<i>errors</i>content are valid, but
--   ignore that for now
data OperationResult a
OperationResult :: !OperationResultStatus -> !Maybe (Seq JsonRpcError) -> !Maybe a -> OperationResult a
[_operationResult_status] :: OperationResult a -> !OperationResultStatus
[_operationResult_errors] :: OperationResult a -> !Maybe (Seq JsonRpcError)
[_operationResult_content] :: OperationResult a -> !Maybe a

-- | "kind": { "type": "string", "enum": [ "reveal" ] },
data OperationContentsReveal
OperationContentsReveal :: ManagerOperationMetadata OperationResultReveal -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKey -> OperationContentsReveal
[_operationContentsReveal_metadata] :: OperationContentsReveal -> ManagerOperationMetadata OperationResultReveal
[_operationContentsReveal_source] :: OperationContentsReveal -> !ContractId
[_operationContentsReveal_fee] :: OperationContentsReveal -> !Tez
[_operationContentsReveal_counter] :: OperationContentsReveal -> !Counter
[_operationContentsReveal_gasLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_storageLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_publicKey] :: OperationContentsReveal -> !PublicKey
data OperationResultReveal
OperationResultReveal :: OperationResultReveal

-- | "kind": { "type": "string", "enum": [ "transaction" ] },
data OperationContentsTransaction
OperationContentsTransaction :: ManagerOperationMetadata OperationResultTransaction -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !ContractId -> !Maybe Expression -> OperationContentsTransaction
[_operationContentsTransaction_metadata] :: OperationContentsTransaction -> ManagerOperationMetadata OperationResultTransaction
[_operationContentsTransaction_source] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_fee] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_counter] :: OperationContentsTransaction -> !Counter
[_operationContentsTransaction_gasLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_storageLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_amount] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_destination] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_parameters] :: OperationContentsTransaction -> !Maybe Expression

-- | "operation.alpha.operation_result.transaction": {
data OperationResultTransaction
OperationResultTransaction :: !Maybe Expression -> !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultTransaction
[_operationResultTransaction_storage] :: OperationResultTransaction -> !Maybe Expression
[_operationResultTransaction_balanceUpdates] :: OperationResultTransaction -> !Seq BalanceUpdate
[_operationResultTransaction_originatedContracts] :: OperationResultTransaction -> !Seq ContractId
[_operationResultTransaction_consumedGas] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_storageSize] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_paidStorageSizeDiff] :: OperationResultTransaction -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "origination" ] },
data OperationContentsOrigination
OperationContentsOrigination :: ManagerOperationMetadata OperationResultOrigination -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKeyHash -> !Tez -> !Bool -> !Bool -> !Maybe PublicKeyHash -> !Maybe ContractScript -> OperationContentsOrigination
[_operationContentsOrigination_metadata] :: OperationContentsOrigination -> ManagerOperationMetadata OperationResultOrigination
[_operationContentsOrigination_source] :: OperationContentsOrigination -> !ContractId
[_operationContentsOrigination_fee] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_counter] :: OperationContentsOrigination -> !Counter
[_operationContentsOrigination_gasLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_storageLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_managerPubkey] :: OperationContentsOrigination -> !PublicKeyHash
[_operationContentsOrigination_balance] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_spendable] :: OperationContentsOrigination -> !Bool
[_operationContentsOrigination_delegatable] :: OperationContentsOrigination -> !Bool
[_operationContentsOrigination_delegate] :: OperationContentsOrigination -> !Maybe PublicKeyHash
[_operationContentsOrigination_script] :: OperationContentsOrigination -> !Maybe ContractScript
data OperationResultOrigination
OperationResultOrigination :: !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultOrigination
[_operationResultOrigination_balanceUpdates] :: OperationResultOrigination -> !Seq BalanceUpdate
[_operationResultOrigination_originatedContracts] :: OperationResultOrigination -> !Seq ContractId
[_operationResultOrigination_consumedGas] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_storageSize] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_paidStorageSizeDiff] :: OperationResultOrigination -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "delegation" ] },
data OperationContentsDelegation
OperationContentsDelegation :: ManagerOperationMetadata OperationResultDelegation -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Maybe PublicKeyHash -> OperationContentsDelegation
[_operationContentsDelegation_metadata] :: OperationContentsDelegation -> ManagerOperationMetadata OperationResultDelegation
[_operationContentsDelegation_source] :: OperationContentsDelegation -> !ContractId
[_operationContentsDelegation_fee] :: OperationContentsDelegation -> !Tez
[_operationContentsDelegation_counter] :: OperationContentsDelegation -> !Counter
[_operationContentsDelegation_gasLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_storageLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_delegate] :: OperationContentsDelegation -> !Maybe PublicKeyHash
data OperationResultDelegation
OperationResultDelegation :: OperationResultDelegation
stripEndorsement :: Operation -> Maybe (Op  'OpKind_Endorsement)
outlineEndorsement :: InlinedEndorsement -> Op  'OpKind_Endorsement
nonce_size :: Int
activation_code_size :: Int
jsonAddKeys :: [(Text, Value)] -> Value -> Value
checkBatch :: MonadFail m => [DSum OpKindTag OpContents] -> m (DSum OpsKindTag OpContentsList)
seedNonceRevelationMetadata_balanceUpdates :: Iso' SeedNonceRevelationMetadata (Seq BalanceUpdate)
opContentsOrigination_spendable :: Lens' OpContentsOrigination Bool
opContentsOrigination_script :: Lens' OpContentsOrigination (Maybe ContractScript)
opContentsOrigination_managerPubkey :: Lens' OpContentsOrigination PublicKeyHash
opContentsOrigination_delegate :: Lens' OpContentsOrigination (Maybe PublicKeyHash)
opContentsOrigination_delegatable :: Lens' OpContentsOrigination Bool
opContentsOrigination_balance :: Lens' OpContentsOrigination Tez
opContentsTransaction_parameters :: Lens' OpContentsTransaction (Maybe Expression)
opContentsTransaction_destination :: Lens' OpContentsTransaction ContractId
opContentsTransaction_amount :: Lens' OpContentsTransaction Tez
opContentsManager_storageLimit :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) TezosPositiveBigNum
opContentsManager_source :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) ContractId
opContentsManager_operation :: forall op_a2hYY op_a2pDJ. Lens (OpContentsManager op_a2hYY) (OpContentsManager op_a2pDJ) op_a2hYY op_a2pDJ
opContentsManager_gasLimit :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) TezosPositiveBigNum
opContentsManager_fee :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) Tez
opContentsManager_counter :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) Counter
opContentsEndorsement_level :: Iso' OpContentsEndorsement RawLevel
operationResultTransaction_storageSize :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_storage :: Lens' OperationResultTransaction (Maybe Expression)
operationResultTransaction_paidStorageSizeDiff :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_originatedContracts :: Lens' OperationResultTransaction (Seq ContractId)
operationResultTransaction_consumedGas :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_balanceUpdates :: Lens' OperationResultTransaction (Seq BalanceUpdate)
operationResultOrigination_storageSize :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_paidStorageSizeDiff :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_originatedContracts :: Lens' OperationResultOrigination (Seq ContractId)
operationResultOrigination_consumedGas :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_balanceUpdates :: Lens' OperationResultOrigination (Seq BalanceUpdate)
operationResult_status :: forall a_a2hYW. Lens' (OperationResult a_a2hYW) OperationResultStatus
operationResult_errors :: forall a_a2hYW. Lens' (OperationResult a_a2hYW) (Maybe (Seq JsonRpcError))
operationResult_content :: forall a_a2hYW a_a2pC6. Lens (OperationResult a_a2hYW) (OperationResult a_a2pC6) (Maybe a_a2hYW) (Maybe a_a2pC6)
operationContentsTransaction_storageLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_source :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_parameters :: Lens' OperationContentsTransaction (Maybe Expression)
operationContentsTransaction_metadata :: Lens' OperationContentsTransaction (ManagerOperationMetadata OperationResultTransaction)
operationContentsTransaction_gasLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_fee :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_destination :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_counter :: Lens' OperationContentsTransaction Counter
operationContentsTransaction_amount :: Lens' OperationContentsTransaction Tez
operationContentsSeedNonceRevelation_nonce :: Lens' OperationContentsSeedNonceRevelation (Base16ByteString ByteString)
operationContentsSeedNonceRevelation_metadata :: Lens' OperationContentsSeedNonceRevelation SeedNonceRevelationMetadata
operationContentsSeedNonceRevelation_level :: Lens' OperationContentsSeedNonceRevelation RawLevel
operationContentsReveal_storageLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_source :: Lens' OperationContentsReveal ContractId
operationContentsReveal_publicKey :: Lens' OperationContentsReveal PublicKey
operationContentsReveal_metadata :: Lens' OperationContentsReveal (ManagerOperationMetadata OperationResultReveal)
operationContentsReveal_gasLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_fee :: Lens' OperationContentsReveal Tez
operationContentsReveal_counter :: Lens' OperationContentsReveal Counter
operationContentsProposals_source :: Lens' OperationContentsProposals PublicKeyHash
operationContentsProposals_proposals :: Lens' OperationContentsProposals (Seq ProtocolHash)
operationContentsProposals_period :: Lens' OperationContentsProposals RawLevel
operationContentsProposals_metadata :: Lens' OperationContentsProposals EmptyMetadata
operationContentsOrigination_storageLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_spendable :: Lens' OperationContentsOrigination Bool
operationContentsOrigination_source :: Lens' OperationContentsOrigination ContractId
operationContentsOrigination_script :: Lens' OperationContentsOrigination (Maybe ContractScript)
operationContentsOrigination_metadata :: Lens' OperationContentsOrigination (ManagerOperationMetadata OperationResultOrigination)
operationContentsOrigination_managerPubkey :: Lens' OperationContentsOrigination PublicKeyHash
operationContentsOrigination_gasLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_fee :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_delegate :: Lens' OperationContentsOrigination (Maybe PublicKeyHash)
operationContentsOrigination_delegatable :: Lens' OperationContentsOrigination Bool
operationContentsOrigination_counter :: Lens' OperationContentsOrigination Counter
operationContentsOrigination_balance :: Lens' OperationContentsOrigination Tez
operationContentsEndorsement_metadata :: Lens' OperationContentsEndorsement EndorsementMetadata
operationContentsEndorsement_level :: Lens' OperationContentsEndorsement RawLevel
operationContentsDoubleEndorsementEvidence_op2 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_op1 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_metadata :: Lens' OperationContentsDoubleEndorsementEvidence DoubleEndorsementEvidenceMetadata
operationContentsDoubleBakingEvidence_metadata :: Lens' OperationContentsDoubleBakingEvidence DoubleBakingEvidenceMetadata
operationContentsDoubleBakingEvidence_bh2 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_bh1 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDelegation_storageLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_source :: Lens' OperationContentsDelegation ContractId
operationContentsDelegation_metadata :: Lens' OperationContentsDelegation (ManagerOperationMetadata OperationResultDelegation)
operationContentsDelegation_gasLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_fee :: Lens' OperationContentsDelegation Tez
operationContentsDelegation_delegate :: Lens' OperationContentsDelegation (Maybe PublicKeyHash)
operationContentsDelegation_counter :: Lens' OperationContentsDelegation Counter
operationContentsBallot_source :: Lens' OperationContentsBallot PublicKeyHash
operationContentsBallot_proposal :: Lens' OperationContentsBallot ProtocolHash
operationContentsBallot_period :: Lens' OperationContentsBallot RawLevel
operationContentsBallot_metadata :: Lens' OperationContentsBallot EmptyMetadata
operationContentsBallot_ballot :: Lens' OperationContentsBallot Ballot
operationContentsActivateAccount_secret :: Lens' OperationContentsActivateAccount (Base16ByteString ByteString)
operationContentsActivateAccount_pkh :: Lens' OperationContentsActivateAccount Ed25519PublicKeyHash
operationContentsActivateAccount_metadata :: Lens' OperationContentsActivateAccount ActivateMetadata
managerOperationMetadata_operationResult :: forall a_a2hYX a_a2ptr. Lens (ManagerOperationMetadata a_a2hYX) (ManagerOperationMetadata a_a2ptr) (OperationResult a_a2hYX) (OperationResult a_a2ptr)
managerOperationMetadata_internalOperationResults :: forall a_a2hYX. Lens' (ManagerOperationMetadata a_a2hYX) (Maybe (Seq InternalOperationResult))
managerOperationMetadata_balanceUpdates :: forall a_a2hYX. Lens' (ManagerOperationMetadata a_a2hYX) (Seq BalanceUpdate)
internalOperationContentsTransaction_source :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_result :: Lens' InternalOperationContentsTransaction OperationResultTransaction
internalOperationContentsTransaction_parameters :: Lens' InternalOperationContentsTransaction (Maybe Expression)
internalOperationContentsTransaction_nonce :: Lens' InternalOperationContentsTransaction Word16
internalOperationContentsTransaction_destination :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_amount :: Lens' InternalOperationContentsTransaction Tez
inlinedEndorsementContents_level :: Iso' InlinedEndorsementContents RawLevel
inlinedEndorsement_signature :: Lens' InlinedEndorsement (Maybe Signature)
inlinedEndorsement_operations :: Lens' InlinedEndorsement InlinedEndorsementContents
inlinedEndorsement_branch :: Lens' InlinedEndorsement BlockHash
endorsementMetadata_slots :: Lens' EndorsementMetadata (Seq Word8)
endorsementMetadata_delegate :: Lens' EndorsementMetadata PublicKeyHash
endorsementMetadata_balanceUpdates :: Lens' EndorsementMetadata (Seq BalanceUpdate)
doubleEndorsementEvidenceMetadata_balanceUpdates :: Iso' DoubleEndorsementEvidenceMetadata (Seq BalanceUpdate)
doubleBakingEvidenceMetadata_balanceUpdates :: Iso' DoubleBakingEvidenceMetadata (Seq BalanceUpdate)
activateMetadata_balanceUpdates :: Iso' ActivateMetadata (Seq BalanceUpdate)
erroredOp_signature :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) Signature
erroredOp_protocol :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) ProtocolHash
erroredOp_error :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) Value
erroredOp_contents :: forall a_a2hZ5 a_a2prw. Lens (ErroredOp a_a2hZ5) (ErroredOp a_a2prw) (OpContentsList a_a2hZ5) (OpContentsList a_a2prw)
erroredOp_branch :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) BlockHash
pendingOp_signature :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) Signature
pendingOp_hash :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) OperationHash
pendingOp_contents :: forall a_a2hZ6 a_a2pr6. Lens (PendingOp a_a2hZ6) (PendingOp a_a2pr6) (OpContentsList a_a2hZ6) (OpContentsList a_a2pr6)
pendingOp_branch :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) BlockHash
noContextOperation_signature :: Lens' NoContextOperation (Maybe Signature)
noContextOperation_contents :: Lens' NoContextOperation (Seq OperationContents)
operation_signature :: Lens' Operation (Maybe Signature)
operation_protocol :: Lens' Operation ProtocolHash
operation_hash :: Lens' Operation OperationHash
operation_contents :: Lens' Operation (Seq OperationContents)
operation_chainId :: Lens' Operation ChainId
operation_branch :: Lens' Operation BlockHash
operationWithMetadata_signature :: Lens' OperationWithMetadata (Maybe Signature)
operationWithMetadata_contents :: Lens' OperationWithMetadata (Seq OperationContents)
op_signature :: forall a_a2hZ8. Lens' (Op a_a2hZ8) (Maybe Signature)
op_contents :: forall a_a2hZ8 a_a2ppN. Lens (Op a_a2hZ8) (Op a_a2ppN) (OpContentsList a_a2hZ8) (OpContentsList a_a2ppN)
op_branch :: forall a_a2hZ8. Lens' (Op a_a2hZ8) BlockHash
_OperationResultStatus_Backtracked :: Prism' OperationResultStatus ()
_OperationResultStatus_Skipped :: Prism' OperationResultStatus ()
_OperationResultStatus_Failed :: Prism' OperationResultStatus ()
_OperationResultStatus_Applied :: Prism' OperationResultStatus ()
_OpContentsList_Cons :: forall a_a2hZ0 k_a2ppx kk_a2ppy ks_a2ppz. a_a2hZ0 ~  'OpKind_Manager ( '(:) k_a2ppx ( '(:) kk_a2ppy ks_a2ppz)) => Review (OpContentsList a_a2hZ0) (OpContents ( 'OpKind_Manager ( '(:) k_a2ppx ('[] :: [OpKindManager]))), OpContentsList ( 'OpKind_Manager ( '(:) kk_a2ppy ks_a2ppz)))
_OpContentsList_Single :: forall a_a2hZ0. Prism' (OpContentsList a_a2hZ0) (OpContents a_a2hZ0)
_InternalOperationResult_Delegation :: Prism' InternalOperationResult InternalOperationContentsDelegation
_InternalOperationResult_Origination :: Prism' InternalOperationResult InternalOperationContentsOrigination
_InternalOperationResult_Transaction :: Prism' InternalOperationResult InternalOperationContentsTransaction
_InternalOperationResult_Reveal :: Prism' InternalOperationResult InternalOperationContentsReveal
_OperationContents_Delegation :: Prism' OperationContents OperationContentsDelegation
_OperationContents_Origination :: Prism' OperationContents OperationContentsOrigination
_OperationContents_Transaction :: Prism' OperationContents OperationContentsTransaction
_OperationContents_Reveal :: Prism' OperationContents OperationContentsReveal
_OperationContents_Ballot :: Prism' OperationContents OperationContentsBallot
_OperationContents_Proposals :: Prism' OperationContents OperationContentsProposals
_OperationContents_ActivateAccount :: Prism' OperationContents OperationContentsActivateAccount
_OperationContents_DoubleBakingEvidence :: Prism' OperationContents OperationContentsDoubleBakingEvidence
_OperationContents_DoubleEndorsementEvidence :: Prism' OperationContents OperationContentsDoubleEndorsementEvidence
_OperationContents_SeedNonceRevelation :: Prism' OperationContents OperationContentsSeedNonceRevelation
_OperationContents_Endorsement :: Prism' OperationContents OperationContentsEndorsement
mkOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Maybe Signature -> DSum OpsKindTag Op
mkSignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Signature -> DSum OpsKindTag Op
mkUnsignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> DSum OpsKindTag Op
mkProtoOp :: ProtocolHash -> DSum OpsKindTag Op -> DSum OpsKindTag ProtoOp
batchOperations :: NonEmpty (DSum BatchableOp OpContents) -> DSum OpsKindTag OpContentsList
consOpTags :: OpKindManagerTag k -> OpsKindTag ( 'OpKind_Manager ks) -> OpsKindTag ( 'OpKind_Manager (k : ks))
consOpContents :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager ks) -> OpContentsList ( 'OpKind_Manager (k : ks))
batchUnfoldrM :: forall m a. Monad m => (a -> m (DSum BatchableOp OpContents, Maybe a)) -> a -> m (DSum OpsKindTag OpContentsList)
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationResultOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationResultTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsOrigination
instance Tezos.V004.BalanceUpdate.HasBalanceUpdates Tezos.V004.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsTransaction
instance (Data.Aeson.Types.ToJSON.ToJSON a, Data.Typeable.Internal.Typeable a) => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.Operation.ManagerOperationMetadata a)
instance (Data.Aeson.Types.FromJSON.FromJSON a, Data.Typeable.Internal.Typeable a) => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.Operation.ManagerOperationMetadata a)
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.Operation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationWithMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationWithMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.NoContextOperation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.NoContextOperation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.EndorsementMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.EndorsementMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsSeedNonceRevelation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsSeedNonceRevelation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.SeedNonceRevelationMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.SeedNonceRevelationMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.DoubleEndorsementEvidenceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.DoubleEndorsementEvidenceMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InlinedEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InlinedEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InlinedEndorsementContents
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InlinedEndorsementContents
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsDoubleBakingEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsDoubleBakingEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.DoubleBakingEvidenceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.DoubleBakingEvidenceMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsActivateAccount
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsActivateAccount
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.ActivateMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.ActivateMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsProposals
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsProposals
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsBallot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsBallot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.Ballot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.Ballot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationResultStatus
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationResultStatus
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InternalOperationContentsReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InternalOperationContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InternalOperationContentsTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InternalOperationContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InternalOperationContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InternalOperationContentsOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InternalOperationContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InternalOperationContentsDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationResultReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationResultReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationResultDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationResultDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsActivateAccount
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsActivateAccount
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsProposals
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsProposals
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsBallot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsBallot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OpContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsDelegation
instance GHC.Show.Show Tezos.V004.Operation.Operation
instance GHC.Classes.Ord Tezos.V004.Operation.Operation
instance GHC.Classes.Eq Tezos.V004.Operation.Operation
instance GHC.Show.Show Tezos.V004.Operation.OperationWithMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.OperationWithMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.OperationWithMetadata
instance GHC.Show.Show Tezos.V004.Operation.NoContextOperation
instance GHC.Classes.Ord Tezos.V004.Operation.NoContextOperation
instance GHC.Classes.Eq Tezos.V004.Operation.NoContextOperation
instance GHC.Show.Show Tezos.V004.Operation.OperationContents
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContents
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContents
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsDelegation
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsDelegation
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsDelegation
instance GHC.Show.Show Tezos.V004.Operation.OperationResultDelegation
instance GHC.Classes.Ord Tezos.V004.Operation.OperationResultDelegation
instance GHC.Classes.Eq Tezos.V004.Operation.OperationResultDelegation
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsOrigination
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsOrigination
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsOrigination
instance GHC.Show.Show Tezos.V004.Operation.OperationResultOrigination
instance GHC.Classes.Ord Tezos.V004.Operation.OperationResultOrigination
instance GHC.Classes.Eq Tezos.V004.Operation.OperationResultOrigination
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsReveal
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsReveal
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsReveal
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsTransaction
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsTransaction
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsTransaction
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V004.Operation.ManagerOperationMetadata a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V004.Operation.ManagerOperationMetadata a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V004.Operation.ManagerOperationMetadata a)
instance GHC.Show.Show Tezos.V004.Operation.InternalOperationResult
instance GHC.Classes.Ord Tezos.V004.Operation.InternalOperationResult
instance GHC.Classes.Eq Tezos.V004.Operation.InternalOperationResult
instance GHC.Show.Show Tezos.V004.Operation.InternalOperationContentsTransaction
instance GHC.Classes.Ord Tezos.V004.Operation.InternalOperationContentsTransaction
instance GHC.Classes.Eq Tezos.V004.Operation.InternalOperationContentsTransaction
instance GHC.Show.Show Tezos.V004.Operation.OperationResultTransaction
instance GHC.Classes.Ord Tezos.V004.Operation.OperationResultTransaction
instance GHC.Classes.Eq Tezos.V004.Operation.OperationResultTransaction
instance GHC.Show.Show Tezos.V004.Operation.OperationResultReveal
instance GHC.Classes.Ord Tezos.V004.Operation.OperationResultReveal
instance GHC.Classes.Eq Tezos.V004.Operation.OperationResultReveal
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V004.Operation.OperationResult a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V004.Operation.OperationResult a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V004.Operation.OperationResult a)
instance GHC.Show.Show Tezos.V004.Operation.OperationResultStatus
instance GHC.Classes.Ord Tezos.V004.Operation.OperationResultStatus
instance GHC.Classes.Eq Tezos.V004.Operation.OperationResultStatus
instance GHC.Show.Show Tezos.V004.Operation.InternalOperationContentsDelegation
instance GHC.Classes.Ord Tezos.V004.Operation.InternalOperationContentsDelegation
instance GHC.Classes.Eq Tezos.V004.Operation.InternalOperationContentsDelegation
instance GHC.Show.Show Tezos.V004.Operation.InternalOperationContentsOrigination
instance GHC.Classes.Ord Tezos.V004.Operation.InternalOperationContentsOrigination
instance GHC.Classes.Eq Tezos.V004.Operation.InternalOperationContentsOrigination
instance GHC.Show.Show Tezos.V004.Operation.InternalOperationContentsReveal
instance GHC.Classes.Ord Tezos.V004.Operation.InternalOperationContentsReveal
instance GHC.Classes.Eq Tezos.V004.Operation.InternalOperationContentsReveal
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsBallot
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsBallot
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsBallot
instance GHC.Show.Show (Tezos.V004.Operation.Op a)
instance GHC.Classes.Ord (Tezos.V004.Operation.Op a)
instance GHC.Classes.Eq (Tezos.V004.Operation.Op a)
instance GHC.Show.Show (Tezos.V004.Operation.ProtoOp a)
instance GHC.Classes.Ord (Tezos.V004.Operation.ProtoOp a)
instance GHC.Classes.Eq (Tezos.V004.Operation.ProtoOp a)
instance GHC.Show.Show (Tezos.V004.Operation.PendingOp a)
instance GHC.Classes.Ord (Tezos.V004.Operation.PendingOp a)
instance GHC.Classes.Eq (Tezos.V004.Operation.PendingOp a)
instance GHC.Show.Show (Tezos.V004.Operation.ErroredOp a)
instance GHC.Classes.Eq (Tezos.V004.Operation.ErroredOp a)
instance GHC.Show.Show Tezos.V004.Operation.OpContentsBallot
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsBallot
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsBallot
instance GHC.Generics.Generic Tezos.V004.Operation.Ballot
instance GHC.Enum.Bounded Tezos.V004.Operation.Ballot
instance GHC.Enum.Enum Tezos.V004.Operation.Ballot
instance GHC.Show.Show Tezos.V004.Operation.Ballot
instance GHC.Read.Read Tezos.V004.Operation.Ballot
instance GHC.Classes.Ord Tezos.V004.Operation.Ballot
instance GHC.Classes.Eq Tezos.V004.Operation.Ballot
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsProposals
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsProposals
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsProposals
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsActivateAccount
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsActivateAccount
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsActivateAccount
instance GHC.Show.Show Tezos.V004.Operation.ActivateMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.ActivateMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.ActivateMetadata
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Show.Show Tezos.V004.Operation.DoubleBakingEvidenceMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.DoubleBakingEvidenceMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.DoubleBakingEvidenceMetadata
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Show.Show Tezos.V004.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Show.Show Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Show.Show Tezos.V004.Operation.InlinedEndorsement
instance GHC.Classes.Ord Tezos.V004.Operation.InlinedEndorsement
instance GHC.Classes.Eq Tezos.V004.Operation.InlinedEndorsement
instance GHC.Show.Show Tezos.V004.Operation.InlinedEndorsementContents
instance GHC.Classes.Ord Tezos.V004.Operation.InlinedEndorsementContents
instance GHC.Classes.Eq Tezos.V004.Operation.InlinedEndorsementContents
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsSeedNonceRevelation
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsSeedNonceRevelation
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsSeedNonceRevelation
instance GHC.Show.Show Tezos.V004.Operation.SeedNonceRevelationMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.SeedNonceRevelationMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.SeedNonceRevelationMetadata
instance GHC.Show.Show Tezos.V004.Operation.OperationContentsEndorsement
instance GHC.Classes.Ord Tezos.V004.Operation.OperationContentsEndorsement
instance GHC.Classes.Eq Tezos.V004.Operation.OperationContentsEndorsement
instance GHC.Show.Show Tezos.V004.Operation.EndorsementMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.EndorsementMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.EndorsementMetadata
instance GHC.Show.Show Tezos.V004.Operation.OpContentsDelegation
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsDelegation
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsDelegation
instance GHC.Show.Show Tezos.V004.Operation.OpContentsOrigination
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsOrigination
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsOrigination
instance GHC.Show.Show Tezos.V004.Operation.OpContentsTransaction
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsTransaction
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsTransaction
instance GHC.Show.Show Tezos.V004.Operation.OpContentsReveal
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsReveal
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsReveal
instance GHC.Show.Show op => GHC.Show.Show (Tezos.V004.Operation.OpContentsManager op)
instance GHC.Classes.Ord op => GHC.Classes.Ord (Tezos.V004.Operation.OpContentsManager op)
instance GHC.Classes.Eq op => GHC.Classes.Eq (Tezos.V004.Operation.OpContentsManager op)
instance GHC.Show.Show Tezos.V004.Operation.OpContentsProposals
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsProposals
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsProposals
instance GHC.Show.Show Tezos.V004.Operation.OpContentsActivateAccount
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsActivateAccount
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsActivateAccount
instance GHC.Show.Show Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance GHC.Show.Show Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance GHC.Show.Show Tezos.V004.Operation.OpContentsEndorsement
instance GHC.Classes.Ord Tezos.V004.Operation.OpContentsEndorsement
instance GHC.Classes.Eq Tezos.V004.Operation.OpContentsEndorsement
instance GHC.Show.Show Tezos.V004.Operation.EmptyMetadata
instance GHC.Classes.Ord Tezos.V004.Operation.EmptyMetadata
instance GHC.Classes.Eq Tezos.V004.Operation.EmptyMetadata
instance GHC.Classes.Eq (Tezos.V004.Operation.OpContentsList a)
instance GHC.Classes.Ord (Tezos.V004.Operation.OpContentsList a)
instance GHC.Show.Show (Tezos.V004.Operation.OpContentsList a)
instance GHC.Classes.Eq (Tezos.V004.Operation.OpContents a)
instance GHC.Show.Show (Tezos.V004.Operation.OpContents a)
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContents
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.OperationContents
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationResultOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.InternalOperationResult
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.InternalOperationResult
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OperationResultTransaction
instance (Data.Typeable.Internal.Typeable a, Data.Aeson.Types.FromJSON.FromJSON a) => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.Operation.OperationResult a)
instance (Data.Typeable.Internal.Typeable a, Data.Aeson.Types.ToJSON.ToJSON a) => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.Operation.OperationResult a)
instance Tezos.Common.Binary.TezosUnsignedBinary (Tezos.V004.Operation.Op 'Tezos.V004.Operation.OpKind_Endorsement)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.Op)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.Op)
instance Tezos.Common.Binary.TezosUnsignedBinary (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.Op)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.Op)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.ProtoOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.ProtoOp)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.PendingOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.PendingOp)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.ErroredOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.ErroredOp)
instance Tezos.Common.Binary.TezosBinary (Tezos.V004.Operation.OpContentsList 'Tezos.V004.Operation.OpKind_Endorsement)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.OpContentsList)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.OpContentsList)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpsKindTag Tezos.V004.Operation.OpContentsList)
instance GHC.Classes.Ord (Tezos.V004.Operation.OpContents a)
instance Tezos.Common.Binary.TezosBinary (Tezos.V004.Operation.OpContents 'Tezos.V004.Operation.OpKind_Endorsement)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpKindTag Tezos.V004.Operation.OpContents)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpKindTag Tezos.V004.Operation.OpContents)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V004.Operation.OpKindTag Tezos.V004.Operation.OpContents)
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsBallot
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.Ballot
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsDoubleEndorsementEvidence
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.InlinedEndorsement
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.InlinedEndorsementContents
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsDelegation
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.OpContentsOrigination
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsTransaction
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsReveal
instance Tezos.Common.Binary.TezosBinary op => Tezos.Common.Binary.TezosBinary (Tezos.V004.Operation.OpContentsManager op)
instance Data.Aeson.Types.FromJSON.FromJSON op => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.Operation.OpContentsManager op)
instance Data.Aeson.Types.ToJSON.ToJSON op => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.Operation.OpContentsManager op)
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsProposals
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsActivateAccount
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsDoubleBakingEvidence
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsSeedNonceRevelation
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Operation.OpContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Operation.EmptyMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Operation.EmptyMetadata
instance Tezos.Common.Binary.TezosBinary (Data.Some.Some Tezos.V004.Operation.OpKindTag)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Some.Some Tezos.V004.Operation.OpKindTag)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Some.Some Tezos.V004.Operation.OpKindTag)

module Tezos.V004.Mempool
data Mempool
Mempool :: [DSum OpsKindTag PendingOp] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ProtoOp)] -> Mempool
[_mempool_applied] :: Mempool -> [DSum OpsKindTag PendingOp]
[_mempool_refused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchRefused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchDelayed] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_unprocessed] :: Mempool -> [(OperationHash, DSum OpsKindTag ProtoOp)]
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Mempool.Mempool
instance GHC.Generics.Generic Tezos.V004.Mempool.Mempool

module Tezos.V004.Envelope
data Envelope
Envelope_BlockHeader :: !ChainId -> !BlockHeaderFull -> Envelope
Envelope_Endorsement :: !ChainId -> !Op  'OpKind_Endorsement -> Envelope
instance GHC.Generics.Generic Tezos.V004.Envelope.Envelope
instance GHC.Classes.Ord Tezos.V004.Envelope.Envelope
instance GHC.Classes.Eq Tezos.V004.Envelope.Envelope
instance GHC.Show.Show Tezos.V004.Envelope.Envelope
instance Tezos.Common.Binary.TezosBinary Tezos.V004.Envelope.Envelope

module Tezos.V004.Block

-- | "description": "All the information about a block.",
data Block
Block :: !ProtocolHash -> !ChainId -> !BlockHash -> !BlockHeaderFull -> !BlockMetadata -> !Seq (Seq Operation) -> Block
[_block_protocol] :: Block -> !ProtocolHash
[_block_chainId] :: Block -> !ChainId
[_block_hash] :: Block -> !BlockHash
[_block_header] :: Block -> !BlockHeaderFull
[_block_metadata] :: Block -> !BlockMetadata
[_block_operations] :: Block -> !Seq (Seq Operation)
data MaxOperationListLength
MaxOperationListLength :: !Int -> !Maybe Int -> MaxOperationListLength
[_maxOperationListLength_maxSize] :: MaxOperationListLength -> !Int
[_maxOperationListLength_maxOp] :: MaxOperationListLength -> !Maybe Int

-- | "voting_period_kind": {
data VotingPeriodKind
VotingPeriodKind_Proposal :: VotingPeriodKind
VotingPeriodKind_TestingVote :: VotingPeriodKind
VotingPeriodKind_Testing :: VotingPeriodKind
VotingPeriodKind_PromotionVote :: VotingPeriodKind

-- | "block_header_metadata": {
data BlockMetadata
BlockMetadata :: !ProtocolHash -> !ProtocolHash -> !TestChainStatus -> !Int -> !Int -> !Int -> !Seq MaxOperationListLength -> !PublicKeyHash -> !Level -> !VotingPeriodKind -> !Maybe CycleNonce -> !TezosPositiveBigNum -> !Seq PublicKeyHash -> !Seq BalanceUpdate -> BlockMetadata
[_blockMetadata_protocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_nextProtocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_testChainStatus] :: BlockMetadata -> !TestChainStatus
[_blockMetadata_maxOperationsTtl] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationDataLength] :: BlockMetadata -> !Int
[_blockMetadata_maxBlockHeaderLength] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationListLength] :: BlockMetadata -> !Seq MaxOperationListLength
[_blockMetadata_baker] :: BlockMetadata -> !PublicKeyHash
[_blockMetadata_level] :: BlockMetadata -> !Level
[_blockMetadata_votingPeriodKind] :: BlockMetadata -> !VotingPeriodKind
[_blockMetadata_nonceHash] :: BlockMetadata -> !Maybe CycleNonce
[_blockMetadata_consumedGas] :: BlockMetadata -> !TezosPositiveBigNum
[_blockMetadata_deactivated] :: BlockMetadata -> !Seq PublicKeyHash
[_blockMetadata_balanceUpdates] :: BlockMetadata -> !Seq BalanceUpdate
data MonitorBlock
MonitorBlock :: !BlockHash -> !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> MonitorBlock
[_monitorBlock_hash] :: MonitorBlock -> !BlockHash
[_monitorBlock_level] :: MonitorBlock -> !RawLevel
[_monitorBlock_proto] :: MonitorBlock -> !Word8
[_monitorBlock_predecessor] :: MonitorBlock -> !BlockHash
[_monitorBlock_timestamp] :: MonitorBlock -> !UTCTime
[_monitorBlock_validationPass] :: MonitorBlock -> !Word8
[_monitorBlock_operationsHash] :: MonitorBlock -> !OperationListListHash
[_monitorBlock_fitness] :: MonitorBlock -> !Fitness
[_monitorBlock_context] :: MonitorBlock -> !ContextHash
data VeryBlockLike
VeryBlockLike :: !BlockHash -> !BlockHash -> !Fitness -> !RawLevel -> !UTCTime -> VeryBlockLike
[_veryBlockLike_hash] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_predecessor] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_fitness] :: VeryBlockLike -> !Fitness
[_veryBlockLike_level] :: VeryBlockLike -> !RawLevel
[_veryBlockLike_timestamp] :: VeryBlockLike -> !UTCTime
toBlockHeader :: Block -> BlockHeader

-- | Simple wrapper for adding a protocol hash to some other value.
--   
--   The Aeson instances are smart (too smart). If the underlying type is
--   not an object or an object with a conflicting key with the one added
--   by this type, the JSON encoding will be two-layered. Otherwise, the
--   JSON encoding will simply add an additional key for the protocol
--   information.
data WithProtocolHash a
WithProtocolHash :: !a -> !ProtocolHash -> WithProtocolHash a
[_withProtocolHash_value] :: WithProtocolHash a -> !a
[_withProtocolHash_protocolHash] :: WithProtocolHash a -> !ProtocolHash
withProtocolHash_value :: forall a_a3IEj a_a3KoW. Lens (WithProtocolHash a_a3IEj) (WithProtocolHash a_a3KoW) a_a3IEj a_a3KoW
withProtocolHash_protocolHash :: forall a_a3IEj. Lens' (WithProtocolHash a_a3IEj) ProtocolHash
veryBlockLike_timestamp :: Lens' VeryBlockLike UTCTime
veryBlockLike_predecessor :: Lens' VeryBlockLike BlockHash
veryBlockLike_level :: Lens' VeryBlockLike RawLevel
veryBlockLike_hash :: Lens' VeryBlockLike BlockHash
veryBlockLike_fitness :: Lens' VeryBlockLike Fitness
monitorBlock_validationPass :: Lens' MonitorBlock Word8
monitorBlock_timestamp :: Lens' MonitorBlock UTCTime
monitorBlock_proto :: Lens' MonitorBlock Word8
monitorBlock_predecessor :: Lens' MonitorBlock BlockHash
monitorBlock_operationsHash :: Lens' MonitorBlock OperationListListHash
monitorBlock_level :: Lens' MonitorBlock RawLevel
monitorBlock_hash :: Lens' MonitorBlock BlockHash
monitorBlock_fitness :: Lens' MonitorBlock Fitness
monitorBlock_context :: Lens' MonitorBlock ContextHash
maxOperationListLength_maxSize :: Lens' MaxOperationListLength Int
maxOperationListLength_maxOp :: Lens' MaxOperationListLength (Maybe Int)
blockMetadata_votingPeriodKind :: Lens' BlockMetadata VotingPeriodKind
blockMetadata_testChainStatus :: Lens' BlockMetadata TestChainStatus
blockMetadata_protocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_nonceHash :: Lens' BlockMetadata (Maybe CycleNonce)
blockMetadata_nextProtocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_maxOperationsTtl :: Lens' BlockMetadata Int
blockMetadata_maxOperationListLength :: Lens' BlockMetadata (Seq MaxOperationListLength)
blockMetadata_maxOperationDataLength :: Lens' BlockMetadata Int
blockMetadata_maxBlockHeaderLength :: Lens' BlockMetadata Int
blockMetadata_level :: Lens' BlockMetadata Level
blockMetadata_deactivated :: Lens' BlockMetadata (Seq PublicKeyHash)
blockMetadata_consumedGas :: Lens' BlockMetadata TezosPositiveBigNum
blockMetadata_balanceUpdates :: Lens' BlockMetadata (Seq BalanceUpdate)
blockMetadata_baker :: Lens' BlockMetadata PublicKeyHash
block_protocol :: Lens' Block ProtocolHash
block_operations :: Lens' Block (Seq (Seq Operation))
block_metadata :: Lens' Block BlockMetadata
block_header :: Lens' Block BlockHeaderFull
block_hash :: Lens' Block BlockHash
block_chainId :: Lens' Block ChainId
class BlockLike b
hash :: BlockLike b => Lens' b BlockHash
predecessor :: BlockLike b => Lens' b BlockHash
level :: BlockLike b => Lens' b RawLevel
fitness :: BlockLike b => Lens' b Fitness
timestamp :: BlockLike b => Lens' b UTCTime
class HasProtocolHash a
protocolHash :: HasProtocolHash a => Lens' a ProtocolHash
class HasChainId a
chainIdL :: HasChainId a => Lens' a ChainId
class HasBlockMetadata a
blockMetadata :: HasBlockMetadata a => Lens' a BlockMetadata
class HasBlockHeaderFull a
blockHeaderFull :: HasBlockHeaderFull a => Lens' a BlockHeaderFull
mkVeryBlockLike :: BlockLike b => b -> VeryBlockLike
instance Tezos.V004.Block.HasBlockHeaderFull Tezos.V004.Block.Block
instance Tezos.V004.Block.HasBlockMetadata Tezos.V004.Block.Block
instance Tezos.V004.Block.HasChainId Tezos.V004.Block.Block
instance Tezos.V004.Block.HasProtocolHash Tezos.V004.Block.Block
instance Tezos.V004.Block.HasProtocolHash Tezos.V004.BlockHeader.BlockHeader
instance Tezos.V004.Block.HasProtocolHash Tezos.V004.Block.BlockMetadata
instance Tezos.V004.Block.HasProtocolHash (Tezos.V004.Block.WithProtocolHash a)
instance Tezos.V004.Block.BlockLike Tezos.V004.Block.Block
instance Tezos.V004.Block.BlockLike Tezos.V004.BlockHeader.BlockHeader
instance Tezos.V004.Block.BlockLike Tezos.V004.Block.MonitorBlock
instance Tezos.V004.Block.BlockLike Tezos.V004.Block.VeryBlockLike
instance Tezos.V004.Block.BlockLike a => Tezos.V004.Block.BlockLike (Tezos.V004.Block.WithProtocolHash a)
instance Tezos.V004.BalanceUpdate.HasBalanceUpdates Tezos.V004.Block.Block
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.Block
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.Block
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.BlockMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.BlockMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.MaxOperationListLength
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.MaxOperationListLength
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.MonitorBlock
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.MonitorBlock
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.VotingPeriodKind
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.VotingPeriodKind
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Block.VeryBlockLike
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Block.VeryBlockLike
instance GHC.Generics.Generic (Tezos.V004.Block.WithProtocolHash a)
instance GHC.Read.Read a => GHC.Read.Read (Tezos.V004.Block.WithProtocolHash a)
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V004.Block.WithProtocolHash a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V004.Block.WithProtocolHash a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V004.Block.WithProtocolHash a)
instance GHC.Generics.Generic Tezos.V004.Block.VeryBlockLike
instance GHC.Show.Show Tezos.V004.Block.VeryBlockLike
instance GHC.Classes.Ord Tezos.V004.Block.VeryBlockLike
instance GHC.Classes.Eq Tezos.V004.Block.VeryBlockLike
instance GHC.Generics.Generic Tezos.V004.Block.MonitorBlock
instance GHC.Show.Show Tezos.V004.Block.MonitorBlock
instance GHC.Classes.Ord Tezos.V004.Block.MonitorBlock
instance GHC.Classes.Eq Tezos.V004.Block.MonitorBlock
instance GHC.Generics.Generic Tezos.V004.Block.Block
instance GHC.Show.Show Tezos.V004.Block.Block
instance GHC.Classes.Ord Tezos.V004.Block.Block
instance GHC.Classes.Eq Tezos.V004.Block.Block
instance GHC.Generics.Generic Tezos.V004.Block.BlockMetadata
instance GHC.Classes.Ord Tezos.V004.Block.BlockMetadata
instance GHC.Classes.Eq Tezos.V004.Block.BlockMetadata
instance GHC.Show.Show Tezos.V004.Block.BlockMetadata
instance GHC.Enum.Enum Tezos.V004.Block.VotingPeriodKind
instance GHC.Enum.Bounded Tezos.V004.Block.VotingPeriodKind
instance GHC.Generics.Generic Tezos.V004.Block.VotingPeriodKind
instance GHC.Show.Show Tezos.V004.Block.VotingPeriodKind
instance GHC.Read.Read Tezos.V004.Block.VotingPeriodKind
instance GHC.Classes.Ord Tezos.V004.Block.VotingPeriodKind
instance GHC.Classes.Eq Tezos.V004.Block.VotingPeriodKind
instance GHC.Generics.Generic Tezos.V004.Block.MaxOperationListLength
instance GHC.Show.Show Tezos.V004.Block.MaxOperationListLength
instance GHC.Classes.Ord Tezos.V004.Block.MaxOperationListLength
instance GHC.Classes.Eq Tezos.V004.Block.MaxOperationListLength
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Tezos.V004.Block.WithProtocolHash a)
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V004.Block.WithProtocolHash a)
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V004.Block.WithProtocolHash a)
instance Control.DeepSeq.NFData Tezos.V004.Block.VeryBlockLike
instance Control.DeepSeq.NFData Tezos.V004.Block.MonitorBlock
instance Data.Hashable.Class.Hashable Tezos.V004.Block.VotingPeriodKind
instance Control.DeepSeq.NFData Tezos.V004.Block.VotingPeriodKind
instance Data.Aeson.Types.ToJSON.ToJSONKey Tezos.V004.Block.VotingPeriodKind
instance Data.Aeson.Types.FromJSON.FromJSONKey Tezos.V004.Block.VotingPeriodKind
instance Data.Hashable.Class.Hashable Tezos.V004.Block.MaxOperationListLength
instance Control.DeepSeq.NFData Tezos.V004.Block.MaxOperationListLength

module Tezos.V004.ProtocolConstants
calcTimeBetweenBlocks :: ProtoInfo -> NominalDiffTime
data ProtoInfo
ProtoInfo :: !Word8 -> !Word8 -> !Word8 -> !Int -> !Cycle -> !RawLevel -> !RawLevel -> !RawLevel -> !RawLevel -> !PeriodSequence -> !Word16 -> !TezosBigNum -> !TezosBigNum -> !TezosInt64 -> !Tez -> !Word16 -> !Tez -> !Tez -> !Int -> !Tez -> !Tez -> !Tez -> !Tez -> !Tez -> !TezosBigNum -> ProtoInfo
[_protoInfo_proofOfWorkNonceSize] :: ProtoInfo -> !Word8
[_protoInfo_nonceLength] :: ProtoInfo -> !Word8
[_protoInfo_maxRevelationsPerBlock] :: ProtoInfo -> !Word8
[_protoInfo_maxOperationDataLength] :: ProtoInfo -> !Int
[_protoInfo_preservedCycles] :: ProtoInfo -> !Cycle
[_protoInfo_blocksPerCycle] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerCommitment] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerRollSnapshot] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerVotingPeriod] :: ProtoInfo -> !RawLevel
[_protoInfo_timeBetweenBlocks] :: ProtoInfo -> !PeriodSequence
[_protoInfo_endorsersPerBlock] :: ProtoInfo -> !Word16
[_protoInfo_hardGasLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_hardGasLimitPerBlock] :: ProtoInfo -> !TezosBigNum
[_protoInfo_proofOfWorkThreshold] :: ProtoInfo -> !TezosInt64
[_protoInfo_tokensPerRoll] :: ProtoInfo -> !Tez
[_protoInfo_michelsonMaximumTypeSize] :: ProtoInfo -> !Word16
[_protoInfo_seedNonceRevelationTip] :: ProtoInfo -> !Tez
[_protoInfo_originationBurn] :: ProtoInfo -> !Tez
[_protoInfo_originationSize] :: ProtoInfo -> !Int
[_protoInfo_blockSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_endorsementSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_blockReward] :: ProtoInfo -> !Tez
[_protoInfo_endorsementReward] :: ProtoInfo -> !Tez
[_protoInfo_costPerByte] :: ProtoInfo -> !Tez
[_protoInfo_hardStorageLimitPerOperation] :: ProtoInfo -> !TezosBigNum
protoInfo_tokensPerRoll :: Lens' ProtoInfo Tez
protoInfo_timeBetweenBlocks :: Lens' ProtoInfo PeriodSequence
protoInfo_seedNonceRevelationTip :: Lens' ProtoInfo Tez
protoInfo_proofOfWorkThreshold :: Lens' ProtoInfo TezosInt64
protoInfo_proofOfWorkNonceSize :: Lens' ProtoInfo Word8
protoInfo_preservedCycles :: Lens' ProtoInfo Cycle
protoInfo_originationSize :: Lens' ProtoInfo Int
protoInfo_originationBurn :: Lens' ProtoInfo Tez
protoInfo_nonceLength :: Lens' ProtoInfo Word8
protoInfo_michelsonMaximumTypeSize :: Lens' ProtoInfo Word16
protoInfo_maxRevelationsPerBlock :: Lens' ProtoInfo Word8
protoInfo_maxOperationDataLength :: Lens' ProtoInfo Int
protoInfo_hardStorageLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerBlock :: Lens' ProtoInfo TezosBigNum
protoInfo_endorsersPerBlock :: Lens' ProtoInfo Word16
protoInfo_endorsementSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_endorsementReward :: Lens' ProtoInfo Tez
protoInfo_costPerByte :: Lens' ProtoInfo Tez
protoInfo_blocksPerVotingPeriod :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerRollSnapshot :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCycle :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCommitment :: Lens' ProtoInfo RawLevel
protoInfo_blockSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_blockReward :: Lens' ProtoInfo Tez

-- | Convert a level to the cycle that contains it.
--   
--   We subtract 1 because the first cycle begins after the genesis block.
--   Yet while that block is not part of the cycle, it is still given a
--   level, level 0.
unsafeAssumptionLevelToCycle :: ProtoInfo -> RawLevel -> Cycle

-- | Convert a cycle to the level of the first block in that cycle.
--   
--   We add 1 because we do not consider the genesis block as part of the
--   first cycle, as that would make the first cycle alone 1 block larger
--   than all the others.
unsafeAssumptionFirstLevelInCycle :: ProtoInfo -> Cycle -> RawLevel

-- | We want the first block in the cycle that sits PRESERVED_CYCLES before
--   the requested level, that is on the correct branch.
unsafeAssumptionRightsContextLevel :: ProtoInfo -> RawLevel -> RawLevel
predictFutureTimestamp :: BlockLike blk => ProtoInfo -> RawLevel -> blk -> UTCTime
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.ProtocolConstants.ProtoInfo
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.ProtocolConstants.ProtoInfo
instance GHC.Generics.Generic Tezos.V004.ProtocolConstants.ProtoInfo
instance GHC.Show.Show Tezos.V004.ProtocolConstants.ProtoInfo
instance GHC.Classes.Ord Tezos.V004.ProtocolConstants.ProtoInfo
instance GHC.Classes.Eq Tezos.V004.ProtocolConstants.ProtoInfo
instance Data.Hashable.Class.Hashable Tezos.V004.ProtocolConstants.ProtoInfo
instance Control.DeepSeq.NFData Tezos.V004.ProtocolConstants.ProtoInfo

module Tezos.V004.Unsafe

-- | Convert a level to the cycle that contains it.
--   
--   We subtract 1 because the first cycle begins after the genesis block.
--   Yet while that block is not part of the cycle, it is still given a
--   level, level 0.
unsafeAssumptionLevelToCycle :: ProtoInfo -> RawLevel -> Cycle

-- | Convert a cycle to the level of the first block in that cycle.
--   
--   We add 1 because we do not consider the genesis block as part of the
--   first cycle, as that would make the first cycle alone 1 block larger
--   than all the others.
unsafeAssumptionFirstLevelInCycle :: ProtoInfo -> Cycle -> RawLevel

-- | We want the first block in the cycle that sits PRESERVED_CYCLES before
--   the requested level, that is on the correct branch.
unsafeAssumptionRightsContextLevel :: ProtoInfo -> RawLevel -> RawLevel

module Tezos.V004.Vote
type VotingPeriod = Int32 " period: Voting_period_repr.t ;"
data Ballots
Ballots :: Int -> Int -> Int -> Ballots
[_ballots_yay] :: Ballots -> Int
[_ballots_nay] :: Ballots -> Int
[_ballots_pass] :: Ballots -> Int
ballots_yay :: Lens' Ballots Int
ballots_pass :: Lens' Ballots Int
ballots_nay :: Lens' Ballots Int
newtype ProposalVotes
ProposalVotes :: (ProtocolHash, Int) -> ProposalVotes
[unProposalVotes] :: ProposalVotes -> (ProtocolHash, Int)
data VoterDelegate
VoterDelegate :: PublicKeyHash -> Int -> VoterDelegate
[_voterDelegate_pkh] :: VoterDelegate -> PublicKeyHash
[_voterDelegate_rolls] :: VoterDelegate -> Int
voterDelegate_rolls :: Lens' VoterDelegate Int
voterDelegate_pkh :: Lens' VoterDelegate PublicKeyHash
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Vote.VoterDelegate
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Vote.VoterDelegate
instance GHC.Generics.Generic Tezos.V004.Vote.VoterDelegate
instance GHC.Show.Show Tezos.V004.Vote.VoterDelegate
instance GHC.Read.Read Tezos.V004.Vote.VoterDelegate
instance GHC.Classes.Ord Tezos.V004.Vote.VoterDelegate
instance GHC.Classes.Eq Tezos.V004.Vote.VoterDelegate
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Vote.ProposalVotes
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Vote.ProposalVotes
instance GHC.Generics.Generic Tezos.V004.Vote.ProposalVotes
instance GHC.Show.Show Tezos.V004.Vote.ProposalVotes
instance GHC.Read.Read Tezos.V004.Vote.ProposalVotes
instance GHC.Classes.Ord Tezos.V004.Vote.ProposalVotes
instance GHC.Classes.Eq Tezos.V004.Vote.ProposalVotes
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V004.Vote.Ballots
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V004.Vote.Ballots
instance GHC.Generics.Generic Tezos.V004.Vote.Ballots
instance GHC.Show.Show Tezos.V004.Vote.Ballots
instance GHC.Read.Read Tezos.V004.Vote.Ballots
instance GHC.Classes.Ord Tezos.V004.Vote.Ballots
instance GHC.Classes.Eq Tezos.V004.Vote.Ballots

module Tezos.V004.Types

-- | <i>O(n)</i>. Convert a <a>ShortByteString</a> into a
--   <a>ByteString</a>.
fromShort :: ShortByteString -> ByteString

-- | A compact representation of a <a>Word8</a> vector.
--   
--   It has a lower memory overhead than a <a>ByteString</a> and and does
--   not contribute to heap fragmentation. It can be converted to or from a
--   <a>ByteString</a> (at the cost of copying the string data). It
--   supports very few other operations.
--   
--   It is suitable for use as an internal representation for code that
--   needs to keep many short strings in memory, but it <i>should not</i>
--   be used as an interchange type. That is, it should not generally be
--   used in public APIs. The <a>ByteString</a> type is usually more
--   suitable for use in interfaces; it is more flexible and it supports a
--   wide range of operations.
data ShortByteString

-- | <i>O(n)</i>. Convert a <a>ByteString</a> into a
--   <a>ShortByteString</a>.
--   
--   This makes a copy, so does not retain the input string.
toShort :: ByteString -> ShortByteString

-- | "$ref": "#<i>definitions</i>error",
newtype JsonRpcError
JsonRpcError :: Value -> JsonRpcError

-- | WARNING: Due to a major oversight on the part of Tezos Core, this type
--   is incorrectly named. It represents _non-negative_ integers (including
--   zero), not _strictly positive_ integers. Therefore the Haskell Natural
--   type is indeed the correct counterpart.
type TezosPositiveBigNum = StringEncode Natural
type TezosBigNum = StringEncode Integer
type TezosInt64 = StringEncode Int64

-- | JavaScript compatibility forces us and the Tezos JSON/RPC to encode
--   any integer with more than 32 bits into a decimal string format.
--   StringEncode helps us safely represent a range of different types for
--   which we must always respect this property.
newtype StringEncode a
StringEncode :: a -> StringEncode a
parseAsString :: forall a. (Read a, Typeable a) => Value -> Parser a
parseStringEncodedIntegral :: (Read a, Integral a, Typeable a) => Value -> Parser (StringEncode a)
deriveTezosJson :: Name -> Q [Dec]
deriveTezosToJson :: Name -> Q [Dec]
deriveTezosJsonKind :: String -> Name -> Q [Dec]
tezosJsonOptions :: Options
tezosJsonOptionsKind :: String -> Options
newtype BlockPrefix
BlockPrefix :: Text -> BlockPrefix
data NetworkStat
NetworkStat :: TezosInt64 -> TezosInt64 -> Int32 -> Int32 -> NetworkStat
[_networkStat_totalSent] :: NetworkStat -> TezosInt64
[_networkStat_totalRecv] :: NetworkStat -> TezosInt64
[_networkStat_currentInflow] :: NetworkStat -> Int32
[_networkStat_currentOutflow] :: NetworkStat -> Int32
networkStat_currentInflow :: Lens' NetworkStat Int32
networkStat_currentOutflow :: Lens' NetworkStat Int32
networkStat_totalRecv :: Lens' NetworkStat TezosInt64
networkStat_totalSent :: Lens' NetworkStat TezosInt64
newtype Base16ByteString a
Base16ByteString :: a -> Base16ByteString a
[unbase16ByteString] :: Base16ByteString a -> a
data HashBase58Error
HashBase58Error_DecodeError :: HashBase58Error
HashBase58Error_InvalidPrefix :: ByteString -> ByteString -> HashBase58Error
HashBase58Error_WrongLength :: Int -> Int -> HashBase58Error
HashBase58Error_BadChecksum :: ByteString -> ByteString -> ByteString -> HashBase58Error
newtype HashedValue (tag :: HashType)
HashedValue :: ShortByteString -> HashedValue
[unHashedValue] :: HashedValue -> ShortByteString
type BlindedPublicKeyHash = HashedValue  'HashType_BlindedPublicKeyHash
type CycleNonce = NonceHash
type NonceHash = HashedValue  'HashType_NonceHash
type ContractHash = HashedValue  'HashType_ContractHash
type P256Signature = HashedValue  'HashType_P256Signature
type P256PublicKey = HashedValue  'HashType_P256PublicKey
type P256PublicKeyHash = HashedValue  'HashType_P256PublicKeyHash
type ChainId = HashedValue  'HashType_ChainId
type GenericSignature = HashedValue  'HashType_GenericSignature
type Secp256k1Signature = HashedValue  'HashType_Secp256k1Signature
type Ed25519Signature = HashedValue  'HashType_Ed25519Signature
type Ed25519SecretKey = HashedValue  'HashType_Ed25519SecretKey
type Secp256k1PublicKey = HashedValue  'HashType_Secp256k1PublicKey
type Secp256k1SecretKey = HashedValue  'HashType_Secp256k1SecretKey
type Ed25519PublicKey = HashedValue  'HashType_Ed25519PublicKey
type Ed25519Seed = HashedValue  'HashType_Ed25519Seed
type CryptoboxPublicKeyHash = HashedValue  'HashType_CryptoboxPublicKeyHash
type Secp256k1PublicKeyHash = HashedValue  'HashType_Secp256k1PublicKeyHash
type Ed25519PublicKeyHash = HashedValue  'HashType_Ed25519PublicKeyHash
type ContextHash = HashedValue  'HashType_ContextHash
type ProtocolHash = HashedValue  'HashType_ProtocolHash
type OperationListListHash = HashedValue  'HashType_OperationListListHash
type OperationListHash = HashedValue  'HashType_OperationListHash
type OperationHash = HashedValue  'HashType_OperationHash
type BlockHash = HashedValue  'HashType_BlockHash
toBase58 :: forall t. IsBase58Hash t => HashedValue t -> ByteString
toBase58Text :: forall t. IsBase58Hash t => HashedValue t -> Text
tryFromBase58 :: [TryDecodeBase58 a] -> ByteString -> Either HashBase58Error a
fromBase58 :: forall t. IsBase58Hash t => ByteString -> Either HashBase58Error (HashedValue t)
data ChainTag
ChainTag_Main :: ChainTag
ChainTag_Test :: ChainTag
ChainTag_Hash :: ChainId -> ChainTag
data NamedChain
NamedChain_Mainnet :: NamedChain
NamedChain_Zeronet :: NamedChain
NamedChain_Babylonnet :: NamedChain
NamedChain_Carthagenet :: NamedChain
showNamedChain :: NamedChain -> Text
parseNamedChain :: Text -> Maybe NamedChain
showChain :: Either NamedChain ChainId -> Text
parseChain :: MonadError Text m => Text -> m (Either NamedChain ChainId)
getNamedChainId :: NamedChain -> Maybe ChainId
identifyChain :: ChainId -> Maybe NamedChain
toChainTagText :: ChainTag -> Text
parseChainTagText :: MonadError HashBase58Error m => Text -> m ChainTag
type Fitness = Fitness' ShortByteString

-- | for these to be useful, you'd need `TezosBinary ByteString`, but
--   that's definately not the same one as needed for the above FromJSON
--   instances; since both would be needed, both are wrong. we satisfy
--   ourselves with the fully monomorphic instances for both
--   
--   instance TezosBinary a =&gt; TezosBinary (FitnessF a) where
--   parseBinary = FitnessF <a>$</a> parseBinary encodeBinary =
--   encodeBinary . unFitnessF
type Fitness' a = FitnessF (Base16ByteString a)
newtype FitnessF a
FitnessF :: Seq a -> FitnessF a
[unFitnessF] :: FitnessF a -> Seq a
toFitness :: Seq a -> Fitness' a
unFitness :: FitnessF (Base16ByteString a) -> Seq a
data SigningCurve
SigningCurve_Bip25519 :: SigningCurve
SigningCurve_Ed25519 :: SigningCurve
SigningCurve_Secp256k1 :: SigningCurve
SigningCurve_P256 :: SigningCurve
data DerivationPath
DerivationPath :: Text -> DerivationPath
[unDerivationPath] :: DerivationPath -> Text
data SecretKey
SecretKey :: !LedgerIdentifier -> !SigningCurve -> !DerivationPath -> SecretKey
[_secretKey_ledgerIdentifier] :: SecretKey -> !LedgerIdentifier
[_secretKey_signingCurve] :: SecretKey -> !SigningCurve
[_secretKey_derivationPath] :: SecretKey -> !DerivationPath
newtype LedgerIdentifier
LedgerIdentifier :: Text -> LedgerIdentifier
[unLedgerIdentifier] :: LedgerIdentifier -> Text
toSecretKeyText :: SecretKey -> Text
toSigningCurveText :: SigningCurve -> Text
secretKey_derivationPath :: Lens' SecretKey DerivationPath
secretKey_ledgerIdentifier :: Lens' SecretKey LedgerIdentifier
secretKey_signingCurve :: Lens' SecretKey SigningCurve

-- | "level": {
data Level
Level :: Cycle -> RawLevel -> Bool -> RawLevel -> RawLevel -> RawLevel -> RawLevel -> Level
[_level_cycle] :: Level -> Cycle
[_level_cyclePosition] :: Level -> RawLevel
[_level_expectedCommitment] :: Level -> Bool
[_level_level] :: Level -> RawLevel
[_level_levelPosition] :: Level -> RawLevel
[_level_votingPeriod] :: Level -> RawLevel
[_level_votingPeriodPosition] :: Level -> RawLevel
newtype Cycle
Cycle :: Int32 -> Cycle
[unCycle] :: Cycle -> Int32
newtype RawLevel
RawLevel :: Int32 -> RawLevel
[unRawLevel] :: RawLevel -> Int32
level_cycle :: Lens' Level Cycle
level_cyclePosition :: Lens' Level RawLevel
level_expectedCommitment :: Lens' Level Bool
level_level :: Lens' Level RawLevel
level_levelPosition :: Lens' Level RawLevel
level_votingPeriod :: Lens' Level RawLevel
level_votingPeriodPosition :: Lens' Level RawLevel
type PeriodSequence = PeriodSequenceF TezosInt64
newtype PeriodSequenceF a
PeriodSequence :: NonEmpty a -> PeriodSequenceF a
[unPeriodSequence] :: PeriodSequenceF a -> NonEmpty a
data PublicKey
PublicKey_Ed25519 :: !Ed25519PublicKey -> PublicKey
PublicKey_Secp256k1 :: !Secp256k1PublicKey -> PublicKey
PublicKey_P256 :: !P256PublicKey -> PublicKey
publicKeyConstructorDecoders :: [TryDecodeBase58 PublicKey]
toPublicKeyText :: PublicKey -> Text
data PublicKeyHash
PublicKeyHash_Ed25519 :: !Ed25519PublicKeyHash -> PublicKeyHash
PublicKeyHash_Secp256k1 :: !Secp256k1PublicKeyHash -> PublicKeyHash
PublicKeyHash_P256 :: !P256PublicKeyHash -> PublicKeyHash
publicKeyHashConstructorDecoders :: [TryDecodeBase58 PublicKeyHash]
tryReadPublicKeyHash :: ByteString -> Either HashBase58Error PublicKeyHash
tryReadPublicKeyHashText :: Text -> Either HashBase58Error PublicKeyHash
toPublicKeyHashText :: PublicKeyHash -> Text
rawContextLink :: PublicKeyHash -> Text

-- | "scripted.contracts": {
data ContractScript
ContractScript :: Expression -> Expression -> ContractScript
[_contractScript_code] :: ContractScript -> Expression
[_contractScript_storage] :: ContractScript -> Expression
data ContractId
Implicit :: !PublicKeyHash -> ContractId
Originated :: !ContractHash -> ContractId
contractIdConstructorDecoders :: [TryDecodeBase58 ContractId]
tryReadContractId :: ByteString -> Either HashBase58Error ContractId
tryReadContractIdText :: Text -> Either HashBase58Error ContractId
toContractIdText :: ContractId -> Text
data Signature
Signature_Ed25519 :: Ed25519Signature -> Signature
Signature_Secp256k1 :: Secp256k1Signature -> Signature
Signature_P256 :: P256Signature -> Signature
Signature_Unknown :: GenericSignature -> Signature
signatureConstructorDecoders :: [TryDecodeBase58 Signature]
tryReadSignature :: ByteString -> Either HashBase58Error Signature
tryReadSignatureText :: Text -> Either HashBase58Error Signature
toSignatureText :: Signature -> Text
newtype Priority
Priority :: Word16 -> Priority
[unPriority] :: Priority -> Word16
data BlockHeaderShell
BlockHeaderShell :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> BlockHeaderShell
[_blockHeaderShell_level] :: BlockHeaderShell -> !RawLevel
[_blockHeaderShell_proto] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_predecessor] :: BlockHeaderShell -> !BlockHash
[_blockHeaderShell_timestamp] :: BlockHeaderShell -> !UTCTime
[_blockHeaderShell_validationPass] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_operationsHash] :: BlockHeaderShell -> !OperationListListHash
[_blockHeaderShell_fitness] :: BlockHeaderShell -> !Fitness
[_blockHeaderShell_context] :: BlockHeaderShell -> !ContextHash
data BlockHeaderProto
BlockHeaderProto :: !ProtocolHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderProto
[_blockHeaderProto_protocol] :: BlockHeaderProto -> !ProtocolHash
[_blockHeaderProto_priority] :: BlockHeaderProto -> !Priority
[_blockHeaderProto_proofOfWorkNonce] :: BlockHeaderProto -> !Base16ByteString ByteString
[_blockHeaderProto_seedNonceHash] :: BlockHeaderProto -> !Maybe NonceHash
[_blockHeaderProto_signature] :: BlockHeaderProto -> !Maybe Signature
data BlockHeader
BlockHeader :: !RawLevel -> !BlockHash -> !Word8 -> !ProtocolHash -> !ChainId -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeader
[_blockHeader_level] :: BlockHeader -> !RawLevel
[_blockHeader_hash] :: BlockHeader -> !BlockHash
[_blockHeader_proto] :: BlockHeader -> !Word8
[_blockHeader_protocol] :: BlockHeader -> !ProtocolHash
[_blockHeader_chainId] :: BlockHeader -> !ChainId
[_blockHeader_predecessor] :: BlockHeader -> !BlockHash
[_blockHeader_timestamp] :: BlockHeader -> !UTCTime
[_blockHeader_validationPass] :: BlockHeader -> !Word8
[_blockHeader_operationsHash] :: BlockHeader -> !OperationListListHash
[_blockHeader_fitness] :: BlockHeader -> !Fitness
[_blockHeader_context] :: BlockHeader -> !ContextHash
[_blockHeader_priority] :: BlockHeader -> !Priority
[_blockHeader_proofOfWorkNonce] :: BlockHeader -> !Base16ByteString ByteString
[_blockHeader_seedNonceHash] :: BlockHeader -> !Maybe NonceHash
[_blockHeader_signature] :: BlockHeader -> !Maybe Signature
data BlockHeaderFull
BlockHeaderFull :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderFull
[_blockHeaderFull_level] :: BlockHeaderFull -> !RawLevel
[_blockHeaderFull_proto] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_predecessor] :: BlockHeaderFull -> !BlockHash
[_blockHeaderFull_timestamp] :: BlockHeaderFull -> !UTCTime
[_blockHeaderFull_validationPass] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_operationsHash] :: BlockHeaderFull -> !OperationListListHash
[_blockHeaderFull_fitness] :: BlockHeaderFull -> !Fitness
[_blockHeaderFull_context] :: BlockHeaderFull -> !ContextHash
[_blockHeaderFull_priority] :: BlockHeaderFull -> !Priority
[_blockHeaderFull_proofOfWorkNonce] :: BlockHeaderFull -> !Base16ByteString ByteString
[_blockHeaderFull_seedNonceHash] :: BlockHeaderFull -> !Maybe NonceHash
[_blockHeaderFull_signature] :: BlockHeaderFull -> !Maybe Signature
blockHeader_chainId :: Lens' BlockHeader ChainId
blockHeader_context :: Lens' BlockHeader ContextHash
blockHeader_fitness :: Lens' BlockHeader Fitness
blockHeader_hash :: Lens' BlockHeader BlockHash
blockHeader_level :: Lens' BlockHeader RawLevel
blockHeader_operationsHash :: Lens' BlockHeader OperationListListHash
blockHeader_predecessor :: Lens' BlockHeader BlockHash
blockHeader_priority :: Lens' BlockHeader Priority
blockHeader_proofOfWorkNonce :: Lens' BlockHeader (Base16ByteString ByteString)
blockHeader_proto :: Lens' BlockHeader Word8
blockHeader_protocol :: Lens' BlockHeader ProtocolHash
blockHeader_seedNonceHash :: Lens' BlockHeader (Maybe NonceHash)
blockHeader_signature :: Lens' BlockHeader (Maybe Signature)
blockHeader_timestamp :: Lens' BlockHeader UTCTime
blockHeader_validationPass :: Lens' BlockHeader Word8
blockHeaderFull_context :: Lens' BlockHeaderFull ContextHash
blockHeaderFull_fitness :: Lens' BlockHeaderFull Fitness
blockHeaderFull_level :: Lens' BlockHeaderFull RawLevel
blockHeaderFull_operationsHash :: Lens' BlockHeaderFull OperationListListHash
blockHeaderFull_predecessor :: Lens' BlockHeaderFull BlockHash
blockHeaderFull_priority :: Lens' BlockHeaderFull Priority
blockHeaderFull_proofOfWorkNonce :: Lens' BlockHeaderFull (Base16ByteString ByteString)
blockHeaderFull_proto :: Lens' BlockHeaderFull Word8
blockHeaderFull_seedNonceHash :: Lens' BlockHeaderFull (Maybe NonceHash)
blockHeaderFull_signature :: Lens' BlockHeaderFull (Maybe Signature)
blockHeaderFull_timestamp :: Lens' BlockHeaderFull UTCTime
blockHeaderFull_validationPass :: Lens' BlockHeaderFull Word8
blockHeaderProto_priority :: Lens' BlockHeaderProto Priority
blockHeaderProto_proofOfWorkNonce :: Lens' BlockHeaderProto (Base16ByteString ByteString)
blockHeaderProto_protocol :: Lens' BlockHeaderProto ProtocolHash
blockHeaderProto_seedNonceHash :: Lens' BlockHeaderProto (Maybe NonceHash)
blockHeaderProto_signature :: Lens' BlockHeaderProto (Maybe Signature)
blockHeaderShell_context :: Lens' BlockHeaderShell ContextHash
blockHeaderShell_fitness :: Lens' BlockHeaderShell Fitness
blockHeaderShell_level :: Lens' BlockHeaderShell RawLevel
blockHeaderShell_operationsHash :: Lens' BlockHeaderShell OperationListListHash
blockHeaderShell_predecessor :: Lens' BlockHeaderShell BlockHash
blockHeaderShell_proto :: Lens' BlockHeaderShell Word8
blockHeaderShell_timestamp :: Lens' BlockHeaderShell UTCTime
blockHeaderShell_validationPass :: Lens' BlockHeaderShell Word8
data HistoryMode
HistoryMode_Archive :: HistoryMode
HistoryMode_Full :: HistoryMode
HistoryMode_Rolling :: HistoryMode
data Checkpoint
Checkpoint :: !RawLevel -> !RawLevel -> !HistoryMode -> !BlockHeaderShell -> Checkpoint
[_checkpoint_savePoint] :: Checkpoint -> !RawLevel
[_checkpoint_caboose] :: Checkpoint -> !RawLevel
[_checkpoint_historyMode] :: Checkpoint -> !HistoryMode
[_checkpoint_block] :: Checkpoint -> !BlockHeaderShell
checkpoint_block :: Lens' Checkpoint BlockHeaderShell
checkpoint_caboose :: Lens' Checkpoint RawLevel
checkpoint_historyMode :: Lens' Checkpoint HistoryMode
checkpoint_savePoint :: Lens' Checkpoint RawLevel

-- | "test_chain_status": {
data TestChainStatus
TestChainStatus_NotRunning :: TestChainStatus
TestChainStatus_Forking :: !ProtocolHash -> !UTCTime -> TestChainStatus
[_testChainStatusForking_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusForking_expiration] :: TestChainStatus -> !UTCTime
TestChainStatus_Running :: !ChainId -> !BlockHash -> !ProtocolHash -> UTCTime -> TestChainStatus
[_testChainStatusRunning_chainId] :: TestChainStatus -> !ChainId
[_testChainStatusRunning_genesis] :: TestChainStatus -> !BlockHash
[_testChainStatusRunning_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusRunning_expiration] :: TestChainStatus -> UTCTime
newtype TezDelta
TezDelta :: Micro -> TezDelta
[getTezDelta] :: TezDelta -> Micro
newtype Tez
Tez :: Micro -> Tez
[getTez] :: Tez -> Micro
getMicroTez :: Tez -> Natural
microTez :: Natural -> Tez
getMicroTezDelta :: TezDelta -> Int64
microTezDelta :: Int64 -> TezDelta
newtype Balances
Balances :: Map ContractId Balance -> Balances
[unBalances] :: Balances -> Map ContractId Balance
type Balance = Balance' (Sum TezDelta)
data Balance' g
Balance :: !g -> !Map Cycle (Map FreezerCategory g) -> Balance' g
[_balance_spendable] :: Balance' g -> !g
[_balance_frozen] :: Balance' g -> !Map Cycle (Map FreezerCategory g)
class HasBalanceUpdates a
balanceUpdates :: HasBalanceUpdates a => Traversal' a BalanceUpdate
data BalanceUpdate
BalanceUpdate_Contract :: ContractUpdate -> BalanceUpdate
BalanceUpdate_Freezer :: FreezerUpdate -> BalanceUpdate
data FreezerUpdate
FreezerUpdate :: !FreezerCategory -> !PublicKeyHash -> !Cycle -> !TezDelta -> FreezerUpdate
[_freezerUpdate_category] :: FreezerUpdate -> !FreezerCategory
[_freezerUpdate_delegate] :: FreezerUpdate -> !PublicKeyHash
[_freezerUpdate_cycle] :: FreezerUpdate -> !Cycle
[_freezerUpdate_change] :: FreezerUpdate -> !TezDelta
data ContractUpdate
ContractUpdate :: !ContractId -> !TezDelta -> ContractUpdate
[_contractUpdate_contract] :: ContractUpdate -> !ContractId
[_contractUpdate_change] :: ContractUpdate -> !TezDelta
data FreezerCategory
FreezerCategory_Rewards :: FreezerCategory
FreezerCategory_Fees :: FreezerCategory
FreezerCategory_Deposits :: FreezerCategory
getBalanceChanges :: HasBalanceUpdates a => a -> Balances
data ManagerKey
ManagerKey :: !PublicKeyHash -> !Maybe PublicKey -> ManagerKey
[_managerKey_manager] :: ManagerKey -> !PublicKeyHash
[_managerKey_key] :: ManagerKey -> !Maybe PublicKey
data DelegateInfo
DelegateInfo :: !Tez -> !Tez -> !Seq FrozenBalanceByCycle -> !Tez -> !Seq ContractId -> !Tez -> !Bool -> !Cycle -> DelegateInfo
[_delegateInfo_balance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalanceByCycle] :: DelegateInfo -> !Seq FrozenBalanceByCycle
[_delegateInfo_stakingBalance] :: DelegateInfo -> !Tez
[_delegateInfo_delegatedContracts] :: DelegateInfo -> !Seq ContractId
[_delegateInfo_delegatedBalance] :: DelegateInfo -> !Tez
[_delegateInfo_deactivated] :: DelegateInfo -> !Bool
[_delegateInfo_gracePeriod] :: DelegateInfo -> !Cycle
data FrozenBalanceByCycle
FrozenBalanceByCycle :: !Cycle -> !Tez -> !Tez -> !Tez -> FrozenBalanceByCycle
[_frozenBalanceByCycle_cycle] :: FrozenBalanceByCycle -> !Cycle
[_frozenBalanceByCycle_deposit] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_fees] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_rewards] :: FrozenBalanceByCycle -> !Tez
data EndorsingRights
EndorsingRights :: !RawLevel -> !PublicKeyHash -> !Seq Word8 -> !Maybe UTCTime -> EndorsingRights
[_endorsingRights_level] :: EndorsingRights -> !RawLevel
[_endorsingRights_delegate] :: EndorsingRights -> !PublicKeyHash
[_endorsingRights_slots] :: EndorsingRights -> !Seq Word8
[_endorsingRights_estimatedTime] :: EndorsingRights -> !Maybe UTCTime
data BakingRights
BakingRights :: !RawLevel -> !PublicKeyHash -> !Priority -> !Maybe UTCTime -> BakingRights
[_bakingRights_level] :: BakingRights -> !RawLevel
[_bakingRights_delegate] :: BakingRights -> !PublicKeyHash
[_bakingRights_priority] :: BakingRights -> !Priority
[_bakingRights_estimatedTime] :: BakingRights -> !Maybe UTCTime
data Account
Account :: !PublicKeyHash -> !Tez -> !Bool -> !AccountDelegate -> !Maybe ContractScript -> !Counter -> Account
[_account_manager] :: Account -> !PublicKeyHash
[_account_balance] :: Account -> !Tez
[_account_spendable] :: Account -> !Bool
[_account_delegate] :: Account -> !AccountDelegate
[_account_script] :: Account -> !Maybe ContractScript
[_account_counter] :: Account -> !Counter
data AccountDelegate
AccountDelegate :: !Bool -> !Maybe PublicKeyHash -> AccountDelegate
[_accountDelegate_setable] :: AccountDelegate -> !Bool
[_accountDelegate_value] :: AccountDelegate -> !Maybe PublicKeyHash

-- | A special nonce that must increment with each successive operation
--   signed and submitted by a particular account.
type Counter = TezosPositiveBigNum
account_balance :: Lens' Account Tez
account_counter :: Lens' Account Counter
account_delegate :: Lens' Account AccountDelegate
account_manager :: Lens' Account PublicKeyHash
account_script :: Lens' Account (Maybe ContractScript)
account_spendable :: Lens' Account Bool
accountDelegate_setable :: Lens' AccountDelegate Bool
accountDelegate_value :: Lens' AccountDelegate (Maybe PublicKeyHash)
bakingRights_delegate :: Lens' BakingRights PublicKeyHash
bakingRights_estimatedTime :: Lens' BakingRights (Maybe UTCTime)
bakingRights_level :: Lens' BakingRights RawLevel
bakingRights_priority :: Lens' BakingRights Priority
delegateInfo_balance :: Lens' DelegateInfo Tez
delegateInfo_deactivated :: Lens' DelegateInfo Bool
delegateInfo_delegatedBalance :: Lens' DelegateInfo Tez
delegateInfo_delegatedContracts :: Lens' DelegateInfo (Seq ContractId)
delegateInfo_frozenBalance :: Lens' DelegateInfo Tez
delegateInfo_frozenBalanceByCycle :: Lens' DelegateInfo (Seq FrozenBalanceByCycle)
delegateInfo_gracePeriod :: Lens' DelegateInfo Cycle
delegateInfo_stakingBalance :: Lens' DelegateInfo Tez
endorsingRights_delegate :: Lens' EndorsingRights PublicKeyHash
endorsingRights_estimatedTime :: Lens' EndorsingRights (Maybe UTCTime)
endorsingRights_level :: Lens' EndorsingRights RawLevel
endorsingRights_slots :: Lens' EndorsingRights (Seq Word8)
frozenBalanceByCycle_cycle :: Lens' FrozenBalanceByCycle Cycle
frozenBalanceByCycle_deposit :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_fees :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_rewards :: Lens' FrozenBalanceByCycle Tez
managerKey_key :: Lens' ManagerKey (Maybe PublicKey)
managerKey_manager :: Lens' ManagerKey PublicKeyHash
data OperationResultDelegation
OperationResultDelegation :: OperationResultDelegation

-- | "kind": { "type": "string", "enum": [ "delegation" ] },
data OperationContentsDelegation
OperationContentsDelegation :: ManagerOperationMetadata OperationResultDelegation -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Maybe PublicKeyHash -> OperationContentsDelegation
[_operationContentsDelegation_metadata] :: OperationContentsDelegation -> ManagerOperationMetadata OperationResultDelegation
[_operationContentsDelegation_source] :: OperationContentsDelegation -> !ContractId
[_operationContentsDelegation_fee] :: OperationContentsDelegation -> !Tez
[_operationContentsDelegation_counter] :: OperationContentsDelegation -> !Counter
[_operationContentsDelegation_gasLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_storageLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_delegate] :: OperationContentsDelegation -> !Maybe PublicKeyHash
data OperationResultOrigination
OperationResultOrigination :: !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultOrigination
[_operationResultOrigination_balanceUpdates] :: OperationResultOrigination -> !Seq BalanceUpdate
[_operationResultOrigination_originatedContracts] :: OperationResultOrigination -> !Seq ContractId
[_operationResultOrigination_consumedGas] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_storageSize] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_paidStorageSizeDiff] :: OperationResultOrigination -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "origination" ] },
data OperationContentsOrigination
OperationContentsOrigination :: ManagerOperationMetadata OperationResultOrigination -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKeyHash -> !Tez -> !Bool -> !Bool -> !Maybe PublicKeyHash -> !Maybe ContractScript -> OperationContentsOrigination
[_operationContentsOrigination_metadata] :: OperationContentsOrigination -> ManagerOperationMetadata OperationResultOrigination
[_operationContentsOrigination_source] :: OperationContentsOrigination -> !ContractId
[_operationContentsOrigination_fee] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_counter] :: OperationContentsOrigination -> !Counter
[_operationContentsOrigination_gasLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_storageLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_managerPubkey] :: OperationContentsOrigination -> !PublicKeyHash
[_operationContentsOrigination_balance] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_spendable] :: OperationContentsOrigination -> !Bool
[_operationContentsOrigination_delegatable] :: OperationContentsOrigination -> !Bool
[_operationContentsOrigination_delegate] :: OperationContentsOrigination -> !Maybe PublicKeyHash
[_operationContentsOrigination_script] :: OperationContentsOrigination -> !Maybe ContractScript

-- | "operation.alpha.operation_result.transaction": {
data OperationResultTransaction
OperationResultTransaction :: !Maybe Expression -> !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultTransaction
[_operationResultTransaction_storage] :: OperationResultTransaction -> !Maybe Expression
[_operationResultTransaction_balanceUpdates] :: OperationResultTransaction -> !Seq BalanceUpdate
[_operationResultTransaction_originatedContracts] :: OperationResultTransaction -> !Seq ContractId
[_operationResultTransaction_consumedGas] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_storageSize] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_paidStorageSizeDiff] :: OperationResultTransaction -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "transaction" ] },
data OperationContentsTransaction
OperationContentsTransaction :: ManagerOperationMetadata OperationResultTransaction -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !ContractId -> !Maybe Expression -> OperationContentsTransaction
[_operationContentsTransaction_metadata] :: OperationContentsTransaction -> ManagerOperationMetadata OperationResultTransaction
[_operationContentsTransaction_source] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_fee] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_counter] :: OperationContentsTransaction -> !Counter
[_operationContentsTransaction_gasLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_storageLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_amount] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_destination] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_parameters] :: OperationContentsTransaction -> !Maybe Expression
data OperationResultReveal
OperationResultReveal :: OperationResultReveal

-- | "kind": { "type": "string", "enum": [ "reveal" ] },
data OperationContentsReveal
OperationContentsReveal :: ManagerOperationMetadata OperationResultReveal -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKey -> OperationContentsReveal
[_operationContentsReveal_metadata] :: OperationContentsReveal -> ManagerOperationMetadata OperationResultReveal
[_operationContentsReveal_source] :: OperationContentsReveal -> !ContractId
[_operationContentsReveal_fee] :: OperationContentsReveal -> !Tez
[_operationContentsReveal_counter] :: OperationContentsReveal -> !Counter
[_operationContentsReveal_gasLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_storageLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_publicKey] :: OperationContentsReveal -> !PublicKey

-- | only certain combinations of status<i>errors</i>content are valid, but
--   ignore that for now
data OperationResult a
OperationResult :: !OperationResultStatus -> !Maybe (Seq JsonRpcError) -> !Maybe a -> OperationResult a
[_operationResult_status] :: OperationResult a -> !OperationResultStatus
[_operationResult_errors] :: OperationResult a -> !Maybe (Seq JsonRpcError)
[_operationResult_content] :: OperationResult a -> !Maybe a
data OperationResultStatus
OperationResultStatus_Applied :: OperationResultStatus
OperationResultStatus_Failed :: OperationResultStatus
OperationResultStatus_Skipped :: OperationResultStatus
OperationResultStatus_Backtracked :: OperationResultStatus
data InternalOperationContentsDelegation
InternalOperationContentsDelegation :: InternalOperationContentsDelegation
data InternalOperationContentsOrigination
InternalOperationContentsOrigination :: InternalOperationContentsOrigination
data InternalOperationContentsTransaction
InternalOperationContentsTransaction :: !ContractId -> !Word16 -> !Tez -> !ContractId -> !Maybe Expression -> !OperationResultTransaction -> InternalOperationContentsTransaction
[_internalOperationContentsTransaction_source] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_nonce] :: InternalOperationContentsTransaction -> !Word16
[_internalOperationContentsTransaction_amount] :: InternalOperationContentsTransaction -> !Tez
[_internalOperationContentsTransaction_destination] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_parameters] :: InternalOperationContentsTransaction -> !Maybe Expression
[_internalOperationContentsTransaction_result] :: InternalOperationContentsTransaction -> !OperationResultTransaction
data InternalOperationContentsReveal
InternalOperationContentsReveal :: InternalOperationContentsReveal
data InternalOperationResult
InternalOperationResult_Reveal :: !InternalOperationContentsReveal -> InternalOperationResult
InternalOperationResult_Transaction :: !InternalOperationContentsTransaction -> InternalOperationResult
InternalOperationResult_Origination :: !InternalOperationContentsOrigination -> InternalOperationResult
InternalOperationResult_Delegation :: !InternalOperationContentsDelegation -> InternalOperationResult
data ManagerOperationMetadata a
ManagerOperationMetadata :: !Seq BalanceUpdate -> !OperationResult a -> !Maybe (Seq InternalOperationResult) -> ManagerOperationMetadata a
[_managerOperationMetadata_balanceUpdates] :: ManagerOperationMetadata a -> !Seq BalanceUpdate
[_managerOperationMetadata_operationResult] :: ManagerOperationMetadata a -> !OperationResult a
[_managerOperationMetadata_internalOperationResults] :: ManagerOperationMetadata a -> !Maybe (Seq InternalOperationResult)

-- | "kind": { "type": "string", "enum": [ "ballot" ] },
data OperationContentsBallot
OperationContentsBallot :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OperationContentsBallot
[_operationContentsBallot_metadata] :: OperationContentsBallot -> !EmptyMetadata
[_operationContentsBallot_source] :: OperationContentsBallot -> !PublicKeyHash
[_operationContentsBallot_period] :: OperationContentsBallot -> !RawLevel
[_operationContentsBallot_proposal] :: OperationContentsBallot -> !ProtocolHash
[_operationContentsBallot_ballot] :: OperationContentsBallot -> !Ballot

-- | "ballot": { "type": "string", "enum": [ "nay", "yay", "pass" ] },
data Ballot
Ballot_Nay :: Ballot
Ballot_Yay :: Ballot
Ballot_Pass :: Ballot

-- | "kind": { "type": "string", "enum": [ "proposals" ] },
data OperationContentsProposals
OperationContentsProposals :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OperationContentsProposals
[_operationContentsProposals_metadata] :: OperationContentsProposals -> !EmptyMetadata
[_operationContentsProposals_source] :: OperationContentsProposals -> !PublicKeyHash
[_operationContentsProposals_period] :: OperationContentsProposals -> !RawLevel
[_operationContentsProposals_proposals] :: OperationContentsProposals -> !Seq ProtocolHash
data ActivateMetadata
ActivateMetadata :: !Seq BalanceUpdate -> ActivateMetadata
[_activateMetadata_balanceUpdates] :: ActivateMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "activate_account" ] },
data OperationContentsActivateAccount
OperationContentsActivateAccount :: !ActivateMetadata -> !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OperationContentsActivateAccount
[_operationContentsActivateAccount_metadata] :: OperationContentsActivateAccount -> !ActivateMetadata
[_operationContentsActivateAccount_pkh] :: OperationContentsActivateAccount -> !Ed25519PublicKeyHash
[_operationContentsActivateAccount_secret] :: OperationContentsActivateAccount -> !Base16ByteString ByteString
data DoubleBakingEvidenceMetadata
DoubleBakingEvidenceMetadata :: !Seq BalanceUpdate -> DoubleBakingEvidenceMetadata
[_doubleBakingEvidenceMetadata_balanceUpdates] :: DoubleBakingEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_baking_evidence" ] },
data OperationContentsDoubleBakingEvidence
OperationContentsDoubleBakingEvidence :: !DoubleBakingEvidenceMetadata -> !BlockHeaderFull -> !BlockHeaderFull -> OperationContentsDoubleBakingEvidence
[_operationContentsDoubleBakingEvidence_metadata] :: OperationContentsDoubleBakingEvidence -> !DoubleBakingEvidenceMetadata
[_operationContentsDoubleBakingEvidence_bh1] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
[_operationContentsDoubleBakingEvidence_bh2] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
data DoubleEndorsementEvidenceMetadata
DoubleEndorsementEvidenceMetadata :: !Seq BalanceUpdate -> DoubleEndorsementEvidenceMetadata
[_doubleEndorsementEvidenceMetadata_balanceUpdates] :: DoubleEndorsementEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_endorsement_evidence" ]
--   },
data OperationContentsDoubleEndorsementEvidence
OperationContentsDoubleEndorsementEvidence :: DoubleEndorsementEvidenceMetadata -> InlinedEndorsement -> InlinedEndorsement -> OperationContentsDoubleEndorsementEvidence
[_operationContentsDoubleEndorsementEvidence_metadata] :: OperationContentsDoubleEndorsementEvidence -> DoubleEndorsementEvidenceMetadata
[_operationContentsDoubleEndorsementEvidence_op1] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
[_operationContentsDoubleEndorsementEvidence_op2] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
data InlinedEndorsementContents
InlinedEndorsementContents :: RawLevel -> InlinedEndorsementContents
[_inlinedEndorsementContents_level] :: InlinedEndorsementContents -> RawLevel
data InlinedEndorsement
InlinedEndorsement :: !BlockHash -> !InlinedEndorsementContents -> !Maybe Signature -> InlinedEndorsement
[_inlinedEndorsement_branch] :: InlinedEndorsement -> !BlockHash
[_inlinedEndorsement_operations] :: InlinedEndorsement -> !InlinedEndorsementContents
[_inlinedEndorsement_signature] :: InlinedEndorsement -> !Maybe Signature
data SeedNonceRevelationMetadata
SeedNonceRevelationMetadata :: !Seq BalanceUpdate -> SeedNonceRevelationMetadata
[_seedNonceRevelationMetadata_balanceUpdates] :: SeedNonceRevelationMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "seed_nonce_revelation" ] },
data OperationContentsSeedNonceRevelation
OperationContentsSeedNonceRevelation :: SeedNonceRevelationMetadata -> RawLevel -> !Base16ByteString ByteString -> OperationContentsSeedNonceRevelation
[_operationContentsSeedNonceRevelation_metadata] :: OperationContentsSeedNonceRevelation -> SeedNonceRevelationMetadata
[_operationContentsSeedNonceRevelation_level] :: OperationContentsSeedNonceRevelation -> RawLevel
[_operationContentsSeedNonceRevelation_nonce] :: OperationContentsSeedNonceRevelation -> !Base16ByteString ByteString
data EndorsementMetadata
EndorsementMetadata :: !Seq BalanceUpdate -> !PublicKeyHash -> !Seq Word8 -> EndorsementMetadata
[_endorsementMetadata_balanceUpdates] :: EndorsementMetadata -> !Seq BalanceUpdate
[_endorsementMetadata_delegate] :: EndorsementMetadata -> !PublicKeyHash
[_endorsementMetadata_slots] :: EndorsementMetadata -> !Seq Word8

-- | "kind": { "type": "string", "enum": [ "endorsement" ] },
data OperationContentsEndorsement
OperationContentsEndorsement :: EndorsementMetadata -> RawLevel -> OperationContentsEndorsement
[_operationContentsEndorsement_metadata] :: OperationContentsEndorsement -> EndorsementMetadata
[_operationContentsEndorsement_level] :: OperationContentsEndorsement -> RawLevel
data OpContentsDelegation
OpContentsDelegation :: !PublicKeyHash -> OpContentsDelegation
[_opContentsDelegation_delegate] :: OpContentsDelegation -> !PublicKeyHash
data OpContentsOrigination
OpContentsOrigination :: !PublicKeyHash -> !Tez -> !Bool -> !Bool -> !Maybe PublicKeyHash -> !Maybe ContractScript -> OpContentsOrigination
[_opContentsOrigination_managerPubkey] :: OpContentsOrigination -> !PublicKeyHash
[_opContentsOrigination_balance] :: OpContentsOrigination -> !Tez
[_opContentsOrigination_spendable] :: OpContentsOrigination -> !Bool
[_opContentsOrigination_delegatable] :: OpContentsOrigination -> !Bool
[_opContentsOrigination_delegate] :: OpContentsOrigination -> !Maybe PublicKeyHash
[_opContentsOrigination_script] :: OpContentsOrigination -> !Maybe ContractScript
data OpContentsTransaction
OpContentsTransaction :: !Tez -> !ContractId -> !Maybe Expression -> OpContentsTransaction
[_opContentsTransaction_amount] :: OpContentsTransaction -> !Tez
[_opContentsTransaction_destination] :: OpContentsTransaction -> !ContractId
[_opContentsTransaction_parameters] :: OpContentsTransaction -> !Maybe Expression
data OpContentsReveal
OpContentsReveal :: !PublicKey -> OpContentsReveal
[_opContentsReveal_publicKey] :: OpContentsReveal -> !PublicKey
data OpContentsManager op
OpContentsManager :: !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !op -> OpContentsManager op
[_opContentsManager_source] :: OpContentsManager op -> !ContractId
[_opContentsManager_fee] :: OpContentsManager op -> !Tez
[_opContentsManager_counter] :: OpContentsManager op -> !Counter
[_opContentsManager_gasLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_storageLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_operation] :: OpContentsManager op -> !op
data OpContentsBallot
OpContentsBallot :: !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OpContentsBallot
[_opContentsBallot_source] :: OpContentsBallot -> !PublicKeyHash
[_opContentsBallot_period] :: OpContentsBallot -> !RawLevel
[_opContentsBallot_proposal] :: OpContentsBallot -> !ProtocolHash
[_opContentsBallot_ballot] :: OpContentsBallot -> !Ballot
data OpContentsProposals
OpContentsProposals :: !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OpContentsProposals
[_opContentsProposals_source] :: OpContentsProposals -> !PublicKeyHash
[_opContentsProposals_period] :: OpContentsProposals -> !RawLevel
[_opContentsProposals_proposals] :: OpContentsProposals -> !Seq ProtocolHash
data OpContentsActivateAccount
OpContentsActivateAccount :: !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OpContentsActivateAccount
[_opContentsActivateAccount_pkh] :: OpContentsActivateAccount -> !Ed25519PublicKeyHash
[_opContentsActivateAccount_secret] :: OpContentsActivateAccount -> !Base16ByteString ByteString
data OpContentsDoubleBakingEvidence
OpContentsDoubleBakingEvidence :: !BlockHeaderFull -> !BlockHeaderFull -> OpContentsDoubleBakingEvidence
[_opContentsDoubleBakingEvidence_bh1] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
[_opContentsDoubleBakingEvidence_bh2] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
data OpContentsDoubleEndorsementEvidence
OpContentsDoubleEndorsementEvidence :: !InlinedEndorsement -> !InlinedEndorsement -> OpContentsDoubleEndorsementEvidence
[_opContentsDoubleEndorsementEvidence_op1] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
[_opContentsDoubleEndorsementEvidence_op2] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
data OpContentsSeedNonceRevelation
OpContentsSeedNonceRevelation :: !RawLevel -> !Base16ByteString ByteString -> OpContentsSeedNonceRevelation
[_opContentsSeedNonceRevelation_level] :: OpContentsSeedNonceRevelation -> !RawLevel
[_opContentsSeedNonceRevelation_nonce] :: OpContentsSeedNonceRevelation -> !Base16ByteString ByteString
data OpContentsEndorsement
OpContentsEndorsement :: !RawLevel -> OpContentsEndorsement
[_opContentsEndorsement_level] :: OpContentsEndorsement -> !RawLevel
data OpContents (a :: OpKind)
[OpContents_Endorsement] :: !OpContentsEndorsement -> OpContents  'OpKind_Endorsement
[OpContents_SeedNonceRevelation] :: !OpContentsSeedNonceRevelation -> OpContents  'OpKind_SeedNonceRevelation
[OpContents_DoubleEndorsementEvidence] :: !OpContentsDoubleEndorsementEvidence -> OpContents  'OpKind_DoubleEndorsementEvidence
[OpContents_DoubleBakingEvidence] :: !OpContentsDoubleBakingEvidence -> OpContents  'OpKind_DoubleBakingEvidence
[OpContents_ActivateAccount] :: !OpContentsActivateAccount -> OpContents  'OpKind_ActivateAccount
[OpContents_Proposals] :: !OpContentsProposals -> OpContents  'OpKind_Proposals
[OpContents_Ballot] :: !OpContentsBallot -> OpContents  'OpKind_Ballot
[OpContents_Reveal] :: !OpContentsManager OpContentsReveal -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Reveal])
[OpContents_Transaction] :: !OpContentsManager OpContentsTransaction -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Transaction])
[OpContents_Origination] :: !OpContentsManager OpContentsOrigination -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Origination])
[OpContents_Delegation] :: !OpContentsManager OpContentsDelegation -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Delegation])
data OpContentsList (a :: OpKind)
[OpContentsList_Single] :: OpContents a -> OpContentsList a
[OpContentsList_Cons] :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager (kk : ks)) -> OpContentsList ( 'OpKind_Manager (k : (kk : ks)))

-- | "operation.alpha.operation_contents_and_result": {
data OperationContents
OperationContents_Endorsement :: !OperationContentsEndorsement -> OperationContents
OperationContents_SeedNonceRevelation :: !OperationContentsSeedNonceRevelation -> OperationContents
OperationContents_DoubleEndorsementEvidence :: !OperationContentsDoubleEndorsementEvidence -> OperationContents
OperationContents_DoubleBakingEvidence :: !OperationContentsDoubleBakingEvidence -> OperationContents
OperationContents_ActivateAccount :: !OperationContentsActivateAccount -> OperationContents
OperationContents_Proposals :: !OperationContentsProposals -> OperationContents
OperationContents_Ballot :: !OperationContentsBallot -> OperationContents
OperationContents_Reveal :: !OperationContentsReveal -> OperationContents
OperationContents_Transaction :: !OperationContentsTransaction -> OperationContents
OperationContents_Origination :: !OperationContentsOrigination -> OperationContents
OperationContents_Delegation :: !OperationContentsDelegation -> OperationContents

-- | This is also used in the mempool for operations that will not be
--   applied for one reason or another.
data ErroredOp (a :: OpKind)
ErroredOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Signature -> !Value -> ErroredOp
[_erroredOp_protocol] :: ErroredOp -> !ProtocolHash
[_erroredOp_branch] :: ErroredOp -> !BlockHash
[_erroredOp_contents] :: ErroredOp -> !OpContentsList a
[_erroredOp_signature] :: ErroredOp -> !Signature
[_erroredOp_error] :: ErroredOp -> !Value

-- | Like Op but with its own hash. Used in the mempool.
data PendingOp (a :: OpKind)
PendingOp :: !OperationHash -> !BlockHash -> !OpContentsList a -> !Signature -> PendingOp
[_pendingOp_hash] :: PendingOp -> !OperationHash
[_pendingOp_branch] :: PendingOp -> !BlockHash
[_pendingOp_contents] :: PendingOp -> !OpContentsList a
[_pendingOp_signature] :: PendingOp -> !Signature

-- | operation.alpha.operation_with_metadata: { "contents": [
--   $operation.alpha.operation_contents_and_result ... ], "signature"?:
--   $Signature } || { "contents": [ $operation.alpha.contents ... ],
--   "signature"?: $Signature }
--   
--   This is the return type of the run_operation RPC. RPC reference: POST
--   <i>chains</i><a>chain_id</a><i>blocks</i><a>block_id</a><i>helpers</i>scripts/run_operation
data NoContextOperation
NoContextOperation :: !Seq OperationContents -> !Maybe Signature -> NoContextOperation
[_noContextOperation_contents] :: NoContextOperation -> !Seq OperationContents
[_noContextOperation_signature] :: NoContextOperation -> !Maybe Signature
data EmptyMetadata
EmptyMetadata :: EmptyMetadata

-- | next_operation: { "protocol":
--   <a>Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd</a>, "branch":
--   $block_hash, "contents": [ $operation.alpha.contents ... ],
--   "signature": $Signature }
--   
--   Like Op but with a protocol hash added. Used in preapply.
data ProtoOp (a :: OpKind)
ProtoOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Maybe Signature -> ProtoOp
[_protoOp_protocol] :: ProtoOp -> !ProtocolHash
[_protoOp_branch] :: ProtoOp -> !BlockHash
[_protoOp_contents] :: ProtoOp -> !OpContentsList a
[_protoOp_signature] :: ProtoOp -> !Maybe Signature
data Op (a :: OpKind)
Op :: !BlockHash -> !OpContentsList a -> !Maybe Signature -> Op
[_op_branch] :: Op -> !BlockHash
[_op_contents] :: Op -> !OpContentsList a
[_op_signature] :: Op -> !Maybe Signature
data BatchableOp k
[BatchableOp] :: OpKindManagerTag k -> BatchableOp ( 'OpKind_Manager '[k])
data OpKindManagerTag opKindManager
[OpKindManagerTag_Reveal] :: OpKindManagerTag  'OpKindManager_Reveal
[OpKindManagerTag_Transaction] :: OpKindManagerTag  'OpKindManager_Transaction
[OpKindManagerTag_Origination] :: OpKindManagerTag  'OpKindManager_Origination
[OpKindManagerTag_Delegation] :: OpKindManagerTag  'OpKindManager_Delegation
data OpKindManager
OpKindManager_Reveal :: OpKindManager
OpKindManager_Transaction :: OpKindManager
OpKindManager_Origination :: OpKindManager
OpKindManager_Delegation :: OpKindManager
data OpsKindTag opKinds
[OpsKindTag_Single] :: OpKindTag k -> OpsKindTag k
[OpsKindTag_Cons] :: OpKindTag ( 'OpKind_Manager (k : '[])) -> OpsKindTag ( 'OpKind_Manager (kk : ks)) -> OpsKindTag ( 'OpKind_Manager (k : (kk : ks)))
data OpKindTag opKind
[OpKindTag_Endorsement] :: OpKindTag  'OpKind_Endorsement
[OpKindTag_SeedNonceRevelation] :: OpKindTag  'OpKind_SeedNonceRevelation
[OpKindTag_DoubleEndorsementEvidence] :: OpKindTag  'OpKind_DoubleEndorsementEvidence
[OpKindTag_DoubleBakingEvidence] :: OpKindTag  'OpKind_DoubleBakingEvidence
[OpKindTag_ActivateAccount] :: OpKindTag  'OpKind_ActivateAccount
[OpKindTag_Proposals] :: OpKindTag  'OpKind_Proposals
[OpKindTag_Ballot] :: OpKindTag  'OpKind_Ballot
[OpKindTag_Manager] :: OpKindManagerTag opKindManager -> OpKindTag ( 'OpKind_Manager (opKindManager : '[]))
data OpKind
OpKind_SeedNonceRevelation :: OpKind
OpKind_DoubleEndorsementEvidence :: OpKind
OpKind_DoubleBakingEvidence :: OpKind
OpKind_ActivateAccount :: OpKind
OpKind_Endorsement :: OpKind
OpKind_Proposals :: OpKind
OpKind_Ballot :: OpKind
OpKind_Manager :: [OpKindManager] -> OpKind
data OperationWithMetadata
OperationWithMetadata :: !Seq OperationContents -> !Maybe Signature -> OperationWithMetadata
[_operationWithMetadata_contents] :: OperationWithMetadata -> !Seq OperationContents
[_operationWithMetadata_signature] :: OperationWithMetadata -> !Maybe Signature

-- | "operation": {
data Operation
Operation :: !ProtocolHash -> !ChainId -> !OperationHash -> !BlockHash -> !Seq OperationContents -> !Maybe Signature -> Operation
[_operation_protocol] :: Operation -> !ProtocolHash
[_operation_chainId] :: Operation -> !ChainId
[_operation_hash] :: Operation -> !OperationHash
[_operation_branch] :: Operation -> !BlockHash
[_operation_contents] :: Operation -> !Seq OperationContents
[_operation_signature] :: Operation -> !Maybe Signature
stripOpProtocol :: ProtoOp a -> Op a
stripOperationContext :: Operation -> NoContextOperation
stripEndorsement :: Operation -> Maybe (Op  'OpKind_Endorsement)
outlineEndorsement :: InlinedEndorsement -> Op  'OpKind_Endorsement
nonce_size :: Int
activation_code_size :: Int
jsonAddKeys :: [(Text, Value)] -> Value -> Value
checkBatch :: MonadFail m => [DSum OpKindTag OpContents] -> m (DSum OpsKindTag OpContentsList)
_OperationContents_Endorsement :: Prism' OperationContents OperationContentsEndorsement
_OperationContents_SeedNonceRevelation :: Prism' OperationContents OperationContentsSeedNonceRevelation
_OperationContents_DoubleEndorsementEvidence :: Prism' OperationContents OperationContentsDoubleEndorsementEvidence
_OperationContents_DoubleBakingEvidence :: Prism' OperationContents OperationContentsDoubleBakingEvidence
_OperationContents_ActivateAccount :: Prism' OperationContents OperationContentsActivateAccount
_OperationContents_Proposals :: Prism' OperationContents OperationContentsProposals
_OperationContents_Ballot :: Prism' OperationContents OperationContentsBallot
_OperationContents_Reveal :: Prism' OperationContents OperationContentsReveal
_OperationContents_Transaction :: Prism' OperationContents OperationContentsTransaction
_OperationContents_Origination :: Prism' OperationContents OperationContentsOrigination
_OperationContents_Delegation :: Prism' OperationContents OperationContentsDelegation
_InternalOperationResult_Reveal :: Prism' InternalOperationResult InternalOperationContentsReveal
_InternalOperationResult_Transaction :: Prism' InternalOperationResult InternalOperationContentsTransaction
_InternalOperationResult_Origination :: Prism' InternalOperationResult InternalOperationContentsOrigination
_InternalOperationResult_Delegation :: Prism' InternalOperationResult InternalOperationContentsDelegation
_OpContentsList_Single :: forall a_a2hZ0. Prism' (OpContentsList a_a2hZ0) (OpContents a_a2hZ0)
_OpContentsList_Cons :: forall a_a2hZ0 k_a2ppx kk_a2ppy ks_a2ppz. a_a2hZ0 ~  'OpKind_Manager ( '(:) k_a2ppx ( '(:) kk_a2ppy ks_a2ppz)) => Review (OpContentsList a_a2hZ0) (OpContents ( 'OpKind_Manager ( '(:) k_a2ppx ('[] :: [OpKindManager]))), OpContentsList ( 'OpKind_Manager ( '(:) kk_a2ppy ks_a2ppz)))
_OperationResultStatus_Applied :: Prism' OperationResultStatus ()
_OperationResultStatus_Failed :: Prism' OperationResultStatus ()
_OperationResultStatus_Skipped :: Prism' OperationResultStatus ()
_OperationResultStatus_Backtracked :: Prism' OperationResultStatus ()
op_branch :: forall a_a2hZ8. Lens' (Op a_a2hZ8) BlockHash
op_contents :: forall a_a2hZ8 a_a2ppN. Lens (Op a_a2hZ8) (Op a_a2ppN) (OpContentsList a_a2hZ8) (OpContentsList a_a2ppN)
op_signature :: forall a_a2hZ8. Lens' (Op a_a2hZ8) (Maybe Signature)
operationWithMetadata_contents :: Lens' OperationWithMetadata (Seq OperationContents)
operationWithMetadata_signature :: Lens' OperationWithMetadata (Maybe Signature)
operation_branch :: Lens' Operation BlockHash
operation_chainId :: Lens' Operation ChainId
operation_contents :: Lens' Operation (Seq OperationContents)
operation_hash :: Lens' Operation OperationHash
operation_protocol :: Lens' Operation ProtocolHash
operation_signature :: Lens' Operation (Maybe Signature)
noContextOperation_contents :: Lens' NoContextOperation (Seq OperationContents)
noContextOperation_signature :: Lens' NoContextOperation (Maybe Signature)
pendingOp_branch :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) BlockHash
pendingOp_contents :: forall a_a2hZ6 a_a2pr6. Lens (PendingOp a_a2hZ6) (PendingOp a_a2pr6) (OpContentsList a_a2hZ6) (OpContentsList a_a2pr6)
pendingOp_hash :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) OperationHash
pendingOp_signature :: forall a_a2hZ6. Lens' (PendingOp a_a2hZ6) Signature
erroredOp_branch :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) BlockHash
erroredOp_contents :: forall a_a2hZ5 a_a2prw. Lens (ErroredOp a_a2hZ5) (ErroredOp a_a2prw) (OpContentsList a_a2hZ5) (OpContentsList a_a2prw)
erroredOp_error :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) Value
erroredOp_protocol :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) ProtocolHash
erroredOp_signature :: forall a_a2hZ5. Lens' (ErroredOp a_a2hZ5) Signature
activateMetadata_balanceUpdates :: Iso' ActivateMetadata (Seq BalanceUpdate)
doubleBakingEvidenceMetadata_balanceUpdates :: Iso' DoubleBakingEvidenceMetadata (Seq BalanceUpdate)
doubleEndorsementEvidenceMetadata_balanceUpdates :: Iso' DoubleEndorsementEvidenceMetadata (Seq BalanceUpdate)
endorsementMetadata_balanceUpdates :: Lens' EndorsementMetadata (Seq BalanceUpdate)
endorsementMetadata_delegate :: Lens' EndorsementMetadata PublicKeyHash
endorsementMetadata_slots :: Lens' EndorsementMetadata (Seq Word8)
inlinedEndorsement_branch :: Lens' InlinedEndorsement BlockHash
inlinedEndorsement_operations :: Lens' InlinedEndorsement InlinedEndorsementContents
inlinedEndorsement_signature :: Lens' InlinedEndorsement (Maybe Signature)
inlinedEndorsementContents_level :: Iso' InlinedEndorsementContents RawLevel
internalOperationContentsTransaction_amount :: Lens' InternalOperationContentsTransaction Tez
internalOperationContentsTransaction_destination :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_nonce :: Lens' InternalOperationContentsTransaction Word16
internalOperationContentsTransaction_parameters :: Lens' InternalOperationContentsTransaction (Maybe Expression)
internalOperationContentsTransaction_result :: Lens' InternalOperationContentsTransaction OperationResultTransaction
internalOperationContentsTransaction_source :: Lens' InternalOperationContentsTransaction ContractId
managerOperationMetadata_balanceUpdates :: forall a_a2hYX. Lens' (ManagerOperationMetadata a_a2hYX) (Seq BalanceUpdate)
managerOperationMetadata_internalOperationResults :: forall a_a2hYX. Lens' (ManagerOperationMetadata a_a2hYX) (Maybe (Seq InternalOperationResult))
managerOperationMetadata_operationResult :: forall a_a2hYX a_a2ptr. Lens (ManagerOperationMetadata a_a2hYX) (ManagerOperationMetadata a_a2ptr) (OperationResult a_a2hYX) (OperationResult a_a2ptr)
operationContentsActivateAccount_metadata :: Lens' OperationContentsActivateAccount ActivateMetadata
operationContentsActivateAccount_pkh :: Lens' OperationContentsActivateAccount Ed25519PublicKeyHash
operationContentsActivateAccount_secret :: Lens' OperationContentsActivateAccount (Base16ByteString ByteString)
operationContentsBallot_ballot :: Lens' OperationContentsBallot Ballot
operationContentsBallot_metadata :: Lens' OperationContentsBallot EmptyMetadata
operationContentsBallot_period :: Lens' OperationContentsBallot RawLevel
operationContentsBallot_proposal :: Lens' OperationContentsBallot ProtocolHash
operationContentsBallot_source :: Lens' OperationContentsBallot PublicKeyHash
operationContentsDelegation_counter :: Lens' OperationContentsDelegation Counter
operationContentsDelegation_delegate :: Lens' OperationContentsDelegation (Maybe PublicKeyHash)
operationContentsDelegation_fee :: Lens' OperationContentsDelegation Tez
operationContentsDelegation_gasLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_metadata :: Lens' OperationContentsDelegation (ManagerOperationMetadata OperationResultDelegation)
operationContentsDelegation_source :: Lens' OperationContentsDelegation ContractId
operationContentsDelegation_storageLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDoubleBakingEvidence_bh1 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_bh2 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_metadata :: Lens' OperationContentsDoubleBakingEvidence DoubleBakingEvidenceMetadata
operationContentsDoubleEndorsementEvidence_metadata :: Lens' OperationContentsDoubleEndorsementEvidence DoubleEndorsementEvidenceMetadata
operationContentsDoubleEndorsementEvidence_op1 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_op2 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsEndorsement_level :: Lens' OperationContentsEndorsement RawLevel
operationContentsEndorsement_metadata :: Lens' OperationContentsEndorsement EndorsementMetadata
operationContentsOrigination_balance :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_counter :: Lens' OperationContentsOrigination Counter
operationContentsOrigination_delegatable :: Lens' OperationContentsOrigination Bool
operationContentsOrigination_delegate :: Lens' OperationContentsOrigination (Maybe PublicKeyHash)
operationContentsOrigination_fee :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_gasLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_managerPubkey :: Lens' OperationContentsOrigination PublicKeyHash
operationContentsOrigination_metadata :: Lens' OperationContentsOrigination (ManagerOperationMetadata OperationResultOrigination)
operationContentsOrigination_script :: Lens' OperationContentsOrigination (Maybe ContractScript)
operationContentsOrigination_source :: Lens' OperationContentsOrigination ContractId
operationContentsOrigination_spendable :: Lens' OperationContentsOrigination Bool
operationContentsOrigination_storageLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsProposals_metadata :: Lens' OperationContentsProposals EmptyMetadata
operationContentsProposals_period :: Lens' OperationContentsProposals RawLevel
operationContentsProposals_proposals :: Lens' OperationContentsProposals (Seq ProtocolHash)
operationContentsProposals_source :: Lens' OperationContentsProposals PublicKeyHash
operationContentsReveal_counter :: Lens' OperationContentsReveal Counter
operationContentsReveal_fee :: Lens' OperationContentsReveal Tez
operationContentsReveal_gasLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_metadata :: Lens' OperationContentsReveal (ManagerOperationMetadata OperationResultReveal)
operationContentsReveal_publicKey :: Lens' OperationContentsReveal PublicKey
operationContentsReveal_source :: Lens' OperationContentsReveal ContractId
operationContentsReveal_storageLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsSeedNonceRevelation_level :: Lens' OperationContentsSeedNonceRevelation RawLevel
operationContentsSeedNonceRevelation_metadata :: Lens' OperationContentsSeedNonceRevelation SeedNonceRevelationMetadata
operationContentsSeedNonceRevelation_nonce :: Lens' OperationContentsSeedNonceRevelation (Base16ByteString ByteString)
operationContentsTransaction_amount :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_counter :: Lens' OperationContentsTransaction Counter
operationContentsTransaction_destination :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_fee :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_gasLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_metadata :: Lens' OperationContentsTransaction (ManagerOperationMetadata OperationResultTransaction)
operationContentsTransaction_parameters :: Lens' OperationContentsTransaction (Maybe Expression)
operationContentsTransaction_source :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_storageLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationResult_content :: forall a_a2hYW a_a2pC6. Lens (OperationResult a_a2hYW) (OperationResult a_a2pC6) (Maybe a_a2hYW) (Maybe a_a2pC6)
operationResult_errors :: forall a_a2hYW. Lens' (OperationResult a_a2hYW) (Maybe (Seq JsonRpcError))
operationResult_status :: forall a_a2hYW. Lens' (OperationResult a_a2hYW) OperationResultStatus
operationResultOrigination_balanceUpdates :: Lens' OperationResultOrigination (Seq BalanceUpdate)
operationResultOrigination_consumedGas :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_originatedContracts :: Lens' OperationResultOrigination (Seq ContractId)
operationResultOrigination_paidStorageSizeDiff :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_storageSize :: Lens' OperationResultOrigination TezosBigNum
operationResultTransaction_balanceUpdates :: Lens' OperationResultTransaction (Seq BalanceUpdate)
operationResultTransaction_consumedGas :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_originatedContracts :: Lens' OperationResultTransaction (Seq ContractId)
operationResultTransaction_paidStorageSizeDiff :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_storage :: Lens' OperationResultTransaction (Maybe Expression)
operationResultTransaction_storageSize :: Lens' OperationResultTransaction TezosBigNum
opContentsEndorsement_level :: Iso' OpContentsEndorsement RawLevel
opContentsManager_counter :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) Counter
opContentsManager_fee :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) Tez
opContentsManager_gasLimit :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) TezosPositiveBigNum
opContentsManager_operation :: forall op_a2hYY op_a2pDJ. Lens (OpContentsManager op_a2hYY) (OpContentsManager op_a2pDJ) op_a2hYY op_a2pDJ
opContentsManager_source :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) ContractId
opContentsManager_storageLimit :: forall op_a2hYY. Lens' (OpContentsManager op_a2hYY) TezosPositiveBigNum
opContentsTransaction_amount :: Lens' OpContentsTransaction Tez
opContentsTransaction_destination :: Lens' OpContentsTransaction ContractId
opContentsTransaction_parameters :: Lens' OpContentsTransaction (Maybe Expression)
opContentsOrigination_balance :: Lens' OpContentsOrigination Tez
opContentsOrigination_delegatable :: Lens' OpContentsOrigination Bool
opContentsOrigination_delegate :: Lens' OpContentsOrigination (Maybe PublicKeyHash)
opContentsOrigination_managerPubkey :: Lens' OpContentsOrigination PublicKeyHash
opContentsOrigination_script :: Lens' OpContentsOrigination (Maybe ContractScript)
opContentsOrigination_spendable :: Lens' OpContentsOrigination Bool
seedNonceRevelationMetadata_balanceUpdates :: Iso' SeedNonceRevelationMetadata (Seq BalanceUpdate)
mkOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Maybe Signature -> DSum OpsKindTag Op
mkSignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Signature -> DSum OpsKindTag Op
mkUnsignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> DSum OpsKindTag Op
mkProtoOp :: ProtocolHash -> DSum OpsKindTag Op -> DSum OpsKindTag ProtoOp
batchOperations :: NonEmpty (DSum BatchableOp OpContents) -> DSum OpsKindTag OpContentsList
consOpTags :: OpKindManagerTag k -> OpsKindTag ( 'OpKind_Manager ks) -> OpsKindTag ( 'OpKind_Manager (k : ks))
consOpContents :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager ks) -> OpContentsList ( 'OpKind_Manager (k : ks))
batchUnfoldrM :: forall m a. Monad m => (a -> m (DSum BatchableOp OpContents, Maybe a)) -> a -> m (DSum OpsKindTag OpContentsList)
data Mempool
Mempool :: [DSum OpsKindTag PendingOp] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ProtoOp)] -> Mempool
[_mempool_applied] :: Mempool -> [DSum OpsKindTag PendingOp]
[_mempool_refused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchRefused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchDelayed] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_unprocessed] :: Mempool -> [(OperationHash, DSum OpsKindTag ProtoOp)]
data Envelope
Envelope_BlockHeader :: !ChainId -> !BlockHeaderFull -> Envelope
Envelope_Endorsement :: !ChainId -> !Op  'OpKind_Endorsement -> Envelope

-- | Simple wrapper for adding a protocol hash to some other value.
--   
--   The Aeson instances are smart (too smart). If the underlying type is
--   not an object or an object with a conflicting key with the one added
--   by this type, the JSON encoding will be two-layered. Otherwise, the
--   JSON encoding will simply add an additional key for the protocol
--   information.
data WithProtocolHash a
WithProtocolHash :: !a -> !ProtocolHash -> WithProtocolHash a
[_withProtocolHash_value] :: WithProtocolHash a -> !a
[_withProtocolHash_protocolHash] :: WithProtocolHash a -> !ProtocolHash
data VeryBlockLike
VeryBlockLike :: !BlockHash -> !BlockHash -> !Fitness -> !RawLevel -> !UTCTime -> VeryBlockLike
[_veryBlockLike_hash] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_predecessor] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_fitness] :: VeryBlockLike -> !Fitness
[_veryBlockLike_level] :: VeryBlockLike -> !RawLevel
[_veryBlockLike_timestamp] :: VeryBlockLike -> !UTCTime
data MonitorBlock
MonitorBlock :: !BlockHash -> !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> MonitorBlock
[_monitorBlock_hash] :: MonitorBlock -> !BlockHash
[_monitorBlock_level] :: MonitorBlock -> !RawLevel
[_monitorBlock_proto] :: MonitorBlock -> !Word8
[_monitorBlock_predecessor] :: MonitorBlock -> !BlockHash
[_monitorBlock_timestamp] :: MonitorBlock -> !UTCTime
[_monitorBlock_validationPass] :: MonitorBlock -> !Word8
[_monitorBlock_operationsHash] :: MonitorBlock -> !OperationListListHash
[_monitorBlock_fitness] :: MonitorBlock -> !Fitness
[_monitorBlock_context] :: MonitorBlock -> !ContextHash

-- | "block_header_metadata": {
data BlockMetadata
BlockMetadata :: !ProtocolHash -> !ProtocolHash -> !TestChainStatus -> !Int -> !Int -> !Int -> !Seq MaxOperationListLength -> !PublicKeyHash -> !Level -> !VotingPeriodKind -> !Maybe CycleNonce -> !TezosPositiveBigNum -> !Seq PublicKeyHash -> !Seq BalanceUpdate -> BlockMetadata
[_blockMetadata_protocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_nextProtocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_testChainStatus] :: BlockMetadata -> !TestChainStatus
[_blockMetadata_maxOperationsTtl] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationDataLength] :: BlockMetadata -> !Int
[_blockMetadata_maxBlockHeaderLength] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationListLength] :: BlockMetadata -> !Seq MaxOperationListLength
[_blockMetadata_baker] :: BlockMetadata -> !PublicKeyHash
[_blockMetadata_level] :: BlockMetadata -> !Level
[_blockMetadata_votingPeriodKind] :: BlockMetadata -> !VotingPeriodKind
[_blockMetadata_nonceHash] :: BlockMetadata -> !Maybe CycleNonce
[_blockMetadata_consumedGas] :: BlockMetadata -> !TezosPositiveBigNum
[_blockMetadata_deactivated] :: BlockMetadata -> !Seq PublicKeyHash
[_blockMetadata_balanceUpdates] :: BlockMetadata -> !Seq BalanceUpdate

-- | "voting_period_kind": {
data VotingPeriodKind
VotingPeriodKind_Proposal :: VotingPeriodKind
VotingPeriodKind_TestingVote :: VotingPeriodKind
VotingPeriodKind_Testing :: VotingPeriodKind
VotingPeriodKind_PromotionVote :: VotingPeriodKind
data MaxOperationListLength
MaxOperationListLength :: !Int -> !Maybe Int -> MaxOperationListLength
[_maxOperationListLength_maxSize] :: MaxOperationListLength -> !Int
[_maxOperationListLength_maxOp] :: MaxOperationListLength -> !Maybe Int

-- | "description": "All the information about a block.",
data Block
Block :: !ProtocolHash -> !ChainId -> !BlockHash -> !BlockHeaderFull -> !BlockMetadata -> !Seq (Seq Operation) -> Block
[_block_protocol] :: Block -> !ProtocolHash
[_block_chainId] :: Block -> !ChainId
[_block_hash] :: Block -> !BlockHash
[_block_header] :: Block -> !BlockHeaderFull
[_block_metadata] :: Block -> !BlockMetadata
[_block_operations] :: Block -> !Seq (Seq Operation)
toBlockHeader :: Block -> BlockHeader
class HasBlockHeaderFull a
blockHeaderFull :: HasBlockHeaderFull a => Lens' a BlockHeaderFull
class HasBlockMetadata a
blockMetadata :: HasBlockMetadata a => Lens' a BlockMetadata
class HasChainId a
chainIdL :: HasChainId a => Lens' a ChainId
class HasProtocolHash a
protocolHash :: HasProtocolHash a => Lens' a ProtocolHash
class BlockLike b
hash :: BlockLike b => Lens' b BlockHash
predecessor :: BlockLike b => Lens' b BlockHash
level :: BlockLike b => Lens' b RawLevel
fitness :: BlockLike b => Lens' b Fitness
timestamp :: BlockLike b => Lens' b UTCTime
block_chainId :: Lens' Block ChainId
block_hash :: Lens' Block BlockHash
block_header :: Lens' Block BlockHeaderFull
block_metadata :: Lens' Block BlockMetadata
block_operations :: Lens' Block (Seq (Seq Operation))
block_protocol :: Lens' Block ProtocolHash
blockMetadata_baker :: Lens' BlockMetadata PublicKeyHash
blockMetadata_balanceUpdates :: Lens' BlockMetadata (Seq BalanceUpdate)
blockMetadata_consumedGas :: Lens' BlockMetadata TezosPositiveBigNum
blockMetadata_deactivated :: Lens' BlockMetadata (Seq PublicKeyHash)
blockMetadata_level :: Lens' BlockMetadata Level
blockMetadata_maxBlockHeaderLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationDataLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationListLength :: Lens' BlockMetadata (Seq MaxOperationListLength)
blockMetadata_maxOperationsTtl :: Lens' BlockMetadata Int
blockMetadata_nextProtocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_nonceHash :: Lens' BlockMetadata (Maybe CycleNonce)
blockMetadata_protocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_testChainStatus :: Lens' BlockMetadata TestChainStatus
blockMetadata_votingPeriodKind :: Lens' BlockMetadata VotingPeriodKind
maxOperationListLength_maxOp :: Lens' MaxOperationListLength (Maybe Int)
maxOperationListLength_maxSize :: Lens' MaxOperationListLength Int
monitorBlock_context :: Lens' MonitorBlock ContextHash
monitorBlock_fitness :: Lens' MonitorBlock Fitness
monitorBlock_hash :: Lens' MonitorBlock BlockHash
monitorBlock_level :: Lens' MonitorBlock RawLevel
monitorBlock_operationsHash :: Lens' MonitorBlock OperationListListHash
monitorBlock_predecessor :: Lens' MonitorBlock BlockHash
monitorBlock_proto :: Lens' MonitorBlock Word8
monitorBlock_timestamp :: Lens' MonitorBlock UTCTime
monitorBlock_validationPass :: Lens' MonitorBlock Word8
veryBlockLike_fitness :: Lens' VeryBlockLike Fitness
veryBlockLike_hash :: Lens' VeryBlockLike BlockHash
veryBlockLike_level :: Lens' VeryBlockLike RawLevel
veryBlockLike_predecessor :: Lens' VeryBlockLike BlockHash
veryBlockLike_timestamp :: Lens' VeryBlockLike UTCTime
withProtocolHash_protocolHash :: forall a_a3IEj. Lens' (WithProtocolHash a_a3IEj) ProtocolHash
withProtocolHash_value :: forall a_a3IEj a_a3KoW. Lens (WithProtocolHash a_a3IEj) (WithProtocolHash a_a3KoW) a_a3IEj a_a3KoW
mkVeryBlockLike :: BlockLike b => b -> VeryBlockLike
data ProtoInfo
ProtoInfo :: !Word8 -> !Word8 -> !Word8 -> !Int -> !Cycle -> !RawLevel -> !RawLevel -> !RawLevel -> !RawLevel -> !PeriodSequence -> !Word16 -> !TezosBigNum -> !TezosBigNum -> !TezosInt64 -> !Tez -> !Word16 -> !Tez -> !Tez -> !Int -> !Tez -> !Tez -> !Tez -> !Tez -> !Tez -> !TezosBigNum -> ProtoInfo
[_protoInfo_proofOfWorkNonceSize] :: ProtoInfo -> !Word8
[_protoInfo_nonceLength] :: ProtoInfo -> !Word8
[_protoInfo_maxRevelationsPerBlock] :: ProtoInfo -> !Word8
[_protoInfo_maxOperationDataLength] :: ProtoInfo -> !Int
[_protoInfo_preservedCycles] :: ProtoInfo -> !Cycle
[_protoInfo_blocksPerCycle] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerCommitment] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerRollSnapshot] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerVotingPeriod] :: ProtoInfo -> !RawLevel
[_protoInfo_timeBetweenBlocks] :: ProtoInfo -> !PeriodSequence
[_protoInfo_endorsersPerBlock] :: ProtoInfo -> !Word16
[_protoInfo_hardGasLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_hardGasLimitPerBlock] :: ProtoInfo -> !TezosBigNum
[_protoInfo_proofOfWorkThreshold] :: ProtoInfo -> !TezosInt64
[_protoInfo_tokensPerRoll] :: ProtoInfo -> !Tez
[_protoInfo_michelsonMaximumTypeSize] :: ProtoInfo -> !Word16
[_protoInfo_seedNonceRevelationTip] :: ProtoInfo -> !Tez
[_protoInfo_originationBurn] :: ProtoInfo -> !Tez
[_protoInfo_originationSize] :: ProtoInfo -> !Int
[_protoInfo_blockSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_endorsementSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_blockReward] :: ProtoInfo -> !Tez
[_protoInfo_endorsementReward] :: ProtoInfo -> !Tez
[_protoInfo_costPerByte] :: ProtoInfo -> !Tez
[_protoInfo_hardStorageLimitPerOperation] :: ProtoInfo -> !TezosBigNum
calcTimeBetweenBlocks :: ProtoInfo -> NominalDiffTime
protoInfo_blockReward :: Lens' ProtoInfo Tez
protoInfo_blockSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_blocksPerCommitment :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCycle :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerRollSnapshot :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerVotingPeriod :: Lens' ProtoInfo RawLevel
protoInfo_costPerByte :: Lens' ProtoInfo Tez
protoInfo_endorsementReward :: Lens' ProtoInfo Tez
protoInfo_endorsementSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_endorsersPerBlock :: Lens' ProtoInfo Word16
protoInfo_hardGasLimitPerBlock :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardStorageLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_maxOperationDataLength :: Lens' ProtoInfo Int
protoInfo_maxRevelationsPerBlock :: Lens' ProtoInfo Word8
protoInfo_michelsonMaximumTypeSize :: Lens' ProtoInfo Word16
protoInfo_nonceLength :: Lens' ProtoInfo Word8
protoInfo_originationBurn :: Lens' ProtoInfo Tez
protoInfo_originationSize :: Lens' ProtoInfo Int
protoInfo_preservedCycles :: Lens' ProtoInfo Cycle
protoInfo_proofOfWorkNonceSize :: Lens' ProtoInfo Word8
protoInfo_proofOfWorkThreshold :: Lens' ProtoInfo TezosInt64
protoInfo_seedNonceRevelationTip :: Lens' ProtoInfo Tez
protoInfo_timeBetweenBlocks :: Lens' ProtoInfo PeriodSequence
protoInfo_tokensPerRoll :: Lens' ProtoInfo Tez
predictFutureTimestamp :: BlockLike blk => ProtoInfo -> RawLevel -> blk -> UTCTime
data Ballots
Ballots :: Int -> Int -> Int -> Ballots
[_ballots_yay] :: Ballots -> Int
[_ballots_nay] :: Ballots -> Int
[_ballots_pass] :: Ballots -> Int
type VotingPeriod = Int32 " period: Voting_period_repr.t ;"
data VoterDelegate
VoterDelegate :: PublicKeyHash -> Int -> VoterDelegate
[_voterDelegate_pkh] :: VoterDelegate -> PublicKeyHash
[_voterDelegate_rolls] :: VoterDelegate -> Int
newtype ProposalVotes
ProposalVotes :: (ProtocolHash, Int) -> ProposalVotes
[unProposalVotes] :: ProposalVotes -> (ProtocolHash, Int)
ballots_nay :: Lens' Ballots Int
ballots_pass :: Lens' Ballots Int
ballots_yay :: Lens' Ballots Int
voterDelegate_pkh :: Lens' VoterDelegate PublicKeyHash
voterDelegate_rolls :: Lens' VoterDelegate Int

module Tezos.V004.NodeRPC.Class
class QueryChain repr
rChain :: QueryChain repr => repr ChainId
type family ChainType (repr :: * -> *) :: *
class QueryBlock (repr :: * -> *) where {
    type family BlockType repr;
    type family BlockHeaderType repr;
}
rHead :: QueryBlock repr => ChainType repr -> repr (BlockType repr)
rBlock :: QueryBlock repr => ChainType repr -> BlockHash -> repr (BlockType repr)
rBlockHeader :: QueryBlock repr => ChainType repr -> BlockHash -> repr (BlockHeaderType repr)
class QueryHistory repr
rBlocks :: QueryHistory repr => ChainId -> RawLevel -> Set BlockHash -> repr (Map BlockHash (Seq BlockHash))
rBlockPred :: QueryHistory repr => RawLevel -> ChainId -> BlockHash -> repr (BlockType repr)
rProtoConstants :: QueryHistory repr => ChainId -> BlockHash -> repr ProtoInfo
rContract :: QueryHistory repr => ContractId -> ChainType repr -> BlockHash -> repr Account
rBallots :: QueryHistory repr => ChainId -> BlockHash -> repr Ballots
rListings :: QueryHistory repr => ChainId -> BlockHash -> repr (Seq VoterDelegate)
rProposals :: QueryHistory repr => ChainId -> BlockHash -> repr (Seq ProposalVotes)
rCurrentProposal :: QueryHistory repr => ChainId -> BlockHash -> repr (Maybe ProtocolHash)
rCurrentQuorum :: QueryHistory repr => ChainId -> BlockHash -> repr Int
rBallot :: QueryHistory repr => ChainId -> BlockHash -> PublicKeyHash -> repr (Maybe Ballot)
rProposalVote :: QueryHistory repr => ChainId -> BlockHash -> PublicKeyHash -> repr (Set ProtocolHash)
rManagerKey :: QueryHistory repr => ContractId -> ChainId -> BlockHash -> repr ManagerKey
rBakingRights :: QueryHistory repr => Set (Either RawLevel Cycle) -> ChainId -> BlockHash -> repr (Seq BakingRights)
rBakingRightsFull :: QueryHistory repr => Set (Either RawLevel Cycle) -> Int -> ChainId -> BlockHash -> repr (Seq BakingRights)
rEndorsingRights :: QueryHistory repr => Set (Either RawLevel Cycle) -> ChainId -> BlockHash -> repr (Seq EndorsingRights)
rDelegateInfo :: QueryHistory repr => PublicKeyHash -> ChainId -> BlockHash -> repr DelegateInfo
rRunOperation :: QueryHistory repr => ChainId -> BlockHash -> DSum OpsKindTag Op -> repr OperationWithMetadata
class QueryNode repr
rConnections :: QueryNode repr => repr Word64
rNetworkStat :: QueryNode repr => repr NetworkStat
rCheckpoint :: QueryNode repr => ChainId -> repr Checkpoint
class MonitorHeads repr
rMonitorHeads :: MonitorHeads repr => ChainId -> repr MonitorBlock
class Injection repr
rInjectOperation :: Injection repr => DSum OpsKindTag Op -> repr OperationHash
data RpcQuery a
RpcQuery :: (ByteString -> Either String a) -> Encoding -> Method -> Text -> RpcQuery a
[_RpcQuery_decoder] :: RpcQuery a -> ByteString -> Either String a
[_RpcQuery_body] :: RpcQuery a -> Encoding
[_RpcQuery_method] :: RpcQuery a -> Method
[_RpcQuery_resource] :: RpcQuery a -> Text
plainNodeRequest :: FromJSON a => Method -> Text -> RpcQuery a
postNodeRequest :: (ToJSON b, FromJSON a) => b -> Text -> RpcQuery a
newtype PlainNode a
PlainNode :: RpcQuery a -> PlainNode a
newtype PlainNodeStream a
PlainNodeStream :: RpcQuery a -> PlainNodeStream a
chainAPI :: FromJSON a => Text -> ChainId -> RpcQuery a
chainAPI' :: FromJSON a => Text -> ChainTag -> RpcQuery a
blockAPI :: FromJSON a => Text -> ChainId -> BlockHash -> RpcQuery a
blockAPI' :: FromJSON a => Text -> ChainTag -> BlockHash -> RpcQuery a
chainBlockUrl :: ChainId -> BlockHash -> Text
chainBlockUrl' :: ChainTag -> BlockHash -> Text
dynamicParamRightsRangeToQueryArg :: Either RawLevel Cycle -> Text
instance GHC.Base.Functor Tezos.V004.NodeRPC.Class.RpcQuery
instance Tezos.V004.NodeRPC.Class.MonitorHeads Tezos.V004.NodeRPC.Class.PlainNodeStream
instance Tezos.V004.NodeRPC.Class.QueryChain Tezos.V004.NodeRPC.Class.RpcQuery
instance Tezos.V004.NodeRPC.Class.QueryBlock Tezos.V004.NodeRPC.Class.RpcQuery
instance Tezos.V004.NodeRPC.Class.QueryHistory Tezos.V004.NodeRPC.Class.RpcQuery
instance Tezos.V004.NodeRPC.Class.QueryNode Tezos.V004.NodeRPC.Class.RpcQuery
instance Tezos.V004.NodeRPC.Class.Injection Tezos.V004.NodeRPC.Class.RpcQuery

module Tezos.V004.Lenses
level_votingPeriodPosition :: Lens' Level RawLevel
level_votingPeriod :: Lens' Level RawLevel
level_levelPosition :: Lens' Level RawLevel
level_level :: Lens' Level RawLevel
level_expectedCommitment :: Lens' Level Bool
level_cyclePosition :: Lens' Level RawLevel
level_cycle :: Lens' Level Cycle
freezerUpdate_delegate :: Lens' FreezerUpdate PublicKeyHash
freezerUpdate_cycle :: Lens' FreezerUpdate Cycle
freezerUpdate_change :: Lens' FreezerUpdate TezDelta
freezerUpdate_category :: Lens' FreezerUpdate FreezerCategory
contractUpdate_contract :: Lens' ContractUpdate ContractId
contractUpdate_change :: Lens' ContractUpdate TezDelta
contractScript_storage :: Lens' ContractScript Expression
contractScript_code :: Lens' ContractScript Expression
activateMetadata_balanceUpdates :: Iso' ActivateMetadata (Seq BalanceUpdate)

module Tezos.V005.BalanceUpdate

module Tezos.V005.BlockHeader

module Tezos.V005.Checkpoint

module Tezos.V005.Fitness

module Tezos.V005.Ledger

module Tezos.V005.Lenses

module Tezos.V005.Level

module Tezos.V005.Micheline
data MichelinePrimAp
MichelinePrimAp :: !MichelinePrimitive -> !Seq Expression -> !Seq Annotation -> MichelinePrimAp
[_michelinePrimAp_prim] :: MichelinePrimAp -> !MichelinePrimitive
[_michelinePrimAp_args] :: MichelinePrimAp -> !Seq Expression
[_michelinePrimAps_annots] :: MichelinePrimAp -> !Seq Annotation
data Annotation
Annotation_Type :: !Text -> Annotation
Annotation_Variable :: !Text -> Annotation
Annotation_Field :: !Text -> Annotation
data Expression

-- | Micheline represents both nats and ints using the same decimal format.
--   The Haskell Integer type spans all possible values that the final
--   (Michelson) type could end up being, and then some, so we use
--   (StringEncode Integer) to represent all integral values here for easy
--   JSON encoding compatibility.
Expression_Int :: !TezosBigNum -> Expression
Expression_String :: !Text -> Expression
Expression_Bytes :: !Base16ByteString ByteString -> Expression
Expression_Seq :: !Seq Expression -> Expression
Expression_Prim :: !MichelinePrimAp -> Expression
newtype MichelinePrimitive
MichelinePrimitive :: Text -> MichelinePrimitive
michelineV1Primitive :: Seq Text
michelsonV1EnumV005 :: Seq Text
michelsonV005ChangesEnum :: Seq Text
annotFromText :: MonadFail m => Text -> m Annotation
annotToText :: Annotation -> Text
putAnnotationSeq :: Seq Annotation -> Const Builder ()
getAnnotationSeq :: Get (Seq Annotation)
michelsonV1Enum :: Seq Text
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Micheline.MichelinePrimAp
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Micheline.Annotation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Micheline.Annotation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Micheline.Expression
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Micheline.Expression
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Micheline.Expression
instance GHC.Show.Show Tezos.V005.Micheline.Expression
instance GHC.Classes.Ord Tezos.V005.Micheline.Expression
instance GHC.Classes.Eq Tezos.V005.Micheline.Expression
instance GHC.Show.Show Tezos.V005.Micheline.MichelinePrimAp
instance GHC.Classes.Ord Tezos.V005.Micheline.MichelinePrimAp
instance GHC.Classes.Eq Tezos.V005.Micheline.MichelinePrimAp
instance GHC.Show.Show Tezos.V005.Micheline.Annotation
instance GHC.Classes.Ord Tezos.V005.Micheline.Annotation
instance GHC.Classes.Eq Tezos.V005.Micheline.Annotation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Micheline.MichelinePrimitive
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Micheline.MichelinePrimitive
instance GHC.Show.Show Tezos.V005.Micheline.MichelinePrimitive
instance GHC.Classes.Ord Tezos.V005.Micheline.MichelinePrimitive
instance GHC.Classes.Eq Tezos.V005.Micheline.MichelinePrimitive
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Micheline.MichelinePrimAp
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Micheline.MichelinePrimitive

module Tezos.V005.Contract

-- | "scripted.contracts": {
data ContractScript
ContractScript :: Expression -> Expression -> ContractScript
[_contractScript_code] :: ContractScript -> Expression
[_contractScript_storage] :: ContractScript -> Expression
data ContractId
Implicit :: !PublicKeyHash -> ContractId
Originated :: !ContractHash -> ContractId
contractIdConstructorDecoders :: [TryDecodeBase58 ContractId]
tryReadContractId :: ByteString -> Either HashBase58Error ContractId
tryReadContractIdText :: Text -> Either HashBase58Error ContractId
toContractIdText :: ContractId -> Text
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Contract.ContractScript
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Contract.ContractScript
instance GHC.Show.Show Tezos.V005.Contract.ContractScript
instance GHC.Classes.Ord Tezos.V005.Contract.ContractScript
instance GHC.Classes.Eq Tezos.V005.Contract.ContractScript
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Contract.ContractScript

module Tezos.V005.Michelson
pattern Prim :: Text -> Seq Expression -> Expression
pattern Prim0 :: Text -> Expression
pattern Prim1 :: Text -> Expression -> Expression
pattern Prim2 :: Text -> Expression -> Expression -> Expression
pattern Pair :: Expression -> Expression -> Expression
pattern Left :: Expression -> Expression
pattern Right :: Expression -> Expression
pattern Int :: Integral a => a -> Expression
pattern Bytes :: ByteString -> Expression
pattern AsBytes :: TezosBinary a => a -> Expression
class FromMicheline a
fromMicheline :: FromMicheline a => Expression -> Either String a
mapEitherToString :: Show a => Either a b -> Either String b
class ToMicheline a
toMicheline :: ToMicheline a => a -> Expression
instance Tezos.V005.Michelson.ToMicheline Tezos.V005.Micheline.Expression
instance Tezos.V005.Michelson.ToMicheline Tezos.V004.Contract.ContractId
instance Tezos.V005.Michelson.FromMicheline Tezos.V005.Micheline.Expression
instance Tezos.V005.Michelson.FromMicheline Tezos.V004.Contract.ContractId

module Tezos.V005.PeriodSequence

module Tezos.V005.PublicKey

module Tezos.V005.PublicKeyHash

module Tezos.V005.Signature

module Tezos.V005.TestChainStatus

module Tezos.V005.Tez

module Tezos.V005.Account
type ManagerKey = Maybe PublicKey
data Account
Account :: !Maybe PublicKeyHash -> !Tez -> !Maybe ContractScript -> !Maybe Counter -> Account
[_account_delegate] :: Account -> !Maybe PublicKeyHash
[_account_balance] :: Account -> !Tez
[_account_script] :: Account -> !Maybe ContractScript
[_account_counter] :: Account -> !Maybe Counter
account_balance :: Lens' Account Tez
account_counter :: Lens' Account (Maybe Counter)
account_delegate :: Lens' Account (Maybe PublicKeyHash)
account_script :: Lens' Account (Maybe ContractScript)
data DelegateInfo
DelegateInfo :: !Tez -> !Tez -> !Seq FrozenBalanceByCycle -> !Tez -> !Seq ContractId -> !Tez -> !Bool -> !Cycle -> DelegateInfo
[_delegateInfo_balance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalanceByCycle] :: DelegateInfo -> !Seq FrozenBalanceByCycle
[_delegateInfo_stakingBalance] :: DelegateInfo -> !Tez
[_delegateInfo_delegatedContracts] :: DelegateInfo -> !Seq ContractId
[_delegateInfo_delegatedBalance] :: DelegateInfo -> !Tez
[_delegateInfo_deactivated] :: DelegateInfo -> !Bool
[_delegateInfo_gracePeriod] :: DelegateInfo -> !Cycle
data FrozenBalanceByCycle
FrozenBalanceByCycle :: !Cycle -> !Tez -> !Tez -> !Tez -> FrozenBalanceByCycle
[_frozenBalanceByCycle_cycle] :: FrozenBalanceByCycle -> !Cycle
[_frozenBalanceByCycle_deposit] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_fees] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_rewards] :: FrozenBalanceByCycle -> !Tez
data EndorsingRights
EndorsingRights :: !RawLevel -> !PublicKeyHash -> !Seq Word8 -> !Maybe UTCTime -> EndorsingRights
[_endorsingRights_level] :: EndorsingRights -> !RawLevel
[_endorsingRights_delegate] :: EndorsingRights -> !PublicKeyHash
[_endorsingRights_slots] :: EndorsingRights -> !Seq Word8
[_endorsingRights_estimatedTime] :: EndorsingRights -> !Maybe UTCTime
data BakingRights
BakingRights :: !RawLevel -> !PublicKeyHash -> !Priority -> !Maybe UTCTime -> BakingRights
[_bakingRights_level] :: BakingRights -> !RawLevel
[_bakingRights_delegate] :: BakingRights -> !PublicKeyHash
[_bakingRights_priority] :: BakingRights -> !Priority
[_bakingRights_estimatedTime] :: BakingRights -> !Maybe UTCTime
data AccountDelegate
AccountDelegate :: !Bool -> !Maybe PublicKeyHash -> AccountDelegate
[_accountDelegate_setable] :: AccountDelegate -> !Bool
[_accountDelegate_value] :: AccountDelegate -> !Maybe PublicKeyHash

-- | A special nonce that must increment with each successive operation
--   signed and submitted by a particular account.
type Counter = TezosPositiveBigNum
account_manager :: Lens' Account PublicKeyHash
account_spendable :: Lens' Account Bool
accountDelegate_setable :: Lens' AccountDelegate Bool
accountDelegate_value :: Lens' AccountDelegate (Maybe PublicKeyHash)
bakingRights_delegate :: Lens' BakingRights PublicKeyHash
bakingRights_estimatedTime :: Lens' BakingRights (Maybe UTCTime)
bakingRights_level :: Lens' BakingRights RawLevel
bakingRights_priority :: Lens' BakingRights Priority
delegateInfo_balance :: Lens' DelegateInfo Tez
delegateInfo_deactivated :: Lens' DelegateInfo Bool
delegateInfo_delegatedBalance :: Lens' DelegateInfo Tez
delegateInfo_delegatedContracts :: Lens' DelegateInfo (Seq ContractId)
delegateInfo_frozenBalance :: Lens' DelegateInfo Tez
delegateInfo_frozenBalanceByCycle :: Lens' DelegateInfo (Seq FrozenBalanceByCycle)
delegateInfo_gracePeriod :: Lens' DelegateInfo Cycle
delegateInfo_stakingBalance :: Lens' DelegateInfo Tez
endorsingRights_delegate :: Lens' EndorsingRights PublicKeyHash
endorsingRights_estimatedTime :: Lens' EndorsingRights (Maybe UTCTime)
endorsingRights_level :: Lens' EndorsingRights RawLevel
endorsingRights_slots :: Lens' EndorsingRights (Seq Word8)
frozenBalanceByCycle_cycle :: Lens' FrozenBalanceByCycle Cycle
frozenBalanceByCycle_deposit :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_fees :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_rewards :: Lens' FrozenBalanceByCycle Tez
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Account.Account
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Account.Account
instance GHC.Classes.Ord Tezos.V005.Account.Account
instance GHC.Classes.Eq Tezos.V005.Account.Account
instance GHC.Show.Show Tezos.V005.Account.Account

module Tezos.V005.Operation

-- | "operation": {
data Operation
Operation :: !ProtocolHash -> !ChainId -> !OperationHash -> !BlockHash -> !Seq OperationContents -> !Maybe Signature -> Operation
[_operation_protocol] :: Operation -> !ProtocolHash
[_operation_chainId] :: Operation -> !ChainId
[_operation_hash] :: Operation -> !OperationHash
[_operation_branch] :: Operation -> !BlockHash
[_operation_contents] :: Operation -> !Seq OperationContents
[_operation_signature] :: Operation -> !Maybe Signature
data OperationWithMetadata
OperationWithMetadata :: !Seq OperationContents -> !Maybe Signature -> OperationWithMetadata
[_operationWithMetadata_contents] :: OperationWithMetadata -> !Seq OperationContents
[_operationWithMetadata_signature] :: OperationWithMetadata -> !Maybe Signature
data OpKind
OpKind_SeedNonceRevelation :: OpKind
OpKind_DoubleEndorsementEvidence :: OpKind
OpKind_DoubleBakingEvidence :: OpKind
OpKind_ActivateAccount :: OpKind
OpKind_Endorsement :: OpKind
OpKind_Proposals :: OpKind
OpKind_Ballot :: OpKind
OpKind_Manager :: [OpKindManager] -> OpKind
data OpKindTag opKind
[OpKindTag_Endorsement] :: OpKindTag  'OpKind_Endorsement
[OpKindTag_SeedNonceRevelation] :: OpKindTag  'OpKind_SeedNonceRevelation
[OpKindTag_DoubleEndorsementEvidence] :: OpKindTag  'OpKind_DoubleEndorsementEvidence
[OpKindTag_DoubleBakingEvidence] :: OpKindTag  'OpKind_DoubleBakingEvidence
[OpKindTag_ActivateAccount] :: OpKindTag  'OpKind_ActivateAccount
[OpKindTag_Proposals] :: OpKindTag  'OpKind_Proposals
[OpKindTag_Ballot] :: OpKindTag  'OpKind_Ballot
[OpKindTag_Manager] :: OpKindManagerTag opKindManager -> OpKindTag ( 'OpKind_Manager (opKindManager : '[]))
data OpsKindTag opKinds
[OpsKindTag_Single] :: OpKindTag k -> OpsKindTag k
[OpsKindTag_Cons] :: OpKindTag ( 'OpKind_Manager (k : '[])) -> OpsKindTag ( 'OpKind_Manager (kk : ks)) -> OpsKindTag ( 'OpKind_Manager (k : (kk : ks)))
data OpKindManager
OpKindManager_Reveal :: OpKindManager
OpKindManager_Transaction :: OpKindManager
OpKindManager_Origination :: OpKindManager
OpKindManager_Delegation :: OpKindManager
data OpKindManagerTag opKindManager
[OpKindManagerTag_Reveal] :: OpKindManagerTag  'OpKindManager_Reveal
[OpKindManagerTag_Transaction] :: OpKindManagerTag  'OpKindManager_Transaction
[OpKindManagerTag_Origination] :: OpKindManagerTag  'OpKindManager_Origination
[OpKindManagerTag_Delegation] :: OpKindManagerTag  'OpKindManager_Delegation
data BatchableOp k
[BatchableOp] :: OpKindManagerTag k -> BatchableOp ( 'OpKind_Manager '[k])
data Op (a :: OpKind)
Op :: !BlockHash -> !OpContentsList a -> !Maybe Signature -> Op
[_op_branch] :: Op -> !BlockHash
[_op_contents] :: Op -> !OpContentsList a
[_op_signature] :: Op -> !Maybe Signature
data OpWithChain a
OpWithChain :: !a -> !ChainId -> OpWithChain a
[_opWithChain_operation] :: OpWithChain a -> !a
[_opWithChain_chain_id] :: OpWithChain a -> !ChainId

-- | next_operation: { "protocol":
--   <a>Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd</a>, "branch":
--   $block_hash, "contents": [ $operation.alpha.contents ... ],
--   "signature": $Signature }
--   
--   Like Op but with a protocol hash added. Used in preapply.
data ProtoOp (a :: OpKind)
ProtoOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Maybe Signature -> ProtoOp
[_protoOp_protocol] :: ProtoOp -> !ProtocolHash
[_protoOp_branch] :: ProtoOp -> !BlockHash
[_protoOp_contents] :: ProtoOp -> !OpContentsList a
[_protoOp_signature] :: ProtoOp -> !Maybe Signature
stripOpProtocol :: ProtoOp a -> Op a

-- | Like Op but with its own hash. Used in the mempool.
data PendingOp (a :: OpKind)
PendingOp :: !OperationHash -> !BlockHash -> !OpContentsList a -> !Signature -> PendingOp
[_pendingOp_hash] :: PendingOp -> !OperationHash
[_pendingOp_branch] :: PendingOp -> !BlockHash
[_pendingOp_contents] :: PendingOp -> !OpContentsList a
[_pendingOp_signature] :: PendingOp -> !Signature

-- | This is also used in the mempool for operations that will not be
--   applied for one reason or another.
data ErroredOp (a :: OpKind)
ErroredOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Signature -> !Value -> ErroredOp
[_erroredOp_protocol] :: ErroredOp -> !ProtocolHash
[_erroredOp_branch] :: ErroredOp -> !BlockHash
[_erroredOp_contents] :: ErroredOp -> !OpContentsList a
[_erroredOp_signature] :: ErroredOp -> !Signature
[_erroredOp_error] :: ErroredOp -> !Value
data EmptyMetadata
EmptyMetadata :: EmptyMetadata

-- | operation.alpha.operation_with_metadata { "contents": [
--   $operation.alpha.operation_contents_and_result ... ], "signature"?:
--   $Signature } || { "contents": [ $operation.alpha.contents ... ],
--   "signature"?: $Signature }
--   
--   This is the return value of the run_operation RPC.
data NoContextOperation
NoContextOperation :: !Seq OperationContents -> !Maybe Signature -> NoContextOperation
[_noContextOperation_contents] :: NoContextOperation -> !Seq OperationContents
[_noContextOperation_signature] :: NoContextOperation -> !Maybe Signature

-- | "operation.alpha.operation_contents_and_result": {
data OperationContents
OperationContents_Endorsement :: !OperationContentsEndorsement -> OperationContents
OperationContents_SeedNonceRevelation :: !OperationContentsSeedNonceRevelation -> OperationContents
OperationContents_DoubleEndorsementEvidence :: !OperationContentsDoubleEndorsementEvidence -> OperationContents
OperationContents_DoubleBakingEvidence :: !OperationContentsDoubleBakingEvidence -> OperationContents
OperationContents_ActivateAccount :: !OperationContentsActivateAccount -> OperationContents
OperationContents_Proposals :: !OperationContentsProposals -> OperationContents
OperationContents_Ballot :: !OperationContentsBallot -> OperationContents
OperationContents_Reveal :: !OperationContentsReveal -> OperationContents
OperationContents_Transaction :: !OperationContentsTransaction -> OperationContents
OperationContents_Origination :: !OperationContentsOrigination -> OperationContents
OperationContents_Delegation :: !OperationContentsDelegation -> OperationContents
data OpContentsList (a :: OpKind)
[OpContentsList_Single] :: OpContents a -> OpContentsList a
[OpContentsList_Cons] :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager (kk : ks)) -> OpContentsList ( 'OpKind_Manager (k : (kk : ks)))
data OpContents (a :: OpKind)
[OpContents_Endorsement] :: !OpContentsEndorsement -> OpContents  'OpKind_Endorsement
[OpContents_SeedNonceRevelation] :: !OpContentsSeedNonceRevelation -> OpContents  'OpKind_SeedNonceRevelation
[OpContents_DoubleEndorsementEvidence] :: !OpContentsDoubleEndorsementEvidence -> OpContents  'OpKind_DoubleEndorsementEvidence
[OpContents_DoubleBakingEvidence] :: !OpContentsDoubleBakingEvidence -> OpContents  'OpKind_DoubleBakingEvidence
[OpContents_ActivateAccount] :: !OpContentsActivateAccount -> OpContents  'OpKind_ActivateAccount
[OpContents_Proposals] :: !OpContentsProposals -> OpContents  'OpKind_Proposals
[OpContents_Ballot] :: !OpContentsBallot -> OpContents  'OpKind_Ballot
[OpContents_Reveal] :: !OpContentsManager OpContentsReveal -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Reveal])
[OpContents_Transaction] :: !OpContentsManager OpContentsTransaction -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Transaction])
[OpContents_Origination] :: !OpContentsManager OpContentsOrigination -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Origination])
[OpContents_Delegation] :: !OpContentsManager OpContentsDelegation -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Delegation])
data OpContentsEndorsement
OpContentsEndorsement :: !RawLevel -> OpContentsEndorsement
[_opContentsEndorsement_level] :: OpContentsEndorsement -> !RawLevel
data OpContentsSeedNonceRevelation
OpContentsSeedNonceRevelation :: !RawLevel -> !Base16ByteString ByteString -> OpContentsSeedNonceRevelation
[_opContentsSeedNonceRevelation_level] :: OpContentsSeedNonceRevelation -> !RawLevel
[_opContentsSeedNonceRevelation_nonce] :: OpContentsSeedNonceRevelation -> !Base16ByteString ByteString
data OpContentsDoubleEndorsementEvidence
OpContentsDoubleEndorsementEvidence :: !InlinedEndorsement -> !InlinedEndorsement -> OpContentsDoubleEndorsementEvidence
[_opContentsDoubleEndorsementEvidence_op1] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
[_opContentsDoubleEndorsementEvidence_op2] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
data OpContentsDoubleBakingEvidence
OpContentsDoubleBakingEvidence :: !BlockHeaderFull -> !BlockHeaderFull -> OpContentsDoubleBakingEvidence
[_opContentsDoubleBakingEvidence_bh1] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
[_opContentsDoubleBakingEvidence_bh2] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
data OpContentsActivateAccount
OpContentsActivateAccount :: !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OpContentsActivateAccount
[_opContentsActivateAccount_pkh] :: OpContentsActivateAccount -> !Ed25519PublicKeyHash
[_opContentsActivateAccount_secret] :: OpContentsActivateAccount -> !Base16ByteString ByteString
data OpContentsProposals
OpContentsProposals :: !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OpContentsProposals
[_opContentsProposals_source] :: OpContentsProposals -> !PublicKeyHash
[_opContentsProposals_period] :: OpContentsProposals -> !RawLevel
[_opContentsProposals_proposals] :: OpContentsProposals -> !Seq ProtocolHash
data OpContentsBallot
OpContentsBallot :: !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OpContentsBallot
[_opContentsBallot_source] :: OpContentsBallot -> !PublicKeyHash
[_opContentsBallot_period] :: OpContentsBallot -> !RawLevel
[_opContentsBallot_proposal] :: OpContentsBallot -> !ProtocolHash
[_opContentsBallot_ballot] :: OpContentsBallot -> !Ballot
data OpContentsManager op
OpContentsManager :: !PublicKeyHash -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !op -> OpContentsManager op
[_opContentsManager_source] :: OpContentsManager op -> !PublicKeyHash
[_opContentsManager_fee] :: OpContentsManager op -> !Tez
[_opContentsManager_counter] :: OpContentsManager op -> !Counter
[_opContentsManager_gasLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_storageLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_operation] :: OpContentsManager op -> !op
data OpContentsReveal
OpContentsReveal :: !PublicKey -> OpContentsReveal
[_opContentsReveal_publicKey] :: OpContentsReveal -> !PublicKey
newtype EntrypointName
EntrypointName :: ByteString -> EntrypointName
[unEntrypointName] :: EntrypointName -> ByteString
entrypointName :: MonadFail m => ByteString -> m EntrypointName
data Entrypoint
EntrypointDefault :: Entrypoint
EntrypointRoot :: Entrypoint
EntrypointDo :: Entrypoint
EntrypointSetDelegate :: Entrypoint
EntrypointRemoveDelegate :: Entrypoint
EntrypointOther :: !EntrypointName -> Entrypoint
data OpParameters
OpParameters :: !Entrypoint -> !Expression -> OpParameters
[_opParameters_entrypoint] :: OpParameters -> !Entrypoint
[_opParameters_value] :: OpParameters -> !Expression
data OpContentsTransaction
OpContentsTransaction :: !Tez -> !ContractId -> !Maybe OpParameters -> OpContentsTransaction
[_opContentsTransaction_amount] :: OpContentsTransaction -> !Tez
[_opContentsTransaction_destination] :: OpContentsTransaction -> !ContractId
[_opContentsTransaction_parameters] :: OpContentsTransaction -> !Maybe OpParameters
data OpContentsOrigination
OpContentsOrigination :: !Tez -> !Maybe PublicKeyHash -> !ContractScript -> OpContentsOrigination
[_opContentsOrigination_balance] :: OpContentsOrigination -> !Tez
[_opContentsOrigination_delegate] :: OpContentsOrigination -> !Maybe PublicKeyHash
[_opContentsOrigination_script] :: OpContentsOrigination -> !ContractScript
data OpContentsDelegation
OpContentsDelegation :: !Maybe PublicKeyHash -> OpContentsDelegation
[_opContentsDelegation_delegate] :: OpContentsDelegation -> !Maybe PublicKeyHash

-- | "kind": { "type": "string", "enum": [ "endorsement" ] },
data OperationContentsEndorsement
OperationContentsEndorsement :: EndorsementMetadata -> RawLevel -> OperationContentsEndorsement
[_operationContentsEndorsement_metadata] :: OperationContentsEndorsement -> EndorsementMetadata
[_operationContentsEndorsement_level] :: OperationContentsEndorsement -> RawLevel
data EndorsementMetadata
EndorsementMetadata :: !Seq BalanceUpdate -> !PublicKeyHash -> !Seq Word8 -> EndorsementMetadata
[_endorsementMetadata_balanceUpdates] :: EndorsementMetadata -> !Seq BalanceUpdate
[_endorsementMetadata_delegate] :: EndorsementMetadata -> !PublicKeyHash
[_endorsementMetadata_slots] :: EndorsementMetadata -> !Seq Word8

-- | "kind": { "type": "string", "enum": [ "seed_nonce_revelation" ] },
data OperationContentsSeedNonceRevelation
OperationContentsSeedNonceRevelation :: SeedNonceRevelationMetadata -> RawLevel -> !Base16ByteString ByteString -> OperationContentsSeedNonceRevelation
[_operationContentsSeedNonceRevelation_metadata] :: OperationContentsSeedNonceRevelation -> SeedNonceRevelationMetadata
[_operationContentsSeedNonceRevelation_level] :: OperationContentsSeedNonceRevelation -> RawLevel
[_operationContentsSeedNonceRevelation_nonce] :: OperationContentsSeedNonceRevelation -> !Base16ByteString ByteString
data SeedNonceRevelationMetadata
SeedNonceRevelationMetadata :: !Seq BalanceUpdate -> SeedNonceRevelationMetadata
[_seedNonceRevelationMetadata_balanceUpdates] :: SeedNonceRevelationMetadata -> !Seq BalanceUpdate
data InlinedEndorsement
InlinedEndorsement :: !BlockHash -> !InlinedEndorsementContents -> !Maybe Signature -> InlinedEndorsement
[_inlinedEndorsement_branch] :: InlinedEndorsement -> !BlockHash
[_inlinedEndorsement_operations] :: InlinedEndorsement -> !InlinedEndorsementContents
[_inlinedEndorsement_signature] :: InlinedEndorsement -> !Maybe Signature
data InlinedEndorsementContents
InlinedEndorsementContents :: RawLevel -> InlinedEndorsementContents
[_inlinedEndorsementContents_level] :: InlinedEndorsementContents -> RawLevel

-- | "kind": { "type": "string", "enum": [ "double_endorsement_evidence" ]
--   },
data OperationContentsDoubleEndorsementEvidence
OperationContentsDoubleEndorsementEvidence :: DoubleEndorsementEvidenceMetadata -> InlinedEndorsement -> InlinedEndorsement -> OperationContentsDoubleEndorsementEvidence
[_operationContentsDoubleEndorsementEvidence_metadata] :: OperationContentsDoubleEndorsementEvidence -> DoubleEndorsementEvidenceMetadata
[_operationContentsDoubleEndorsementEvidence_op1] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
[_operationContentsDoubleEndorsementEvidence_op2] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
data DoubleEndorsementEvidenceMetadata
DoubleEndorsementEvidenceMetadata :: !Seq BalanceUpdate -> DoubleEndorsementEvidenceMetadata
[_doubleEndorsementEvidenceMetadata_balanceUpdates] :: DoubleEndorsementEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_baking_evidence" ] },
data OperationContentsDoubleBakingEvidence
OperationContentsDoubleBakingEvidence :: !DoubleBakingEvidenceMetadata -> !BlockHeaderFull -> !BlockHeaderFull -> OperationContentsDoubleBakingEvidence
[_operationContentsDoubleBakingEvidence_metadata] :: OperationContentsDoubleBakingEvidence -> !DoubleBakingEvidenceMetadata
[_operationContentsDoubleBakingEvidence_bh1] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
[_operationContentsDoubleBakingEvidence_bh2] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
data DoubleBakingEvidenceMetadata
DoubleBakingEvidenceMetadata :: !Seq BalanceUpdate -> DoubleBakingEvidenceMetadata
[_doubleBakingEvidenceMetadata_balanceUpdates] :: DoubleBakingEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "activate_account" ] },
data OperationContentsActivateAccount
OperationContentsActivateAccount :: !ActivateMetadata -> !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OperationContentsActivateAccount
[_operationContentsActivateAccount_metadata] :: OperationContentsActivateAccount -> !ActivateMetadata
[_operationContentsActivateAccount_pkh] :: OperationContentsActivateAccount -> !Ed25519PublicKeyHash
[_operationContentsActivateAccount_secret] :: OperationContentsActivateAccount -> !Base16ByteString ByteString
data ActivateMetadata
ActivateMetadata :: !Seq BalanceUpdate -> ActivateMetadata
[_activateMetadata_balanceUpdates] :: ActivateMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "proposals" ] },
data OperationContentsProposals
OperationContentsProposals :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OperationContentsProposals
[_operationContentsProposals_metadata] :: OperationContentsProposals -> !EmptyMetadata
[_operationContentsProposals_source] :: OperationContentsProposals -> !PublicKeyHash
[_operationContentsProposals_period] :: OperationContentsProposals -> !RawLevel
[_operationContentsProposals_proposals] :: OperationContentsProposals -> !Seq ProtocolHash

-- | "ballot": { "type": "string", "enum": [ "nay", "yay", "pass" ] },
data Ballot
Ballot_Nay :: Ballot
Ballot_Yay :: Ballot
Ballot_Pass :: Ballot

-- | "kind": { "type": "string", "enum": [ "ballot" ] },
data OperationContentsBallot
OperationContentsBallot :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OperationContentsBallot
[_operationContentsBallot_metadata] :: OperationContentsBallot -> !EmptyMetadata
[_operationContentsBallot_source] :: OperationContentsBallot -> !PublicKeyHash
[_operationContentsBallot_period] :: OperationContentsBallot -> !RawLevel
[_operationContentsBallot_proposal] :: OperationContentsBallot -> !ProtocolHash
[_operationContentsBallot_ballot] :: OperationContentsBallot -> !Ballot
data ManagerOperationMetadata a
ManagerOperationMetadata :: !Seq BalanceUpdate -> !OperationResult a -> !Maybe (Seq InternalOperationResult) -> ManagerOperationMetadata a
[_managerOperationMetadata_balanceUpdates] :: ManagerOperationMetadata a -> !Seq BalanceUpdate
[_managerOperationMetadata_operationResult] :: ManagerOperationMetadata a -> !OperationResult a
[_managerOperationMetadata_internalOperationResults] :: ManagerOperationMetadata a -> !Maybe (Seq InternalOperationResult)
data InternalOperationResult
InternalOperationResult_Reveal :: !InternalOperationContentsReveal -> InternalOperationResult
InternalOperationResult_Transaction :: !InternalOperationContentsTransaction -> InternalOperationResult
InternalOperationResult_Origination :: !InternalOperationContentsOrigination -> InternalOperationResult
InternalOperationResult_Delegation :: !InternalOperationContentsDelegation -> InternalOperationResult
data InternalOperationContentsReveal
InternalOperationContentsReveal :: InternalOperationContentsReveal
data InternalOperationContentsTransaction
InternalOperationContentsTransaction :: !ContractId -> !Word16 -> !Tez -> !ContractId -> !Maybe OpParameters -> !OperationResultTransaction -> InternalOperationContentsTransaction
[_internalOperationContentsTransaction_source] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_nonce] :: InternalOperationContentsTransaction -> !Word16
[_internalOperationContentsTransaction_amount] :: InternalOperationContentsTransaction -> !Tez
[_internalOperationContentsTransaction_destination] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_parameters] :: InternalOperationContentsTransaction -> !Maybe OpParameters
[_internalOperationContentsTransaction_result] :: InternalOperationContentsTransaction -> !OperationResultTransaction
data InternalOperationContentsOrigination
InternalOperationContentsOrigination :: InternalOperationContentsOrigination
data InternalOperationContentsDelegation
InternalOperationContentsDelegation :: InternalOperationContentsDelegation
data OperationResultStatus
OperationResultStatus_Applied :: OperationResultStatus
OperationResultStatus_Failed :: OperationResultStatus
OperationResultStatus_Skipped :: OperationResultStatus
OperationResultStatus_Backtracked :: OperationResultStatus

-- | only certain combinations of status<i>errors</i>content are valid, but
--   ignore that for now
data OperationResult a
OperationResult :: !OperationResultStatus -> !Maybe (Seq JsonRpcError) -> !Maybe a -> OperationResult a
[_operationResult_status] :: OperationResult a -> !OperationResultStatus
[_operationResult_errors] :: OperationResult a -> !Maybe (Seq JsonRpcError)
[_operationResult_content] :: OperationResult a -> !Maybe a

-- | "kind": { "type": "string", "enum": [ "reveal" ] },
data OperationContentsReveal
OperationContentsReveal :: ManagerOperationMetadata OperationResultReveal -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKey -> OperationContentsReveal
[_operationContentsReveal_metadata] :: OperationContentsReveal -> ManagerOperationMetadata OperationResultReveal
[_operationContentsReveal_source] :: OperationContentsReveal -> !ContractId
[_operationContentsReveal_fee] :: OperationContentsReveal -> !Tez
[_operationContentsReveal_counter] :: OperationContentsReveal -> !Counter
[_operationContentsReveal_gasLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_storageLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_publicKey] :: OperationContentsReveal -> !PublicKey
data OperationResultReveal
OperationResultReveal :: OperationResultReveal

-- | "kind": { "type": "string", "enum": [ "transaction" ] },
data OperationContentsTransaction
OperationContentsTransaction :: ManagerOperationMetadata OperationResultTransaction -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !ContractId -> !Maybe OpParameters -> OperationContentsTransaction
[_operationContentsTransaction_metadata] :: OperationContentsTransaction -> ManagerOperationMetadata OperationResultTransaction
[_operationContentsTransaction_source] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_fee] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_counter] :: OperationContentsTransaction -> !Counter
[_operationContentsTransaction_gasLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_storageLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_amount] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_destination] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_parameters] :: OperationContentsTransaction -> !Maybe OpParameters

-- | "operation.alpha.operation_result.transaction": {
data OperationResultTransaction
OperationResultTransaction :: !Maybe Expression -> !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultTransaction
[_operationResultTransaction_storage] :: OperationResultTransaction -> !Maybe Expression
[_operationResultTransaction_balanceUpdates] :: OperationResultTransaction -> !Seq BalanceUpdate
[_operationResultTransaction_originatedContracts] :: OperationResultTransaction -> !Seq ContractId
[_operationResultTransaction_consumedGas] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_storageSize] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_paidStorageSizeDiff] :: OperationResultTransaction -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "origination" ] },
data OperationContentsOrigination
OperationContentsOrigination :: ManagerOperationMetadata OperationResultOrigination -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !Maybe PublicKeyHash -> !ContractScript -> OperationContentsOrigination
[_operationContentsOrigination_metadata] :: OperationContentsOrigination -> ManagerOperationMetadata OperationResultOrigination
[_operationContentsOrigination_source] :: OperationContentsOrigination -> !ContractId
[_operationContentsOrigination_fee] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_counter] :: OperationContentsOrigination -> !Counter
[_operationContentsOrigination_gasLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_storageLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_balance] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_delegate] :: OperationContentsOrigination -> !Maybe PublicKeyHash
[_operationContentsOrigination_script] :: OperationContentsOrigination -> !ContractScript
data OperationResultOrigination
OperationResultOrigination :: !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultOrigination
[_operationResultOrigination_balanceUpdates] :: OperationResultOrigination -> !Seq BalanceUpdate
[_operationResultOrigination_originatedContracts] :: OperationResultOrigination -> !Seq ContractId
[_operationResultOrigination_consumedGas] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_storageSize] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_paidStorageSizeDiff] :: OperationResultOrigination -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "delegation" ] },
data OperationContentsDelegation
OperationContentsDelegation :: ManagerOperationMetadata OperationResultDelegation -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Maybe PublicKeyHash -> OperationContentsDelegation
[_operationContentsDelegation_metadata] :: OperationContentsDelegation -> ManagerOperationMetadata OperationResultDelegation
[_operationContentsDelegation_source] :: OperationContentsDelegation -> !ContractId
[_operationContentsDelegation_fee] :: OperationContentsDelegation -> !Tez
[_operationContentsDelegation_counter] :: OperationContentsDelegation -> !Counter
[_operationContentsDelegation_gasLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_storageLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_delegate] :: OperationContentsDelegation -> !Maybe PublicKeyHash
data OperationResultDelegation
OperationResultDelegation :: OperationResultDelegation
stripEndorsement :: Operation -> Maybe (Op  'OpKind_Endorsement)
outlineEndorsement :: InlinedEndorsement -> Op  'OpKind_Endorsement
nonce_size :: Int
activation_code_size :: Int
jsonAddKeys :: [(Text, Value)] -> Value -> Value
checkBatch :: MonadFail m => [DSum OpKindTag OpContents] -> m (DSum OpsKindTag OpContentsList)
opParameters_value :: Lens' OpParameters Expression
opParameters_entrypoint :: Lens' OpParameters Entrypoint
seedNonceRevelationMetadata_balanceUpdates :: Iso' SeedNonceRevelationMetadata (Seq BalanceUpdate)
opContentsOrigination_script :: Lens' OpContentsOrigination ContractScript
opContentsOrigination_delegate :: Lens' OpContentsOrigination (Maybe PublicKeyHash)
opContentsOrigination_balance :: Lens' OpContentsOrigination Tez
opContentsTransaction_parameters :: Lens' OpContentsTransaction (Maybe OpParameters)
opContentsTransaction_destination :: Lens' OpContentsTransaction ContractId
opContentsTransaction_amount :: Lens' OpContentsTransaction Tez
opContentsManager_storageLimit :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) TezosPositiveBigNum
opContentsManager_source :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) PublicKeyHash
opContentsManager_operation :: forall op_a4w3V op_a4Efj. Lens (OpContentsManager op_a4w3V) (OpContentsManager op_a4Efj) op_a4w3V op_a4Efj
opContentsManager_gasLimit :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) TezosPositiveBigNum
opContentsManager_fee :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) Tez
opContentsManager_counter :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) Counter
opContentsEndorsement_level :: Iso' OpContentsEndorsement RawLevel
op_signature :: forall a_a4w46. Lens' (Op a_a4w46) (Maybe Signature)
op_contents :: forall a_a4w46 a_a4Ef1. Lens (Op a_a4w46) (Op a_a4Ef1) (OpContentsList a_a4w46) (OpContentsList a_a4Ef1)
op_branch :: forall a_a4w46. Lens' (Op a_a4w46) BlockHash
operationWithMetadata_signature :: Lens' OperationWithMetadata (Maybe Signature)
operationWithMetadata_contents :: Lens' OperationWithMetadata (Seq OperationContents)
operationResultTransaction_storageSize :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_storage :: Lens' OperationResultTransaction (Maybe Expression)
operationResultTransaction_paidStorageSizeDiff :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_originatedContracts :: Lens' OperationResultTransaction (Seq ContractId)
operationResultTransaction_consumedGas :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_balanceUpdates :: Lens' OperationResultTransaction (Seq BalanceUpdate)
operationResultOrigination_storageSize :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_paidStorageSizeDiff :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_originatedContracts :: Lens' OperationResultOrigination (Seq ContractId)
operationResultOrigination_consumedGas :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_balanceUpdates :: Lens' OperationResultOrigination (Seq BalanceUpdate)
operationResult_status :: forall a_a4w3T. Lens' (OperationResult a_a4w3T) OperationResultStatus
operationResult_errors :: forall a_a4w3T. Lens' (OperationResult a_a4w3T) (Maybe (Seq JsonRpcError))
operationResult_content :: forall a_a4w3T a_a4Edh. Lens (OperationResult a_a4w3T) (OperationResult a_a4Edh) (Maybe a_a4w3T) (Maybe a_a4Edh)
operationContentsTransaction_storageLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_source :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_parameters :: Lens' OperationContentsTransaction (Maybe OpParameters)
operationContentsTransaction_metadata :: Lens' OperationContentsTransaction (ManagerOperationMetadata OperationResultTransaction)
operationContentsTransaction_gasLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_fee :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_destination :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_counter :: Lens' OperationContentsTransaction Counter
operationContentsTransaction_amount :: Lens' OperationContentsTransaction Tez
operationContentsSeedNonceRevelation_nonce :: Lens' OperationContentsSeedNonceRevelation (Base16ByteString ByteString)
operationContentsSeedNonceRevelation_metadata :: Lens' OperationContentsSeedNonceRevelation SeedNonceRevelationMetadata
operationContentsSeedNonceRevelation_level :: Lens' OperationContentsSeedNonceRevelation RawLevel
operationContentsReveal_storageLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_source :: Lens' OperationContentsReveal ContractId
operationContentsReveal_publicKey :: Lens' OperationContentsReveal PublicKey
operationContentsReveal_metadata :: Lens' OperationContentsReveal (ManagerOperationMetadata OperationResultReveal)
operationContentsReveal_gasLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_fee :: Lens' OperationContentsReveal Tez
operationContentsReveal_counter :: Lens' OperationContentsReveal Counter
operationContentsProposals_source :: Lens' OperationContentsProposals PublicKeyHash
operationContentsProposals_proposals :: Lens' OperationContentsProposals (Seq ProtocolHash)
operationContentsProposals_period :: Lens' OperationContentsProposals RawLevel
operationContentsProposals_metadata :: Lens' OperationContentsProposals EmptyMetadata
operationContentsOrigination_storageLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_source :: Lens' OperationContentsOrigination ContractId
operationContentsOrigination_script :: Lens' OperationContentsOrigination ContractScript
operationContentsOrigination_metadata :: Lens' OperationContentsOrigination (ManagerOperationMetadata OperationResultOrigination)
operationContentsOrigination_gasLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_fee :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_delegate :: Lens' OperationContentsOrigination (Maybe PublicKeyHash)
operationContentsOrigination_counter :: Lens' OperationContentsOrigination Counter
operationContentsOrigination_balance :: Lens' OperationContentsOrigination Tez
operationContentsEndorsement_metadata :: Lens' OperationContentsEndorsement EndorsementMetadata
operationContentsEndorsement_level :: Lens' OperationContentsEndorsement RawLevel
operationContentsDoubleEndorsementEvidence_op2 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_op1 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_metadata :: Lens' OperationContentsDoubleEndorsementEvidence DoubleEndorsementEvidenceMetadata
operationContentsDoubleBakingEvidence_metadata :: Lens' OperationContentsDoubleBakingEvidence DoubleBakingEvidenceMetadata
operationContentsDoubleBakingEvidence_bh2 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_bh1 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDelegation_storageLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_source :: Lens' OperationContentsDelegation ContractId
operationContentsDelegation_metadata :: Lens' OperationContentsDelegation (ManagerOperationMetadata OperationResultDelegation)
operationContentsDelegation_gasLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_fee :: Lens' OperationContentsDelegation Tez
operationContentsDelegation_delegate :: Lens' OperationContentsDelegation (Maybe PublicKeyHash)
operationContentsDelegation_counter :: Lens' OperationContentsDelegation Counter
operationContentsBallot_source :: Lens' OperationContentsBallot PublicKeyHash
operationContentsBallot_proposal :: Lens' OperationContentsBallot ProtocolHash
operationContentsBallot_period :: Lens' OperationContentsBallot RawLevel
operationContentsBallot_metadata :: Lens' OperationContentsBallot EmptyMetadata
operationContentsBallot_ballot :: Lens' OperationContentsBallot Ballot
operationContentsActivateAccount_secret :: Lens' OperationContentsActivateAccount (Base16ByteString ByteString)
operationContentsActivateAccount_pkh :: Lens' OperationContentsActivateAccount Ed25519PublicKeyHash
operationContentsActivateAccount_metadata :: Lens' OperationContentsActivateAccount ActivateMetadata
managerOperationMetadata_operationResult :: forall a_a4w3U a_a4E5J. Lens (ManagerOperationMetadata a_a4w3U) (ManagerOperationMetadata a_a4E5J) (OperationResult a_a4w3U) (OperationResult a_a4E5J)
managerOperationMetadata_internalOperationResults :: forall a_a4w3U. Lens' (ManagerOperationMetadata a_a4w3U) (Maybe (Seq InternalOperationResult))
managerOperationMetadata_balanceUpdates :: forall a_a4w3U. Lens' (ManagerOperationMetadata a_a4w3U) (Seq BalanceUpdate)
internalOperationContentsTransaction_source :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_result :: Lens' InternalOperationContentsTransaction OperationResultTransaction
internalOperationContentsTransaction_parameters :: Lens' InternalOperationContentsTransaction (Maybe OpParameters)
internalOperationContentsTransaction_nonce :: Lens' InternalOperationContentsTransaction Word16
internalOperationContentsTransaction_destination :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_amount :: Lens' InternalOperationContentsTransaction Tez
inlinedEndorsementContents_level :: Iso' InlinedEndorsementContents RawLevel
inlinedEndorsement_signature :: Lens' InlinedEndorsement (Maybe Signature)
inlinedEndorsement_operations :: Lens' InlinedEndorsement InlinedEndorsementContents
inlinedEndorsement_branch :: Lens' InlinedEndorsement BlockHash
endorsementMetadata_slots :: Lens' EndorsementMetadata (Seq Word8)
endorsementMetadata_delegate :: Lens' EndorsementMetadata PublicKeyHash
endorsementMetadata_balanceUpdates :: Lens' EndorsementMetadata (Seq BalanceUpdate)
doubleEndorsementEvidenceMetadata_balanceUpdates :: Iso' DoubleEndorsementEvidenceMetadata (Seq BalanceUpdate)
doubleBakingEvidenceMetadata_balanceUpdates :: Iso' DoubleBakingEvidenceMetadata (Seq BalanceUpdate)
activateMetadata_balanceUpdates :: Iso' ActivateMetadata (Seq BalanceUpdate)
noContextOperation_signature :: Lens' NoContextOperation (Maybe Signature)
noContextOperation_contents :: Lens' NoContextOperation (Seq OperationContents)
operation_signature :: Lens' Operation (Maybe Signature)
operation_protocol :: Lens' Operation ProtocolHash
operation_hash :: Lens' Operation OperationHash
operation_contents :: Lens' Operation (Seq OperationContents)
operation_chainId :: Lens' Operation ChainId
operation_branch :: Lens' Operation BlockHash
_OperationResultStatus_Backtracked :: Prism' OperationResultStatus ()
_OperationResultStatus_Skipped :: Prism' OperationResultStatus ()
_OperationResultStatus_Failed :: Prism' OperationResultStatus ()
_OperationResultStatus_Applied :: Prism' OperationResultStatus ()
_OpContentsList_Cons :: forall a_a4w3X k_a4E3f kk_a4E3g ks_a4E3h. a_a4w3X ~  'OpKind_Manager ( '(:) k_a4E3f ( '(:) kk_a4E3g ks_a4E3h)) => Review (OpContentsList a_a4w3X) (OpContents ( 'OpKind_Manager ( '(:) k_a4E3f ('[] :: [OpKindManager]))), OpContentsList ( 'OpKind_Manager ( '(:) kk_a4E3g ks_a4E3h)))
_OpContentsList_Single :: forall a_a4w3X. Prism' (OpContentsList a_a4w3X) (OpContents a_a4w3X)
_InternalOperationResult_Delegation :: Prism' InternalOperationResult InternalOperationContentsDelegation
_InternalOperationResult_Origination :: Prism' InternalOperationResult InternalOperationContentsOrigination
_InternalOperationResult_Transaction :: Prism' InternalOperationResult InternalOperationContentsTransaction
_InternalOperationResult_Reveal :: Prism' InternalOperationResult InternalOperationContentsReveal
_EntrypointOther :: Prism' Entrypoint EntrypointName
_EntrypointRemoveDelegate :: Prism' Entrypoint ()
_EntrypointSetDelegate :: Prism' Entrypoint ()
_EntrypointDo :: Prism' Entrypoint ()
_EntrypointRoot :: Prism' Entrypoint ()
_EntrypointDefault :: Prism' Entrypoint ()
_OperationContents_Delegation :: Prism' OperationContents OperationContentsDelegation
_OperationContents_Origination :: Prism' OperationContents OperationContentsOrigination
_OperationContents_Transaction :: Prism' OperationContents OperationContentsTransaction
_OperationContents_Reveal :: Prism' OperationContents OperationContentsReveal
_OperationContents_Ballot :: Prism' OperationContents OperationContentsBallot
_OperationContents_Proposals :: Prism' OperationContents OperationContentsProposals
_OperationContents_ActivateAccount :: Prism' OperationContents OperationContentsActivateAccount
_OperationContents_DoubleBakingEvidence :: Prism' OperationContents OperationContentsDoubleBakingEvidence
_OperationContents_DoubleEndorsementEvidence :: Prism' OperationContents OperationContentsDoubleEndorsementEvidence
_OperationContents_SeedNonceRevelation :: Prism' OperationContents OperationContentsSeedNonceRevelation
_OperationContents_Endorsement :: Prism' OperationContents OperationContentsEndorsement
mkOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Maybe Signature -> DSum OpsKindTag Op
mkSignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Signature -> DSum OpsKindTag Op
mkUnsignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> DSum OpsKindTag Op
batchOperations :: NonEmpty (DSum BatchableOp OpContents) -> DSum OpsKindTag OpContentsList
consOpTags :: OpKindManagerTag k -> OpsKindTag ( 'OpKind_Manager ks) -> OpsKindTag ( 'OpKind_Manager (k : ks))
consOpContents :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager ks) -> OpContentsList ( 'OpKind_Manager (k : ks))
batchUnfoldrM :: forall m a. Monad m => (a -> m (DSum BatchableOp OpContents, Maybe a)) -> a -> m (DSum OpsKindTag OpContentsList)
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationResultOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationResultTransaction
instance Tezos.V004.BalanceUpdate.HasBalanceUpdates Tezos.V005.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.Operation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.NoContextOperation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.NoContextOperation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.EndorsementMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.EndorsementMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsSeedNonceRevelation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsSeedNonceRevelation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.SeedNonceRevelationMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.SeedNonceRevelationMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.DoubleEndorsementEvidenceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.DoubleEndorsementEvidenceMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InlinedEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InlinedEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InlinedEndorsementContents
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InlinedEndorsementContents
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsDoubleBakingEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsDoubleBakingEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.DoubleBakingEvidenceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.DoubleBakingEvidenceMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsActivateAccount
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsActivateAccount
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.ActivateMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.ActivateMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsProposals
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsProposals
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsBallot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsBallot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.Ballot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.Ballot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationResultStatus
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationResultStatus
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InternalOperationContentsTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InternalOperationContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationResultReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationResultReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationWithMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationWithMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContentsDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationResultDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationResultDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsEndorsement
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsActivateAccount
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsActivateAccount
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsProposals
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsProposals
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsBallot
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsBallot
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsReveal
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsTransaction
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpContentsDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OpParameters
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OpParameters
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V005.Operation.OpWithChain a)
instance Data.Aeson.Types.FromJSON.FromJSON a => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V005.Operation.OpWithChain a)
instance (Data.Aeson.Types.ToJSON.ToJSON a, Data.Typeable.Internal.Typeable a) => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V005.Operation.ManagerOperationMetadata a)
instance (Data.Aeson.Types.FromJSON.FromJSON a, Data.Typeable.Internal.Typeable a) => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V005.Operation.ManagerOperationMetadata a)
instance Data.GADT.Show.GShow Tezos.V005.Operation.OpKindManagerTag
instance Data.GADT.Show.GShow Tezos.V005.Operation.OpKindTag
instance Data.GADT.Compare.GEq Tezos.V005.Operation.OpKindManagerTag
instance Data.GADT.Compare.GEq Tezos.V005.Operation.OpKindTag
instance Data.Constraint.Extras.ArgDict c Tezos.V005.Operation.OpKindManagerTag
instance GHC.Show.Show Tezos.V005.Operation.Operation
instance GHC.Classes.Ord Tezos.V005.Operation.Operation
instance GHC.Classes.Eq Tezos.V005.Operation.Operation
instance GHC.Show.Show Tezos.V005.Operation.OperationWithMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.OperationWithMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.OperationWithMetadata
instance GHC.Show.Show Tezos.V005.Operation.NoContextOperation
instance GHC.Classes.Ord Tezos.V005.Operation.NoContextOperation
instance GHC.Classes.Eq Tezos.V005.Operation.NoContextOperation
instance GHC.Show.Show Tezos.V005.Operation.OperationContents
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContents
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContents
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsDelegation
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsDelegation
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsDelegation
instance GHC.Show.Show Tezos.V005.Operation.OperationResultDelegation
instance GHC.Classes.Ord Tezos.V005.Operation.OperationResultDelegation
instance GHC.Classes.Eq Tezos.V005.Operation.OperationResultDelegation
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsOrigination
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsOrigination
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsOrigination
instance GHC.Show.Show Tezos.V005.Operation.OperationResultOrigination
instance GHC.Classes.Ord Tezos.V005.Operation.OperationResultOrigination
instance GHC.Classes.Eq Tezos.V005.Operation.OperationResultOrigination
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsReveal
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsReveal
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsReveal
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsTransaction
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsTransaction
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsTransaction
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V005.Operation.ManagerOperationMetadata a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V005.Operation.ManagerOperationMetadata a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V005.Operation.ManagerOperationMetadata a)
instance GHC.Show.Show Tezos.V005.Operation.InternalOperationResult
instance GHC.Classes.Ord Tezos.V005.Operation.InternalOperationResult
instance GHC.Classes.Eq Tezos.V005.Operation.InternalOperationResult
instance GHC.Show.Show Tezos.V005.Operation.InternalOperationContentsTransaction
instance GHC.Classes.Ord Tezos.V005.Operation.InternalOperationContentsTransaction
instance GHC.Classes.Eq Tezos.V005.Operation.InternalOperationContentsTransaction
instance GHC.Show.Show Tezos.V005.Operation.OperationResultTransaction
instance GHC.Classes.Ord Tezos.V005.Operation.OperationResultTransaction
instance GHC.Classes.Eq Tezos.V005.Operation.OperationResultTransaction
instance GHC.Show.Show Tezos.V005.Operation.OperationResultReveal
instance GHC.Classes.Ord Tezos.V005.Operation.OperationResultReveal
instance GHC.Classes.Eq Tezos.V005.Operation.OperationResultReveal
instance GHC.Show.Show a => GHC.Show.Show (Tezos.V005.Operation.OperationResult a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Tezos.V005.Operation.OperationResult a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Tezos.V005.Operation.OperationResult a)
instance GHC.Show.Show Tezos.V005.Operation.OperationResultStatus
instance GHC.Classes.Ord Tezos.V005.Operation.OperationResultStatus
instance GHC.Classes.Eq Tezos.V005.Operation.OperationResultStatus
instance GHC.Show.Show Tezos.V005.Operation.InternalOperationContentsDelegation
instance GHC.Classes.Ord Tezos.V005.Operation.InternalOperationContentsDelegation
instance GHC.Classes.Eq Tezos.V005.Operation.InternalOperationContentsDelegation
instance GHC.Show.Show Tezos.V005.Operation.InternalOperationContentsOrigination
instance GHC.Classes.Ord Tezos.V005.Operation.InternalOperationContentsOrigination
instance GHC.Classes.Eq Tezos.V005.Operation.InternalOperationContentsOrigination
instance GHC.Show.Show Tezos.V005.Operation.InternalOperationContentsReveal
instance GHC.Classes.Ord Tezos.V005.Operation.InternalOperationContentsReveal
instance GHC.Classes.Eq Tezos.V005.Operation.InternalOperationContentsReveal
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsBallot
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsBallot
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsBallot
instance GHC.Show.Show (Tezos.V005.Operation.Op a)
instance GHC.Classes.Ord (Tezos.V005.Operation.Op a)
instance GHC.Classes.Eq (Tezos.V005.Operation.Op a)
instance GHC.Show.Show (Tezos.V005.Operation.ProtoOp a)
instance GHC.Classes.Ord (Tezos.V005.Operation.ProtoOp a)
instance GHC.Classes.Eq (Tezos.V005.Operation.ProtoOp a)
instance GHC.Show.Show (Tezos.V005.Operation.PendingOp a)
instance GHC.Classes.Ord (Tezos.V005.Operation.PendingOp a)
instance GHC.Classes.Eq (Tezos.V005.Operation.PendingOp a)
instance GHC.Show.Show (Tezos.V005.Operation.ErroredOp a)
instance GHC.Classes.Eq (Tezos.V005.Operation.ErroredOp a)
instance GHC.Show.Show Tezos.V005.Operation.OpContentsBallot
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsBallot
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsBallot
instance GHC.Generics.Generic Tezos.V005.Operation.Ballot
instance GHC.Enum.Bounded Tezos.V005.Operation.Ballot
instance GHC.Enum.Enum Tezos.V005.Operation.Ballot
instance GHC.Show.Show Tezos.V005.Operation.Ballot
instance GHC.Read.Read Tezos.V005.Operation.Ballot
instance GHC.Classes.Ord Tezos.V005.Operation.Ballot
instance GHC.Classes.Eq Tezos.V005.Operation.Ballot
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsProposals
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsProposals
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsProposals
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsActivateAccount
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsActivateAccount
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsActivateAccount
instance GHC.Show.Show Tezos.V005.Operation.ActivateMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.ActivateMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.ActivateMetadata
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsDoubleBakingEvidence
instance GHC.Show.Show Tezos.V005.Operation.DoubleBakingEvidenceMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.DoubleBakingEvidenceMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.DoubleBakingEvidenceMetadata
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsDoubleEndorsementEvidence
instance GHC.Show.Show Tezos.V005.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.DoubleEndorsementEvidenceMetadata
instance GHC.Show.Show Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance GHC.Show.Show Tezos.V005.Operation.InlinedEndorsement
instance GHC.Classes.Ord Tezos.V005.Operation.InlinedEndorsement
instance GHC.Classes.Eq Tezos.V005.Operation.InlinedEndorsement
instance GHC.Show.Show Tezos.V005.Operation.InlinedEndorsementContents
instance GHC.Classes.Ord Tezos.V005.Operation.InlinedEndorsementContents
instance GHC.Classes.Eq Tezos.V005.Operation.InlinedEndorsementContents
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsSeedNonceRevelation
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsSeedNonceRevelation
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsSeedNonceRevelation
instance GHC.Show.Show Tezos.V005.Operation.SeedNonceRevelationMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.SeedNonceRevelationMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.SeedNonceRevelationMetadata
instance GHC.Show.Show Tezos.V005.Operation.OperationContentsEndorsement
instance GHC.Classes.Ord Tezos.V005.Operation.OperationContentsEndorsement
instance GHC.Classes.Eq Tezos.V005.Operation.OperationContentsEndorsement
instance GHC.Show.Show Tezos.V005.Operation.EndorsementMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.EndorsementMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.EndorsementMetadata
instance GHC.Show.Show Tezos.V005.Operation.OpContentsDelegation
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsDelegation
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsDelegation
instance GHC.Show.Show Tezos.V005.Operation.OpContentsOrigination
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsOrigination
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsOrigination
instance GHC.Show.Show Tezos.V005.Operation.OpContentsTransaction
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsTransaction
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsTransaction
instance GHC.Show.Show Tezos.V005.Operation.OpParameters
instance GHC.Classes.Ord Tezos.V005.Operation.OpParameters
instance GHC.Classes.Eq Tezos.V005.Operation.OpParameters
instance GHC.Show.Show Tezos.V005.Operation.Entrypoint
instance GHC.Classes.Ord Tezos.V005.Operation.Entrypoint
instance GHC.Classes.Eq Tezos.V005.Operation.Entrypoint
instance GHC.Show.Show Tezos.V005.Operation.EntrypointName
instance GHC.Classes.Ord Tezos.V005.Operation.EntrypointName
instance GHC.Classes.Eq Tezos.V005.Operation.EntrypointName
instance GHC.Show.Show Tezos.V005.Operation.OpContentsReveal
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsReveal
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsReveal
instance GHC.Show.Show op => GHC.Show.Show (Tezos.V005.Operation.OpContentsManager op)
instance GHC.Classes.Ord op => GHC.Classes.Ord (Tezos.V005.Operation.OpContentsManager op)
instance GHC.Classes.Eq op => GHC.Classes.Eq (Tezos.V005.Operation.OpContentsManager op)
instance GHC.Show.Show Tezos.V005.Operation.OpContentsProposals
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsProposals
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsProposals
instance GHC.Show.Show Tezos.V005.Operation.OpContentsActivateAccount
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsActivateAccount
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsActivateAccount
instance GHC.Show.Show Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance GHC.Show.Show Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance GHC.Show.Show Tezos.V005.Operation.OpContentsEndorsement
instance GHC.Classes.Ord Tezos.V005.Operation.OpContentsEndorsement
instance GHC.Classes.Eq Tezos.V005.Operation.OpContentsEndorsement
instance GHC.Show.Show Tezos.V005.Operation.EmptyMetadata
instance GHC.Classes.Ord Tezos.V005.Operation.EmptyMetadata
instance GHC.Classes.Eq Tezos.V005.Operation.EmptyMetadata
instance GHC.Show.Show Tezos.V005.Operation.OpKind
instance GHC.Classes.Ord Tezos.V005.Operation.OpKind
instance GHC.Classes.Eq Tezos.V005.Operation.OpKind
instance GHC.Show.Show Tezos.V005.Operation.OpKindManager
instance GHC.Classes.Ord Tezos.V005.Operation.OpKindManager
instance GHC.Classes.Eq Tezos.V005.Operation.OpKindManager
instance GHC.Show.Show (Tezos.V005.Operation.OpKindManagerTag a)
instance GHC.Classes.Eq (Tezos.V005.Operation.OpContentsList a)
instance GHC.Classes.Ord (Tezos.V005.Operation.OpContentsList a)
instance GHC.Show.Show (Tezos.V005.Operation.OpContentsList a)
instance GHC.Classes.Eq (Tezos.V005.Operation.OpContents a)
instance GHC.Show.Show (Tezos.V005.Operation.OpContents a)
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationContents
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.OperationContents
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationResultOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InternalOperationResult
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InternalOperationResult
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.OperationResultTransaction
instance (Data.Typeable.Internal.Typeable a, Data.Aeson.Types.FromJSON.FromJSON a) => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V005.Operation.OperationResult a)
instance (Data.Typeable.Internal.Typeable a, Data.Aeson.Types.ToJSON.ToJSON a) => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V005.Operation.OperationResult a)
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InternalOperationContentsDelegation
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InternalOperationContentsDelegation
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InternalOperationContentsOrigination
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InternalOperationContentsOrigination
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.InternalOperationContentsReveal
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.InternalOperationContentsReveal
instance Tezos.Common.Binary.TezosUnsignedBinary (Tezos.V005.Operation.Op 'Tezos.V005.Operation.OpKind_Endorsement)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.Op)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.Op)
instance Tezos.Common.Binary.TezosUnsignedBinary (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.Op)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.Op)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.ProtoOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.ProtoOp)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.PendingOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.PendingOp)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.ErroredOp)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.ErroredOp)
instance Tezos.Common.Binary.TezosBinary (Tezos.V005.Operation.OpContentsList 'Tezos.V005.Operation.OpKind_Endorsement)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.OpContentsList)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.OpContentsList)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpsKindTag Tezos.V005.Operation.OpContentsList)
instance GHC.Classes.Ord (Tezos.V005.Operation.OpContents a)
instance Tezos.Common.Binary.TezosBinary (Tezos.V005.Operation.OpContents 'Tezos.V005.Operation.OpKind_Endorsement)
instance Tezos.Common.Binary.TezosBinary (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpKindTag Tezos.V005.Operation.OpContents)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpKindTag Tezos.V005.Operation.OpContents)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Dependent.Sum.DSum Tezos.V005.Operation.OpKindTag Tezos.V005.Operation.OpContents)
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsBallot
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.Ballot
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsDoubleEndorsementEvidence
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.InlinedEndorsement
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.InlinedEndorsementContents
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsDelegation
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsOrigination
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsTransaction
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpParameters
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.Entrypoint
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.Entrypoint
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.Entrypoint
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.EntrypointName
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.EntrypointName
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.EntrypointName
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsReveal
instance Tezos.Common.Binary.TezosBinary op => Tezos.Common.Binary.TezosBinary (Tezos.V005.Operation.OpContentsManager op)
instance Data.Aeson.Types.FromJSON.FromJSON op => Data.Aeson.Types.FromJSON.FromJSON (Tezos.V005.Operation.OpContentsManager op)
instance Data.Aeson.Types.ToJSON.ToJSON op => Data.Aeson.Types.ToJSON.ToJSON (Tezos.V005.Operation.OpContentsManager op)
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsProposals
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsActivateAccount
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsDoubleBakingEvidence
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsSeedNonceRevelation
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Operation.OpContentsEndorsement
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Operation.EmptyMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Operation.EmptyMetadata
instance Data.Constraint.Extras.ArgDict c Tezos.V005.Operation.OpKindTag
instance Tezos.Common.Binary.TezosBinary (Data.Some.Some Tezos.V005.Operation.OpKindTag)
instance Data.Aeson.Types.ToJSON.ToJSON (Data.Some.Some Tezos.V005.Operation.OpKindTag)
instance Data.Aeson.Types.FromJSON.FromJSON (Data.Some.Some Tezos.V005.Operation.OpKindTag)

module Tezos.V005.Mempool
data Mempool
Mempool :: [DSum OpsKindTag PendingOp] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ProtoOp)] -> Mempool
[_mempool_applied] :: Mempool -> [DSum OpsKindTag PendingOp]
[_mempool_refused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchRefused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchDelayed] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_unprocessed] :: Mempool -> [(OperationHash, DSum OpsKindTag ProtoOp)]
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Mempool.Mempool
instance GHC.Generics.Generic Tezos.V005.Mempool.Mempool

module Tezos.V005.Envelope
data Envelope
Envelope_BlockHeader :: !ChainId -> !BlockHeaderFull -> Envelope
Envelope_Endorsement :: !ChainId -> !Op  'OpKind_Endorsement -> Envelope
instance GHC.Generics.Generic Tezos.V005.Envelope.Envelope
instance GHC.Classes.Ord Tezos.V005.Envelope.Envelope
instance GHC.Classes.Eq Tezos.V005.Envelope.Envelope
instance GHC.Show.Show Tezos.V005.Envelope.Envelope
instance Tezos.Common.Binary.TezosBinary Tezos.V005.Envelope.Envelope

module Tezos.V005.Block
data MonitorBlock
MonitorBlock :: !BlockHash -> !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> MonitorBlock
[_monitorBlock_hash] :: MonitorBlock -> !BlockHash
[_monitorBlock_level] :: MonitorBlock -> !RawLevel
[_monitorBlock_proto] :: MonitorBlock -> !Word8
[_monitorBlock_predecessor] :: MonitorBlock -> !BlockHash
[_monitorBlock_timestamp] :: MonitorBlock -> !UTCTime
[_monitorBlock_validationPass] :: MonitorBlock -> !Word8
[_monitorBlock_operationsHash] :: MonitorBlock -> !OperationListListHash
[_monitorBlock_fitness] :: MonitorBlock -> !Fitness
[_monitorBlock_context] :: MonitorBlock -> !ContextHash

-- | "description": "All the information about a block.",
data Block
Block :: !ProtocolHash -> !ChainId -> !BlockHash -> !BlockHeaderFull -> !BlockMetadata -> !Seq (Seq Operation) -> Block
[_block_protocol] :: Block -> !ProtocolHash
[_block_chainId] :: Block -> !ChainId
[_block_hash] :: Block -> !BlockHash
[_block_header] :: Block -> !BlockHeaderFull
[_block_metadata] :: Block -> !BlockMetadata
[_block_operations] :: Block -> !Seq (Seq Operation)
toBlockHeader :: Block -> BlockHeader
block_chainId :: Lens' Block ChainId
block_hash :: Lens' Block BlockHash
block_header :: Lens' Block BlockHeaderFull
block_metadata :: Lens' Block BlockMetadata
block_operations :: Lens' Block (Seq (Seq Operation))
block_protocol :: Lens' Block ProtocolHash
monitorBlock_context :: Lens' MonitorBlock ContextHash
monitorBlock_fitness :: Lens' MonitorBlock Fitness
monitorBlock_hash :: Lens' MonitorBlock BlockHash
monitorBlock_level :: Lens' MonitorBlock RawLevel
monitorBlock_operationsHash :: Lens' MonitorBlock OperationListListHash
monitorBlock_predecessor :: Lens' MonitorBlock BlockHash
monitorBlock_proto :: Lens' MonitorBlock Word8
monitorBlock_timestamp :: Lens' MonitorBlock UTCTime
monitorBlock_validationPass :: Lens' MonitorBlock Word8

-- | Simple wrapper for adding a protocol hash to some other value.
--   
--   The Aeson instances are smart (too smart). If the underlying type is
--   not an object or an object with a conflicting key with the one added
--   by this type, the JSON encoding will be two-layered. Otherwise, the
--   JSON encoding will simply add an additional key for the protocol
--   information.
data WithProtocolHash a
WithProtocolHash :: !a -> !ProtocolHash -> WithProtocolHash a
[_withProtocolHash_value] :: WithProtocolHash a -> !a
[_withProtocolHash_protocolHash] :: WithProtocolHash a -> !ProtocolHash
data VeryBlockLike
VeryBlockLike :: !BlockHash -> !BlockHash -> !Fitness -> !RawLevel -> !UTCTime -> VeryBlockLike
[_veryBlockLike_hash] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_predecessor] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_fitness] :: VeryBlockLike -> !Fitness
[_veryBlockLike_level] :: VeryBlockLike -> !RawLevel
[_veryBlockLike_timestamp] :: VeryBlockLike -> !UTCTime

-- | "block_header_metadata": {
data BlockMetadata
BlockMetadata :: !ProtocolHash -> !ProtocolHash -> !TestChainStatus -> !Int -> !Int -> !Int -> !Seq MaxOperationListLength -> !PublicKeyHash -> !Level -> !VotingPeriodKind -> !Maybe CycleNonce -> !TezosPositiveBigNum -> !Seq PublicKeyHash -> !Seq BalanceUpdate -> BlockMetadata
[_blockMetadata_protocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_nextProtocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_testChainStatus] :: BlockMetadata -> !TestChainStatus
[_blockMetadata_maxOperationsTtl] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationDataLength] :: BlockMetadata -> !Int
[_blockMetadata_maxBlockHeaderLength] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationListLength] :: BlockMetadata -> !Seq MaxOperationListLength
[_blockMetadata_baker] :: BlockMetadata -> !PublicKeyHash
[_blockMetadata_level] :: BlockMetadata -> !Level
[_blockMetadata_votingPeriodKind] :: BlockMetadata -> !VotingPeriodKind
[_blockMetadata_nonceHash] :: BlockMetadata -> !Maybe CycleNonce
[_blockMetadata_consumedGas] :: BlockMetadata -> !TezosPositiveBigNum
[_blockMetadata_deactivated] :: BlockMetadata -> !Seq PublicKeyHash
[_blockMetadata_balanceUpdates] :: BlockMetadata -> !Seq BalanceUpdate

-- | "voting_period_kind": {
data VotingPeriodKind
VotingPeriodKind_Proposal :: VotingPeriodKind
VotingPeriodKind_TestingVote :: VotingPeriodKind
VotingPeriodKind_Testing :: VotingPeriodKind
VotingPeriodKind_PromotionVote :: VotingPeriodKind
data MaxOperationListLength
MaxOperationListLength :: !Int -> !Maybe Int -> MaxOperationListLength
[_maxOperationListLength_maxSize] :: MaxOperationListLength -> !Int
[_maxOperationListLength_maxOp] :: MaxOperationListLength -> !Maybe Int
class HasBlockHeaderFull a
blockHeaderFull :: HasBlockHeaderFull a => Lens' a BlockHeaderFull
class HasBlockMetadata a
blockMetadata :: HasBlockMetadata a => Lens' a BlockMetadata
class HasChainId a
chainIdL :: HasChainId a => Lens' a ChainId
class HasProtocolHash a
protocolHash :: HasProtocolHash a => Lens' a ProtocolHash
class BlockLike b
hash :: BlockLike b => Lens' b BlockHash
predecessor :: BlockLike b => Lens' b BlockHash
level :: BlockLike b => Lens' b RawLevel
fitness :: BlockLike b => Lens' b Fitness
timestamp :: BlockLike b => Lens' b UTCTime
blockMetadata_baker :: Lens' BlockMetadata PublicKeyHash
blockMetadata_balanceUpdates :: Lens' BlockMetadata (Seq BalanceUpdate)
blockMetadata_consumedGas :: Lens' BlockMetadata TezosPositiveBigNum
blockMetadata_deactivated :: Lens' BlockMetadata (Seq PublicKeyHash)
blockMetadata_level :: Lens' BlockMetadata Level
blockMetadata_maxBlockHeaderLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationDataLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationListLength :: Lens' BlockMetadata (Seq MaxOperationListLength)
blockMetadata_maxOperationsTtl :: Lens' BlockMetadata Int
blockMetadata_nextProtocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_nonceHash :: Lens' BlockMetadata (Maybe CycleNonce)
blockMetadata_protocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_testChainStatus :: Lens' BlockMetadata TestChainStatus
blockMetadata_votingPeriodKind :: Lens' BlockMetadata VotingPeriodKind
maxOperationListLength_maxOp :: Lens' MaxOperationListLength (Maybe Int)
maxOperationListLength_maxSize :: Lens' MaxOperationListLength Int
veryBlockLike_fitness :: Lens' VeryBlockLike Fitness
veryBlockLike_hash :: Lens' VeryBlockLike BlockHash
veryBlockLike_level :: Lens' VeryBlockLike RawLevel
veryBlockLike_predecessor :: Lens' VeryBlockLike BlockHash
veryBlockLike_timestamp :: Lens' VeryBlockLike UTCTime
withProtocolHash_protocolHash :: forall a_a3IEj. Lens' (WithProtocolHash a_a3IEj) ProtocolHash
withProtocolHash_value :: forall a_a3IEj a_a3KoW. Lens (WithProtocolHash a_a3IEj) (WithProtocolHash a_a3KoW) a_a3IEj a_a3KoW
mkVeryBlockLike :: BlockLike b => b -> VeryBlockLike
instance Tezos.V004.Block.BlockLike Tezos.V005.Block.Block
instance Tezos.V004.Block.HasProtocolHash Tezos.V005.Block.Block
instance Tezos.V004.Block.HasChainId Tezos.V005.Block.Block
instance Tezos.V004.Block.BlockLike Tezos.V005.Block.MonitorBlock
instance Tezos.V004.Block.HasBlockHeaderFull Tezos.V005.Block.Block
instance Tezos.V004.Block.HasBlockMetadata Tezos.V005.Block.Block
instance Tezos.V004.BalanceUpdate.HasBalanceUpdates Tezos.V005.Block.Block
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Block.Block
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Block.Block
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.Block.MonitorBlock
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.Block.MonitorBlock
instance GHC.Generics.Generic Tezos.V005.Block.MonitorBlock
instance GHC.Show.Show Tezos.V005.Block.MonitorBlock
instance GHC.Classes.Ord Tezos.V005.Block.MonitorBlock
instance GHC.Classes.Eq Tezos.V005.Block.MonitorBlock
instance GHC.Generics.Generic Tezos.V005.Block.Block
instance GHC.Show.Show Tezos.V005.Block.Block
instance GHC.Classes.Ord Tezos.V005.Block.Block
instance GHC.Classes.Eq Tezos.V005.Block.Block
instance Control.DeepSeq.NFData Tezos.V005.Block.MonitorBlock

module Tezos.V005.ProtocolConstants
calcTimeBetweenBlocks :: ProtoInfo -> NominalDiffTime
data ProtoInfo
ProtoInfo :: !Word8 -> !Word8 -> !Word8 -> !Int -> !Cycle -> !RawLevel -> !RawLevel -> !RawLevel -> !RawLevel -> !PeriodSequence -> !Word16 -> !TezosBigNum -> !TezosBigNum -> !TezosInt64 -> !Tez -> !Word16 -> !Tez -> !Tez -> !Int -> !Tez -> !Tez -> !Tez -> !Tez -> !Tez -> !TezosBigNum -> !Maybe TezosInt64 -> !Maybe Word16 -> !Maybe Int -> !Maybe Int -> !Maybe Int -> ProtoInfo
[_protoInfo_proofOfWorkNonceSize] :: ProtoInfo -> !Word8
[_protoInfo_nonceLength] :: ProtoInfo -> !Word8
[_protoInfo_maxRevelationsPerBlock] :: ProtoInfo -> !Word8
[_protoInfo_maxOperationDataLength] :: ProtoInfo -> !Int
[_protoInfo_preservedCycles] :: ProtoInfo -> !Cycle
[_protoInfo_blocksPerCycle] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerCommitment] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerRollSnapshot] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerVotingPeriod] :: ProtoInfo -> !RawLevel
[_protoInfo_timeBetweenBlocks] :: ProtoInfo -> !PeriodSequence
[_protoInfo_endorsersPerBlock] :: ProtoInfo -> !Word16
[_protoInfo_hardGasLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_hardGasLimitPerBlock] :: ProtoInfo -> !TezosBigNum
[_protoInfo_proofOfWorkThreshold] :: ProtoInfo -> !TezosInt64
[_protoInfo_tokensPerRoll] :: ProtoInfo -> !Tez
[_protoInfo_michelsonMaximumTypeSize] :: ProtoInfo -> !Word16
[_protoInfo_seedNonceRevelationTip] :: ProtoInfo -> !Tez
[_protoInfo_originationBurn] :: ProtoInfo -> !Tez
[_protoInfo_originationSize] :: ProtoInfo -> !Int
[_protoInfo_blockSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_endorsementSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_blockReward] :: ProtoInfo -> !Tez
[_protoInfo_endorsementReward] :: ProtoInfo -> !Tez
[_protoInfo_costPerByte] :: ProtoInfo -> !Tez
[_protoInfo_hardStorageLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_delayPerMissingEndorsement] :: ProtoInfo -> !Maybe TezosInt64
[_protoInfo_initialEndorsers] :: ProtoInfo -> !Maybe Word16
[_protoInfo_quorumMin] :: ProtoInfo -> !Maybe Int
[_protoInfo_quorumMax] :: ProtoInfo -> !Maybe Int
[_protoInfo_minProposalQuorum] :: ProtoInfo -> !Maybe Int
protoInfo_tokensPerRoll :: Lens' ProtoInfo Tez
protoInfo_timeBetweenBlocks :: Lens' ProtoInfo PeriodSequence
protoInfo_seedNonceRevelationTip :: Lens' ProtoInfo Tez
protoInfo_quorumMin :: Lens' ProtoInfo (Maybe Int)
protoInfo_quorumMax :: Lens' ProtoInfo (Maybe Int)
protoInfo_proofOfWorkThreshold :: Lens' ProtoInfo TezosInt64
protoInfo_proofOfWorkNonceSize :: Lens' ProtoInfo Word8
protoInfo_preservedCycles :: Lens' ProtoInfo Cycle
protoInfo_originationSize :: Lens' ProtoInfo Int
protoInfo_originationBurn :: Lens' ProtoInfo Tez
protoInfo_nonceLength :: Lens' ProtoInfo Word8
protoInfo_minProposalQuorum :: Lens' ProtoInfo (Maybe Int)
protoInfo_michelsonMaximumTypeSize :: Lens' ProtoInfo Word16
protoInfo_maxRevelationsPerBlock :: Lens' ProtoInfo Word8
protoInfo_maxOperationDataLength :: Lens' ProtoInfo Int
protoInfo_initialEndorsers :: Lens' ProtoInfo (Maybe Word16)
protoInfo_hardStorageLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerBlock :: Lens' ProtoInfo TezosBigNum
protoInfo_endorsersPerBlock :: Lens' ProtoInfo Word16
protoInfo_endorsementSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_endorsementReward :: Lens' ProtoInfo Tez
protoInfo_delayPerMissingEndorsement :: Lens' ProtoInfo (Maybe TezosInt64)
protoInfo_costPerByte :: Lens' ProtoInfo Tez
protoInfo_blocksPerVotingPeriod :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerRollSnapshot :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCycle :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCommitment :: Lens' ProtoInfo RawLevel
protoInfo_blockSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_blockReward :: Lens' ProtoInfo Tez

-- | Convert a level to the cycle that contains it.
--   
--   We subtract 1 because the first cycle begins after the genesis block.
--   Yet while that block is not part of the cycle, it is still given a
--   level, level 0.
unsafeAssumptionLevelToCycle :: ProtoInfo -> RawLevel -> Cycle

-- | Convert a cycle to the level of the first block in that cycle.
--   
--   We add 1 because we do not consider the genesis block as part of the
--   first cycle, as that would make the first cycle alone 1 block larger
--   than all the others.
unsafeAssumptionFirstLevelInCycle :: ProtoInfo -> Cycle -> RawLevel

-- | We want the first block in the cycle that sits PRESERVED_CYCLES before
--   the requested level, that is on the correct branch.
unsafeAssumptionRightsContextLevel :: ProtoInfo -> RawLevel -> RawLevel
predictFutureTimestamp :: BlockLike blk => ProtoInfo -> RawLevel -> blk -> UTCTime
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.ProtocolConstants.ProtoInfo
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.ProtocolConstants.ProtoInfo
instance GHC.Generics.Generic Tezos.V005.ProtocolConstants.ProtoInfo
instance GHC.Show.Show Tezos.V005.ProtocolConstants.ProtoInfo
instance GHC.Classes.Ord Tezos.V005.ProtocolConstants.ProtoInfo
instance GHC.Classes.Eq Tezos.V005.ProtocolConstants.ProtoInfo
instance Data.Hashable.Class.Hashable Tezos.V005.ProtocolConstants.ProtoInfo
instance Control.DeepSeq.NFData Tezos.V005.ProtocolConstants.ProtoInfo

module Tezos.V005.Unsafe

-- | Convert a level to the cycle that contains it.
--   
--   We subtract 1 because the first cycle begins after the genesis block.
--   Yet while that block is not part of the cycle, it is still given a
--   level, level 0.
unsafeAssumptionLevelToCycle :: ProtoInfo -> RawLevel -> Cycle

-- | Convert a cycle to the level of the first block in that cycle.
--   
--   We add 1 because we do not consider the genesis block as part of the
--   first cycle, as that would make the first cycle alone 1 block larger
--   than all the others.
unsafeAssumptionFirstLevelInCycle :: ProtoInfo -> Cycle -> RawLevel

-- | We want the first block in the cycle that sits PRESERVED_CYCLES before
--   the requested level, that is on the correct branch.
unsafeAssumptionRightsContextLevel :: ProtoInfo -> RawLevel -> RawLevel

module Tezos.Unsafe

module Tezos.V005.Vote

module Tezos.V005.Types

-- | <i>O(n)</i>. Convert a <a>ShortByteString</a> into a
--   <a>ByteString</a>.
fromShort :: ShortByteString -> ByteString

-- | A compact representation of a <a>Word8</a> vector.
--   
--   It has a lower memory overhead than a <a>ByteString</a> and and does
--   not contribute to heap fragmentation. It can be converted to or from a
--   <a>ByteString</a> (at the cost of copying the string data). It
--   supports very few other operations.
--   
--   It is suitable for use as an internal representation for code that
--   needs to keep many short strings in memory, but it <i>should not</i>
--   be used as an interchange type. That is, it should not generally be
--   used in public APIs. The <a>ByteString</a> type is usually more
--   suitable for use in interfaces; it is more flexible and it supports a
--   wide range of operations.
data ShortByteString

-- | <i>O(n)</i>. Convert a <a>ByteString</a> into a
--   <a>ShortByteString</a>.
--   
--   This makes a copy, so does not retain the input string.
toShort :: ByteString -> ShortByteString

-- | "$ref": "#<i>definitions</i>error",
newtype JsonRpcError
JsonRpcError :: Value -> JsonRpcError

-- | WARNING: Due to a major oversight on the part of Tezos Core, this type
--   is incorrectly named. It represents _non-negative_ integers (including
--   zero), not _strictly positive_ integers. Therefore the Haskell Natural
--   type is indeed the correct counterpart.
type TezosPositiveBigNum = StringEncode Natural
type TezosBigNum = StringEncode Integer
type TezosInt64 = StringEncode Int64

-- | JavaScript compatibility forces us and the Tezos JSON/RPC to encode
--   any integer with more than 32 bits into a decimal string format.
--   StringEncode helps us safely represent a range of different types for
--   which we must always respect this property.
newtype StringEncode a
StringEncode :: a -> StringEncode a
parseAsString :: forall a. (Read a, Typeable a) => Value -> Parser a
parseStringEncodedIntegral :: (Read a, Integral a, Typeable a) => Value -> Parser (StringEncode a)
deriveTezosJson :: Name -> Q [Dec]
deriveTezosToJson :: Name -> Q [Dec]
deriveTezosJsonKind :: String -> Name -> Q [Dec]
tezosJsonOptions :: Options
tezosJsonOptionsKind :: String -> Options
newtype BlockPrefix
BlockPrefix :: Text -> BlockPrefix
data NetworkStat
NetworkStat :: TezosInt64 -> TezosInt64 -> Int32 -> Int32 -> NetworkStat
[_networkStat_totalSent] :: NetworkStat -> TezosInt64
[_networkStat_totalRecv] :: NetworkStat -> TezosInt64
[_networkStat_currentInflow] :: NetworkStat -> Int32
[_networkStat_currentOutflow] :: NetworkStat -> Int32
networkStat_currentInflow :: Lens' NetworkStat Int32
networkStat_currentOutflow :: Lens' NetworkStat Int32
networkStat_totalRecv :: Lens' NetworkStat TezosInt64
networkStat_totalSent :: Lens' NetworkStat TezosInt64
newtype Base16ByteString a
Base16ByteString :: a -> Base16ByteString a
[unbase16ByteString] :: Base16ByteString a -> a
data HashBase58Error
HashBase58Error_DecodeError :: HashBase58Error
HashBase58Error_InvalidPrefix :: ByteString -> ByteString -> HashBase58Error
HashBase58Error_WrongLength :: Int -> Int -> HashBase58Error
HashBase58Error_BadChecksum :: ByteString -> ByteString -> ByteString -> HashBase58Error
newtype HashedValue (tag :: HashType)
HashedValue :: ShortByteString -> HashedValue
[unHashedValue] :: HashedValue -> ShortByteString
type BlindedPublicKeyHash = HashedValue  'HashType_BlindedPublicKeyHash
type CycleNonce = NonceHash
type NonceHash = HashedValue  'HashType_NonceHash
type ContractHash = HashedValue  'HashType_ContractHash
type P256Signature = HashedValue  'HashType_P256Signature
type P256PublicKey = HashedValue  'HashType_P256PublicKey
type P256PublicKeyHash = HashedValue  'HashType_P256PublicKeyHash
type ChainId = HashedValue  'HashType_ChainId
type GenericSignature = HashedValue  'HashType_GenericSignature
type Secp256k1Signature = HashedValue  'HashType_Secp256k1Signature
type Ed25519Signature = HashedValue  'HashType_Ed25519Signature
type Ed25519SecretKey = HashedValue  'HashType_Ed25519SecretKey
type Secp256k1PublicKey = HashedValue  'HashType_Secp256k1PublicKey
type Secp256k1SecretKey = HashedValue  'HashType_Secp256k1SecretKey
type Ed25519PublicKey = HashedValue  'HashType_Ed25519PublicKey
type Ed25519Seed = HashedValue  'HashType_Ed25519Seed
type CryptoboxPublicKeyHash = HashedValue  'HashType_CryptoboxPublicKeyHash
type Secp256k1PublicKeyHash = HashedValue  'HashType_Secp256k1PublicKeyHash
type Ed25519PublicKeyHash = HashedValue  'HashType_Ed25519PublicKeyHash
type ContextHash = HashedValue  'HashType_ContextHash
type ProtocolHash = HashedValue  'HashType_ProtocolHash
type OperationListListHash = HashedValue  'HashType_OperationListListHash
type OperationListHash = HashedValue  'HashType_OperationListHash
type OperationHash = HashedValue  'HashType_OperationHash
type BlockHash = HashedValue  'HashType_BlockHash
toBase58 :: forall t. IsBase58Hash t => HashedValue t -> ByteString
toBase58Text :: forall t. IsBase58Hash t => HashedValue t -> Text
tryFromBase58 :: [TryDecodeBase58 a] -> ByteString -> Either HashBase58Error a
fromBase58 :: forall t. IsBase58Hash t => ByteString -> Either HashBase58Error (HashedValue t)
data ChainTag
ChainTag_Main :: ChainTag
ChainTag_Test :: ChainTag
ChainTag_Hash :: ChainId -> ChainTag
data NamedChain
NamedChain_Mainnet :: NamedChain
NamedChain_Zeronet :: NamedChain
NamedChain_Babylonnet :: NamedChain
NamedChain_Carthagenet :: NamedChain
showNamedChain :: NamedChain -> Text
parseNamedChain :: Text -> Maybe NamedChain
showChain :: Either NamedChain ChainId -> Text
parseChain :: MonadError Text m => Text -> m (Either NamedChain ChainId)
getNamedChainId :: NamedChain -> Maybe ChainId
identifyChain :: ChainId -> Maybe NamedChain
toChainTagText :: ChainTag -> Text
parseChainTagText :: MonadError HashBase58Error m => Text -> m ChainTag
type Fitness = Fitness' ShortByteString

-- | for these to be useful, you'd need `TezosBinary ByteString`, but
--   that's definately not the same one as needed for the above FromJSON
--   instances; since both would be needed, both are wrong. we satisfy
--   ourselves with the fully monomorphic instances for both
--   
--   instance TezosBinary a =&gt; TezosBinary (FitnessF a) where
--   parseBinary = FitnessF <a>$</a> parseBinary encodeBinary =
--   encodeBinary . unFitnessF
type Fitness' a = FitnessF (Base16ByteString a)
newtype FitnessF a
FitnessF :: Seq a -> FitnessF a
[unFitnessF] :: FitnessF a -> Seq a
toFitness :: Seq a -> Fitness' a
unFitness :: FitnessF (Base16ByteString a) -> Seq a
data SigningCurve
SigningCurve_Bip25519 :: SigningCurve
SigningCurve_Ed25519 :: SigningCurve
SigningCurve_Secp256k1 :: SigningCurve
SigningCurve_P256 :: SigningCurve
data DerivationPath
DerivationPath :: Text -> DerivationPath
[unDerivationPath] :: DerivationPath -> Text
data SecretKey
SecretKey :: !LedgerIdentifier -> !SigningCurve -> !DerivationPath -> SecretKey
[_secretKey_ledgerIdentifier] :: SecretKey -> !LedgerIdentifier
[_secretKey_signingCurve] :: SecretKey -> !SigningCurve
[_secretKey_derivationPath] :: SecretKey -> !DerivationPath
newtype LedgerIdentifier
LedgerIdentifier :: Text -> LedgerIdentifier
[unLedgerIdentifier] :: LedgerIdentifier -> Text
toSecretKeyText :: SecretKey -> Text
toSigningCurveText :: SigningCurve -> Text
secretKey_derivationPath :: Lens' SecretKey DerivationPath
secretKey_ledgerIdentifier :: Lens' SecretKey LedgerIdentifier
secretKey_signingCurve :: Lens' SecretKey SigningCurve

-- | "level": {
data Level
Level :: Cycle -> RawLevel -> Bool -> RawLevel -> RawLevel -> RawLevel -> RawLevel -> Level
[_level_cycle] :: Level -> Cycle
[_level_cyclePosition] :: Level -> RawLevel
[_level_expectedCommitment] :: Level -> Bool
[_level_level] :: Level -> RawLevel
[_level_levelPosition] :: Level -> RawLevel
[_level_votingPeriod] :: Level -> RawLevel
[_level_votingPeriodPosition] :: Level -> RawLevel
newtype Cycle
Cycle :: Int32 -> Cycle
[unCycle] :: Cycle -> Int32
newtype RawLevel
RawLevel :: Int32 -> RawLevel
[unRawLevel] :: RawLevel -> Int32
level_cycle :: Lens' Level Cycle
level_cyclePosition :: Lens' Level RawLevel
level_expectedCommitment :: Lens' Level Bool
level_level :: Lens' Level RawLevel
level_levelPosition :: Lens' Level RawLevel
level_votingPeriod :: Lens' Level RawLevel
level_votingPeriodPosition :: Lens' Level RawLevel
type PeriodSequence = PeriodSequenceF TezosInt64
newtype PeriodSequenceF a
PeriodSequence :: NonEmpty a -> PeriodSequenceF a
[unPeriodSequence] :: PeriodSequenceF a -> NonEmpty a
data PublicKey
PublicKey_Ed25519 :: !Ed25519PublicKey -> PublicKey
PublicKey_Secp256k1 :: !Secp256k1PublicKey -> PublicKey
PublicKey_P256 :: !P256PublicKey -> PublicKey
publicKeyConstructorDecoders :: [TryDecodeBase58 PublicKey]
toPublicKeyText :: PublicKey -> Text
data PublicKeyHash
PublicKeyHash_Ed25519 :: !Ed25519PublicKeyHash -> PublicKeyHash
PublicKeyHash_Secp256k1 :: !Secp256k1PublicKeyHash -> PublicKeyHash
PublicKeyHash_P256 :: !P256PublicKeyHash -> PublicKeyHash
publicKeyHashConstructorDecoders :: [TryDecodeBase58 PublicKeyHash]
tryReadPublicKeyHash :: ByteString -> Either HashBase58Error PublicKeyHash
tryReadPublicKeyHashText :: Text -> Either HashBase58Error PublicKeyHash
toPublicKeyHashText :: PublicKeyHash -> Text
rawContextLink :: PublicKeyHash -> Text
data ContractId
Implicit :: !PublicKeyHash -> ContractId
Originated :: !ContractHash -> ContractId
contractIdConstructorDecoders :: [TryDecodeBase58 ContractId]
tryReadContractId :: ByteString -> Either HashBase58Error ContractId
tryReadContractIdText :: Text -> Either HashBase58Error ContractId
toContractIdText :: ContractId -> Text
data Signature
Signature_Ed25519 :: Ed25519Signature -> Signature
Signature_Secp256k1 :: Secp256k1Signature -> Signature
Signature_P256 :: P256Signature -> Signature
Signature_Unknown :: GenericSignature -> Signature
signatureConstructorDecoders :: [TryDecodeBase58 Signature]
tryReadSignature :: ByteString -> Either HashBase58Error Signature
tryReadSignatureText :: Text -> Either HashBase58Error Signature
toSignatureText :: Signature -> Text
newtype Priority
Priority :: Word16 -> Priority
[unPriority] :: Priority -> Word16
data BlockHeaderShell
BlockHeaderShell :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> BlockHeaderShell
[_blockHeaderShell_level] :: BlockHeaderShell -> !RawLevel
[_blockHeaderShell_proto] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_predecessor] :: BlockHeaderShell -> !BlockHash
[_blockHeaderShell_timestamp] :: BlockHeaderShell -> !UTCTime
[_blockHeaderShell_validationPass] :: BlockHeaderShell -> !Word8
[_blockHeaderShell_operationsHash] :: BlockHeaderShell -> !OperationListListHash
[_blockHeaderShell_fitness] :: BlockHeaderShell -> !Fitness
[_blockHeaderShell_context] :: BlockHeaderShell -> !ContextHash
data BlockHeaderProto
BlockHeaderProto :: !ProtocolHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderProto
[_blockHeaderProto_protocol] :: BlockHeaderProto -> !ProtocolHash
[_blockHeaderProto_priority] :: BlockHeaderProto -> !Priority
[_blockHeaderProto_proofOfWorkNonce] :: BlockHeaderProto -> !Base16ByteString ByteString
[_blockHeaderProto_seedNonceHash] :: BlockHeaderProto -> !Maybe NonceHash
[_blockHeaderProto_signature] :: BlockHeaderProto -> !Maybe Signature
data BlockHeader
BlockHeader :: !RawLevel -> !BlockHash -> !Word8 -> !ProtocolHash -> !ChainId -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeader
[_blockHeader_level] :: BlockHeader -> !RawLevel
[_blockHeader_hash] :: BlockHeader -> !BlockHash
[_blockHeader_proto] :: BlockHeader -> !Word8
[_blockHeader_protocol] :: BlockHeader -> !ProtocolHash
[_blockHeader_chainId] :: BlockHeader -> !ChainId
[_blockHeader_predecessor] :: BlockHeader -> !BlockHash
[_blockHeader_timestamp] :: BlockHeader -> !UTCTime
[_blockHeader_validationPass] :: BlockHeader -> !Word8
[_blockHeader_operationsHash] :: BlockHeader -> !OperationListListHash
[_blockHeader_fitness] :: BlockHeader -> !Fitness
[_blockHeader_context] :: BlockHeader -> !ContextHash
[_blockHeader_priority] :: BlockHeader -> !Priority
[_blockHeader_proofOfWorkNonce] :: BlockHeader -> !Base16ByteString ByteString
[_blockHeader_seedNonceHash] :: BlockHeader -> !Maybe NonceHash
[_blockHeader_signature] :: BlockHeader -> !Maybe Signature
data BlockHeaderFull
BlockHeaderFull :: !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> !Priority -> !Base16ByteString ByteString -> !Maybe NonceHash -> !Maybe Signature -> BlockHeaderFull
[_blockHeaderFull_level] :: BlockHeaderFull -> !RawLevel
[_blockHeaderFull_proto] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_predecessor] :: BlockHeaderFull -> !BlockHash
[_blockHeaderFull_timestamp] :: BlockHeaderFull -> !UTCTime
[_blockHeaderFull_validationPass] :: BlockHeaderFull -> !Word8
[_blockHeaderFull_operationsHash] :: BlockHeaderFull -> !OperationListListHash
[_blockHeaderFull_fitness] :: BlockHeaderFull -> !Fitness
[_blockHeaderFull_context] :: BlockHeaderFull -> !ContextHash
[_blockHeaderFull_priority] :: BlockHeaderFull -> !Priority
[_blockHeaderFull_proofOfWorkNonce] :: BlockHeaderFull -> !Base16ByteString ByteString
[_blockHeaderFull_seedNonceHash] :: BlockHeaderFull -> !Maybe NonceHash
[_blockHeaderFull_signature] :: BlockHeaderFull -> !Maybe Signature
blockHeader_chainId :: Lens' BlockHeader ChainId
blockHeader_context :: Lens' BlockHeader ContextHash
blockHeader_fitness :: Lens' BlockHeader Fitness
blockHeader_hash :: Lens' BlockHeader BlockHash
blockHeader_level :: Lens' BlockHeader RawLevel
blockHeader_operationsHash :: Lens' BlockHeader OperationListListHash
blockHeader_predecessor :: Lens' BlockHeader BlockHash
blockHeader_priority :: Lens' BlockHeader Priority
blockHeader_proofOfWorkNonce :: Lens' BlockHeader (Base16ByteString ByteString)
blockHeader_proto :: Lens' BlockHeader Word8
blockHeader_protocol :: Lens' BlockHeader ProtocolHash
blockHeader_seedNonceHash :: Lens' BlockHeader (Maybe NonceHash)
blockHeader_signature :: Lens' BlockHeader (Maybe Signature)
blockHeader_timestamp :: Lens' BlockHeader UTCTime
blockHeader_validationPass :: Lens' BlockHeader Word8
blockHeaderFull_context :: Lens' BlockHeaderFull ContextHash
blockHeaderFull_fitness :: Lens' BlockHeaderFull Fitness
blockHeaderFull_level :: Lens' BlockHeaderFull RawLevel
blockHeaderFull_operationsHash :: Lens' BlockHeaderFull OperationListListHash
blockHeaderFull_predecessor :: Lens' BlockHeaderFull BlockHash
blockHeaderFull_priority :: Lens' BlockHeaderFull Priority
blockHeaderFull_proofOfWorkNonce :: Lens' BlockHeaderFull (Base16ByteString ByteString)
blockHeaderFull_proto :: Lens' BlockHeaderFull Word8
blockHeaderFull_seedNonceHash :: Lens' BlockHeaderFull (Maybe NonceHash)
blockHeaderFull_signature :: Lens' BlockHeaderFull (Maybe Signature)
blockHeaderFull_timestamp :: Lens' BlockHeaderFull UTCTime
blockHeaderFull_validationPass :: Lens' BlockHeaderFull Word8
blockHeaderProto_priority :: Lens' BlockHeaderProto Priority
blockHeaderProto_proofOfWorkNonce :: Lens' BlockHeaderProto (Base16ByteString ByteString)
blockHeaderProto_protocol :: Lens' BlockHeaderProto ProtocolHash
blockHeaderProto_seedNonceHash :: Lens' BlockHeaderProto (Maybe NonceHash)
blockHeaderProto_signature :: Lens' BlockHeaderProto (Maybe Signature)
blockHeaderShell_context :: Lens' BlockHeaderShell ContextHash
blockHeaderShell_fitness :: Lens' BlockHeaderShell Fitness
blockHeaderShell_level :: Lens' BlockHeaderShell RawLevel
blockHeaderShell_operationsHash :: Lens' BlockHeaderShell OperationListListHash
blockHeaderShell_predecessor :: Lens' BlockHeaderShell BlockHash
blockHeaderShell_proto :: Lens' BlockHeaderShell Word8
blockHeaderShell_timestamp :: Lens' BlockHeaderShell UTCTime
blockHeaderShell_validationPass :: Lens' BlockHeaderShell Word8
data HistoryMode
HistoryMode_Archive :: HistoryMode
HistoryMode_Full :: HistoryMode
HistoryMode_Rolling :: HistoryMode
data Checkpoint
Checkpoint :: !RawLevel -> !RawLevel -> !HistoryMode -> !BlockHeaderShell -> Checkpoint
[_checkpoint_savePoint] :: Checkpoint -> !RawLevel
[_checkpoint_caboose] :: Checkpoint -> !RawLevel
[_checkpoint_historyMode] :: Checkpoint -> !HistoryMode
[_checkpoint_block] :: Checkpoint -> !BlockHeaderShell
checkpoint_block :: Lens' Checkpoint BlockHeaderShell
checkpoint_caboose :: Lens' Checkpoint RawLevel
checkpoint_historyMode :: Lens' Checkpoint HistoryMode
checkpoint_savePoint :: Lens' Checkpoint RawLevel

-- | "test_chain_status": {
data TestChainStatus
TestChainStatus_NotRunning :: TestChainStatus
TestChainStatus_Forking :: !ProtocolHash -> !UTCTime -> TestChainStatus
[_testChainStatusForking_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusForking_expiration] :: TestChainStatus -> !UTCTime
TestChainStatus_Running :: !ChainId -> !BlockHash -> !ProtocolHash -> UTCTime -> TestChainStatus
[_testChainStatusRunning_chainId] :: TestChainStatus -> !ChainId
[_testChainStatusRunning_genesis] :: TestChainStatus -> !BlockHash
[_testChainStatusRunning_protocol] :: TestChainStatus -> !ProtocolHash
[_testChainStatusRunning_expiration] :: TestChainStatus -> UTCTime
newtype TezDelta
TezDelta :: Micro -> TezDelta
[getTezDelta] :: TezDelta -> Micro
newtype Tez
Tez :: Micro -> Tez
[getTez] :: Tez -> Micro
getMicroTez :: Tez -> Natural
microTez :: Natural -> Tez
getMicroTezDelta :: TezDelta -> Int64
microTezDelta :: Int64 -> TezDelta
newtype Balances
Balances :: Map ContractId Balance -> Balances
[unBalances] :: Balances -> Map ContractId Balance
type Balance = Balance' (Sum TezDelta)
data Balance' g
Balance :: !g -> !Map Cycle (Map FreezerCategory g) -> Balance' g
[_balance_spendable] :: Balance' g -> !g
[_balance_frozen] :: Balance' g -> !Map Cycle (Map FreezerCategory g)
class HasBalanceUpdates a
balanceUpdates :: HasBalanceUpdates a => Traversal' a BalanceUpdate
data BalanceUpdate
BalanceUpdate_Contract :: ContractUpdate -> BalanceUpdate
BalanceUpdate_Freezer :: FreezerUpdate -> BalanceUpdate
data FreezerUpdate
FreezerUpdate :: !FreezerCategory -> !PublicKeyHash -> !Cycle -> !TezDelta -> FreezerUpdate
[_freezerUpdate_category] :: FreezerUpdate -> !FreezerCategory
[_freezerUpdate_delegate] :: FreezerUpdate -> !PublicKeyHash
[_freezerUpdate_cycle] :: FreezerUpdate -> !Cycle
[_freezerUpdate_change] :: FreezerUpdate -> !TezDelta
data ContractUpdate
ContractUpdate :: !ContractId -> !TezDelta -> ContractUpdate
[_contractUpdate_contract] :: ContractUpdate -> !ContractId
[_contractUpdate_change] :: ContractUpdate -> !TezDelta
data FreezerCategory
FreezerCategory_Rewards :: FreezerCategory
FreezerCategory_Fees :: FreezerCategory
FreezerCategory_Deposits :: FreezerCategory
getBalanceChanges :: HasBalanceUpdates a => a -> Balances
data DelegateInfo
DelegateInfo :: !Tez -> !Tez -> !Seq FrozenBalanceByCycle -> !Tez -> !Seq ContractId -> !Tez -> !Bool -> !Cycle -> DelegateInfo
[_delegateInfo_balance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalance] :: DelegateInfo -> !Tez
[_delegateInfo_frozenBalanceByCycle] :: DelegateInfo -> !Seq FrozenBalanceByCycle
[_delegateInfo_stakingBalance] :: DelegateInfo -> !Tez
[_delegateInfo_delegatedContracts] :: DelegateInfo -> !Seq ContractId
[_delegateInfo_delegatedBalance] :: DelegateInfo -> !Tez
[_delegateInfo_deactivated] :: DelegateInfo -> !Bool
[_delegateInfo_gracePeriod] :: DelegateInfo -> !Cycle
data FrozenBalanceByCycle
FrozenBalanceByCycle :: !Cycle -> !Tez -> !Tez -> !Tez -> FrozenBalanceByCycle
[_frozenBalanceByCycle_cycle] :: FrozenBalanceByCycle -> !Cycle
[_frozenBalanceByCycle_deposit] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_fees] :: FrozenBalanceByCycle -> !Tez
[_frozenBalanceByCycle_rewards] :: FrozenBalanceByCycle -> !Tez
data EndorsingRights
EndorsingRights :: !RawLevel -> !PublicKeyHash -> !Seq Word8 -> !Maybe UTCTime -> EndorsingRights
[_endorsingRights_level] :: EndorsingRights -> !RawLevel
[_endorsingRights_delegate] :: EndorsingRights -> !PublicKeyHash
[_endorsingRights_slots] :: EndorsingRights -> !Seq Word8
[_endorsingRights_estimatedTime] :: EndorsingRights -> !Maybe UTCTime
data BakingRights
BakingRights :: !RawLevel -> !PublicKeyHash -> !Priority -> !Maybe UTCTime -> BakingRights
[_bakingRights_level] :: BakingRights -> !RawLevel
[_bakingRights_delegate] :: BakingRights -> !PublicKeyHash
[_bakingRights_priority] :: BakingRights -> !Priority
[_bakingRights_estimatedTime] :: BakingRights -> !Maybe UTCTime
data AccountDelegate
AccountDelegate :: !Bool -> !Maybe PublicKeyHash -> AccountDelegate
[_accountDelegate_setable] :: AccountDelegate -> !Bool
[_accountDelegate_value] :: AccountDelegate -> !Maybe PublicKeyHash

-- | A special nonce that must increment with each successive operation
--   signed and submitted by a particular account.
type Counter = TezosPositiveBigNum
account_manager :: Lens' Account PublicKeyHash
account_spendable :: Lens' Account Bool
accountDelegate_setable :: Lens' AccountDelegate Bool
accountDelegate_value :: Lens' AccountDelegate (Maybe PublicKeyHash)
bakingRights_delegate :: Lens' BakingRights PublicKeyHash
bakingRights_estimatedTime :: Lens' BakingRights (Maybe UTCTime)
bakingRights_level :: Lens' BakingRights RawLevel
bakingRights_priority :: Lens' BakingRights Priority
delegateInfo_balance :: Lens' DelegateInfo Tez
delegateInfo_deactivated :: Lens' DelegateInfo Bool
delegateInfo_delegatedBalance :: Lens' DelegateInfo Tez
delegateInfo_delegatedContracts :: Lens' DelegateInfo (Seq ContractId)
delegateInfo_frozenBalance :: Lens' DelegateInfo Tez
delegateInfo_frozenBalanceByCycle :: Lens' DelegateInfo (Seq FrozenBalanceByCycle)
delegateInfo_gracePeriod :: Lens' DelegateInfo Cycle
delegateInfo_stakingBalance :: Lens' DelegateInfo Tez
endorsingRights_delegate :: Lens' EndorsingRights PublicKeyHash
endorsingRights_estimatedTime :: Lens' EndorsingRights (Maybe UTCTime)
endorsingRights_level :: Lens' EndorsingRights RawLevel
endorsingRights_slots :: Lens' EndorsingRights (Seq Word8)
frozenBalanceByCycle_cycle :: Lens' FrozenBalanceByCycle Cycle
frozenBalanceByCycle_deposit :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_fees :: Lens' FrozenBalanceByCycle Tez
frozenBalanceByCycle_rewards :: Lens' FrozenBalanceByCycle Tez

-- | Simple wrapper for adding a protocol hash to some other value.
--   
--   The Aeson instances are smart (too smart). If the underlying type is
--   not an object or an object with a conflicting key with the one added
--   by this type, the JSON encoding will be two-layered. Otherwise, the
--   JSON encoding will simply add an additional key for the protocol
--   information.
data WithProtocolHash a
WithProtocolHash :: !a -> !ProtocolHash -> WithProtocolHash a
[_withProtocolHash_value] :: WithProtocolHash a -> !a
[_withProtocolHash_protocolHash] :: WithProtocolHash a -> !ProtocolHash
data VeryBlockLike
VeryBlockLike :: !BlockHash -> !BlockHash -> !Fitness -> !RawLevel -> !UTCTime -> VeryBlockLike
[_veryBlockLike_hash] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_predecessor] :: VeryBlockLike -> !BlockHash
[_veryBlockLike_fitness] :: VeryBlockLike -> !Fitness
[_veryBlockLike_level] :: VeryBlockLike -> !RawLevel
[_veryBlockLike_timestamp] :: VeryBlockLike -> !UTCTime

-- | "block_header_metadata": {
data BlockMetadata
BlockMetadata :: !ProtocolHash -> !ProtocolHash -> !TestChainStatus -> !Int -> !Int -> !Int -> !Seq MaxOperationListLength -> !PublicKeyHash -> !Level -> !VotingPeriodKind -> !Maybe CycleNonce -> !TezosPositiveBigNum -> !Seq PublicKeyHash -> !Seq BalanceUpdate -> BlockMetadata
[_blockMetadata_protocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_nextProtocol] :: BlockMetadata -> !ProtocolHash
[_blockMetadata_testChainStatus] :: BlockMetadata -> !TestChainStatus
[_blockMetadata_maxOperationsTtl] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationDataLength] :: BlockMetadata -> !Int
[_blockMetadata_maxBlockHeaderLength] :: BlockMetadata -> !Int
[_blockMetadata_maxOperationListLength] :: BlockMetadata -> !Seq MaxOperationListLength
[_blockMetadata_baker] :: BlockMetadata -> !PublicKeyHash
[_blockMetadata_level] :: BlockMetadata -> !Level
[_blockMetadata_votingPeriodKind] :: BlockMetadata -> !VotingPeriodKind
[_blockMetadata_nonceHash] :: BlockMetadata -> !Maybe CycleNonce
[_blockMetadata_consumedGas] :: BlockMetadata -> !TezosPositiveBigNum
[_blockMetadata_deactivated] :: BlockMetadata -> !Seq PublicKeyHash
[_blockMetadata_balanceUpdates] :: BlockMetadata -> !Seq BalanceUpdate

-- | "voting_period_kind": {
data VotingPeriodKind
VotingPeriodKind_Proposal :: VotingPeriodKind
VotingPeriodKind_TestingVote :: VotingPeriodKind
VotingPeriodKind_Testing :: VotingPeriodKind
VotingPeriodKind_PromotionVote :: VotingPeriodKind
data MaxOperationListLength
MaxOperationListLength :: !Int -> !Maybe Int -> MaxOperationListLength
[_maxOperationListLength_maxSize] :: MaxOperationListLength -> !Int
[_maxOperationListLength_maxOp] :: MaxOperationListLength -> !Maybe Int
class HasBlockHeaderFull a
blockHeaderFull :: HasBlockHeaderFull a => Lens' a BlockHeaderFull
class HasBlockMetadata a
blockMetadata :: HasBlockMetadata a => Lens' a BlockMetadata
class HasChainId a
chainIdL :: HasChainId a => Lens' a ChainId
class HasProtocolHash a
protocolHash :: HasProtocolHash a => Lens' a ProtocolHash
class BlockLike b
hash :: BlockLike b => Lens' b BlockHash
predecessor :: BlockLike b => Lens' b BlockHash
level :: BlockLike b => Lens' b RawLevel
fitness :: BlockLike b => Lens' b Fitness
timestamp :: BlockLike b => Lens' b UTCTime
blockMetadata_baker :: Lens' BlockMetadata PublicKeyHash
blockMetadata_balanceUpdates :: Lens' BlockMetadata (Seq BalanceUpdate)
blockMetadata_consumedGas :: Lens' BlockMetadata TezosPositiveBigNum
blockMetadata_deactivated :: Lens' BlockMetadata (Seq PublicKeyHash)
blockMetadata_level :: Lens' BlockMetadata Level
blockMetadata_maxBlockHeaderLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationDataLength :: Lens' BlockMetadata Int
blockMetadata_maxOperationListLength :: Lens' BlockMetadata (Seq MaxOperationListLength)
blockMetadata_maxOperationsTtl :: Lens' BlockMetadata Int
blockMetadata_nextProtocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_nonceHash :: Lens' BlockMetadata (Maybe CycleNonce)
blockMetadata_protocol :: Lens' BlockMetadata ProtocolHash
blockMetadata_testChainStatus :: Lens' BlockMetadata TestChainStatus
blockMetadata_votingPeriodKind :: Lens' BlockMetadata VotingPeriodKind
maxOperationListLength_maxOp :: Lens' MaxOperationListLength (Maybe Int)
maxOperationListLength_maxSize :: Lens' MaxOperationListLength Int
veryBlockLike_fitness :: Lens' VeryBlockLike Fitness
veryBlockLike_hash :: Lens' VeryBlockLike BlockHash
veryBlockLike_level :: Lens' VeryBlockLike RawLevel
veryBlockLike_predecessor :: Lens' VeryBlockLike BlockHash
veryBlockLike_timestamp :: Lens' VeryBlockLike UTCTime
withProtocolHash_protocolHash :: forall a_a3IEj. Lens' (WithProtocolHash a_a3IEj) ProtocolHash
withProtocolHash_value :: forall a_a3IEj a_a3KoW. Lens (WithProtocolHash a_a3IEj) (WithProtocolHash a_a3KoW) a_a3IEj a_a3KoW
mkVeryBlockLike :: BlockLike b => b -> VeryBlockLike
data Ballots
Ballots :: Int -> Int -> Int -> Ballots
[_ballots_yay] :: Ballots -> Int
[_ballots_nay] :: Ballots -> Int
[_ballots_pass] :: Ballots -> Int
type VotingPeriod = Int32 " period: Voting_period_repr.t ;"
data VoterDelegate
VoterDelegate :: PublicKeyHash -> Int -> VoterDelegate
[_voterDelegate_pkh] :: VoterDelegate -> PublicKeyHash
[_voterDelegate_rolls] :: VoterDelegate -> Int
newtype ProposalVotes
ProposalVotes :: (ProtocolHash, Int) -> ProposalVotes
[unProposalVotes] :: ProposalVotes -> (ProtocolHash, Int)
ballots_nay :: Lens' Ballots Int
ballots_pass :: Lens' Ballots Int
ballots_yay :: Lens' Ballots Int
voterDelegate_pkh :: Lens' VoterDelegate PublicKeyHash
voterDelegate_rolls :: Lens' VoterDelegate Int

-- | "scripted.contracts": {
data ContractScript
ContractScript :: Expression -> Expression -> ContractScript
[_contractScript_code] :: ContractScript -> Expression
[_contractScript_storage] :: ContractScript -> Expression
type ManagerKey = Maybe PublicKey
data Account
Account :: !Maybe PublicKeyHash -> !Tez -> !Maybe ContractScript -> !Maybe Counter -> Account
[_account_delegate] :: Account -> !Maybe PublicKeyHash
[_account_balance] :: Account -> !Tez
[_account_script] :: Account -> !Maybe ContractScript
[_account_counter] :: Account -> !Maybe Counter
account_balance :: Lens' Account Tez
account_counter :: Lens' Account (Maybe Counter)
account_delegate :: Lens' Account (Maybe PublicKeyHash)
account_script :: Lens' Account (Maybe ContractScript)
data OperationResultDelegation
OperationResultDelegation :: OperationResultDelegation

-- | "kind": { "type": "string", "enum": [ "delegation" ] },
data OperationContentsDelegation
OperationContentsDelegation :: ManagerOperationMetadata OperationResultDelegation -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Maybe PublicKeyHash -> OperationContentsDelegation
[_operationContentsDelegation_metadata] :: OperationContentsDelegation -> ManagerOperationMetadata OperationResultDelegation
[_operationContentsDelegation_source] :: OperationContentsDelegation -> !ContractId
[_operationContentsDelegation_fee] :: OperationContentsDelegation -> !Tez
[_operationContentsDelegation_counter] :: OperationContentsDelegation -> !Counter
[_operationContentsDelegation_gasLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_storageLimit] :: OperationContentsDelegation -> !TezosPositiveBigNum
[_operationContentsDelegation_delegate] :: OperationContentsDelegation -> !Maybe PublicKeyHash
data OperationResultOrigination
OperationResultOrigination :: !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultOrigination
[_operationResultOrigination_balanceUpdates] :: OperationResultOrigination -> !Seq BalanceUpdate
[_operationResultOrigination_originatedContracts] :: OperationResultOrigination -> !Seq ContractId
[_operationResultOrigination_consumedGas] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_storageSize] :: OperationResultOrigination -> !TezosBigNum
[_operationResultOrigination_paidStorageSizeDiff] :: OperationResultOrigination -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "origination" ] },
data OperationContentsOrigination
OperationContentsOrigination :: ManagerOperationMetadata OperationResultOrigination -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !Maybe PublicKeyHash -> !ContractScript -> OperationContentsOrigination
[_operationContentsOrigination_metadata] :: OperationContentsOrigination -> ManagerOperationMetadata OperationResultOrigination
[_operationContentsOrigination_source] :: OperationContentsOrigination -> !ContractId
[_operationContentsOrigination_fee] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_counter] :: OperationContentsOrigination -> !Counter
[_operationContentsOrigination_gasLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_storageLimit] :: OperationContentsOrigination -> !TezosPositiveBigNum
[_operationContentsOrigination_balance] :: OperationContentsOrigination -> !Tez
[_operationContentsOrigination_delegate] :: OperationContentsOrigination -> !Maybe PublicKeyHash
[_operationContentsOrigination_script] :: OperationContentsOrigination -> !ContractScript

-- | "operation.alpha.operation_result.transaction": {
data OperationResultTransaction
OperationResultTransaction :: !Maybe Expression -> !Seq BalanceUpdate -> !Seq ContractId -> !TezosBigNum -> !TezosBigNum -> !TezosBigNum -> OperationResultTransaction
[_operationResultTransaction_storage] :: OperationResultTransaction -> !Maybe Expression
[_operationResultTransaction_balanceUpdates] :: OperationResultTransaction -> !Seq BalanceUpdate
[_operationResultTransaction_originatedContracts] :: OperationResultTransaction -> !Seq ContractId
[_operationResultTransaction_consumedGas] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_storageSize] :: OperationResultTransaction -> !TezosBigNum
[_operationResultTransaction_paidStorageSizeDiff] :: OperationResultTransaction -> !TezosBigNum

-- | "kind": { "type": "string", "enum": [ "transaction" ] },
data OperationContentsTransaction
OperationContentsTransaction :: ManagerOperationMetadata OperationResultTransaction -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !Tez -> !ContractId -> !Maybe OpParameters -> OperationContentsTransaction
[_operationContentsTransaction_metadata] :: OperationContentsTransaction -> ManagerOperationMetadata OperationResultTransaction
[_operationContentsTransaction_source] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_fee] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_counter] :: OperationContentsTransaction -> !Counter
[_operationContentsTransaction_gasLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_storageLimit] :: OperationContentsTransaction -> !TezosPositiveBigNum
[_operationContentsTransaction_amount] :: OperationContentsTransaction -> !Tez
[_operationContentsTransaction_destination] :: OperationContentsTransaction -> !ContractId
[_operationContentsTransaction_parameters] :: OperationContentsTransaction -> !Maybe OpParameters
data OperationResultReveal
OperationResultReveal :: OperationResultReveal

-- | "kind": { "type": "string", "enum": [ "reveal" ] },
data OperationContentsReveal
OperationContentsReveal :: ManagerOperationMetadata OperationResultReveal -> !ContractId -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !PublicKey -> OperationContentsReveal
[_operationContentsReveal_metadata] :: OperationContentsReveal -> ManagerOperationMetadata OperationResultReveal
[_operationContentsReveal_source] :: OperationContentsReveal -> !ContractId
[_operationContentsReveal_fee] :: OperationContentsReveal -> !Tez
[_operationContentsReveal_counter] :: OperationContentsReveal -> !Counter
[_operationContentsReveal_gasLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_storageLimit] :: OperationContentsReveal -> !TezosPositiveBigNum
[_operationContentsReveal_publicKey] :: OperationContentsReveal -> !PublicKey

-- | only certain combinations of status<i>errors</i>content are valid, but
--   ignore that for now
data OperationResult a
OperationResult :: !OperationResultStatus -> !Maybe (Seq JsonRpcError) -> !Maybe a -> OperationResult a
[_operationResult_status] :: OperationResult a -> !OperationResultStatus
[_operationResult_errors] :: OperationResult a -> !Maybe (Seq JsonRpcError)
[_operationResult_content] :: OperationResult a -> !Maybe a
data OperationResultStatus
OperationResultStatus_Applied :: OperationResultStatus
OperationResultStatus_Failed :: OperationResultStatus
OperationResultStatus_Skipped :: OperationResultStatus
OperationResultStatus_Backtracked :: OperationResultStatus
data InternalOperationContentsDelegation
InternalOperationContentsDelegation :: InternalOperationContentsDelegation
data InternalOperationContentsOrigination
InternalOperationContentsOrigination :: InternalOperationContentsOrigination
data InternalOperationContentsTransaction
InternalOperationContentsTransaction :: !ContractId -> !Word16 -> !Tez -> !ContractId -> !Maybe OpParameters -> !OperationResultTransaction -> InternalOperationContentsTransaction
[_internalOperationContentsTransaction_source] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_nonce] :: InternalOperationContentsTransaction -> !Word16
[_internalOperationContentsTransaction_amount] :: InternalOperationContentsTransaction -> !Tez
[_internalOperationContentsTransaction_destination] :: InternalOperationContentsTransaction -> !ContractId
[_internalOperationContentsTransaction_parameters] :: InternalOperationContentsTransaction -> !Maybe OpParameters
[_internalOperationContentsTransaction_result] :: InternalOperationContentsTransaction -> !OperationResultTransaction
data InternalOperationContentsReveal
InternalOperationContentsReveal :: InternalOperationContentsReveal
data InternalOperationResult
InternalOperationResult_Reveal :: !InternalOperationContentsReveal -> InternalOperationResult
InternalOperationResult_Transaction :: !InternalOperationContentsTransaction -> InternalOperationResult
InternalOperationResult_Origination :: !InternalOperationContentsOrigination -> InternalOperationResult
InternalOperationResult_Delegation :: !InternalOperationContentsDelegation -> InternalOperationResult
data ManagerOperationMetadata a
ManagerOperationMetadata :: !Seq BalanceUpdate -> !OperationResult a -> !Maybe (Seq InternalOperationResult) -> ManagerOperationMetadata a
[_managerOperationMetadata_balanceUpdates] :: ManagerOperationMetadata a -> !Seq BalanceUpdate
[_managerOperationMetadata_operationResult] :: ManagerOperationMetadata a -> !OperationResult a
[_managerOperationMetadata_internalOperationResults] :: ManagerOperationMetadata a -> !Maybe (Seq InternalOperationResult)

-- | "kind": { "type": "string", "enum": [ "ballot" ] },
data OperationContentsBallot
OperationContentsBallot :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OperationContentsBallot
[_operationContentsBallot_metadata] :: OperationContentsBallot -> !EmptyMetadata
[_operationContentsBallot_source] :: OperationContentsBallot -> !PublicKeyHash
[_operationContentsBallot_period] :: OperationContentsBallot -> !RawLevel
[_operationContentsBallot_proposal] :: OperationContentsBallot -> !ProtocolHash
[_operationContentsBallot_ballot] :: OperationContentsBallot -> !Ballot

-- | "ballot": { "type": "string", "enum": [ "nay", "yay", "pass" ] },
data Ballot
Ballot_Nay :: Ballot
Ballot_Yay :: Ballot
Ballot_Pass :: Ballot

-- | "kind": { "type": "string", "enum": [ "proposals" ] },
data OperationContentsProposals
OperationContentsProposals :: !EmptyMetadata -> !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OperationContentsProposals
[_operationContentsProposals_metadata] :: OperationContentsProposals -> !EmptyMetadata
[_operationContentsProposals_source] :: OperationContentsProposals -> !PublicKeyHash
[_operationContentsProposals_period] :: OperationContentsProposals -> !RawLevel
[_operationContentsProposals_proposals] :: OperationContentsProposals -> !Seq ProtocolHash
data ActivateMetadata
ActivateMetadata :: !Seq BalanceUpdate -> ActivateMetadata
[_activateMetadata_balanceUpdates] :: ActivateMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "activate_account" ] },
data OperationContentsActivateAccount
OperationContentsActivateAccount :: !ActivateMetadata -> !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OperationContentsActivateAccount
[_operationContentsActivateAccount_metadata] :: OperationContentsActivateAccount -> !ActivateMetadata
[_operationContentsActivateAccount_pkh] :: OperationContentsActivateAccount -> !Ed25519PublicKeyHash
[_operationContentsActivateAccount_secret] :: OperationContentsActivateAccount -> !Base16ByteString ByteString
data DoubleBakingEvidenceMetadata
DoubleBakingEvidenceMetadata :: !Seq BalanceUpdate -> DoubleBakingEvidenceMetadata
[_doubleBakingEvidenceMetadata_balanceUpdates] :: DoubleBakingEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_baking_evidence" ] },
data OperationContentsDoubleBakingEvidence
OperationContentsDoubleBakingEvidence :: !DoubleBakingEvidenceMetadata -> !BlockHeaderFull -> !BlockHeaderFull -> OperationContentsDoubleBakingEvidence
[_operationContentsDoubleBakingEvidence_metadata] :: OperationContentsDoubleBakingEvidence -> !DoubleBakingEvidenceMetadata
[_operationContentsDoubleBakingEvidence_bh1] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
[_operationContentsDoubleBakingEvidence_bh2] :: OperationContentsDoubleBakingEvidence -> !BlockHeaderFull
data DoubleEndorsementEvidenceMetadata
DoubleEndorsementEvidenceMetadata :: !Seq BalanceUpdate -> DoubleEndorsementEvidenceMetadata
[_doubleEndorsementEvidenceMetadata_balanceUpdates] :: DoubleEndorsementEvidenceMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "double_endorsement_evidence" ]
--   },
data OperationContentsDoubleEndorsementEvidence
OperationContentsDoubleEndorsementEvidence :: DoubleEndorsementEvidenceMetadata -> InlinedEndorsement -> InlinedEndorsement -> OperationContentsDoubleEndorsementEvidence
[_operationContentsDoubleEndorsementEvidence_metadata] :: OperationContentsDoubleEndorsementEvidence -> DoubleEndorsementEvidenceMetadata
[_operationContentsDoubleEndorsementEvidence_op1] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
[_operationContentsDoubleEndorsementEvidence_op2] :: OperationContentsDoubleEndorsementEvidence -> InlinedEndorsement
data InlinedEndorsementContents
InlinedEndorsementContents :: RawLevel -> InlinedEndorsementContents
[_inlinedEndorsementContents_level] :: InlinedEndorsementContents -> RawLevel
data InlinedEndorsement
InlinedEndorsement :: !BlockHash -> !InlinedEndorsementContents -> !Maybe Signature -> InlinedEndorsement
[_inlinedEndorsement_branch] :: InlinedEndorsement -> !BlockHash
[_inlinedEndorsement_operations] :: InlinedEndorsement -> !InlinedEndorsementContents
[_inlinedEndorsement_signature] :: InlinedEndorsement -> !Maybe Signature
data SeedNonceRevelationMetadata
SeedNonceRevelationMetadata :: !Seq BalanceUpdate -> SeedNonceRevelationMetadata
[_seedNonceRevelationMetadata_balanceUpdates] :: SeedNonceRevelationMetadata -> !Seq BalanceUpdate

-- | "kind": { "type": "string", "enum": [ "seed_nonce_revelation" ] },
data OperationContentsSeedNonceRevelation
OperationContentsSeedNonceRevelation :: SeedNonceRevelationMetadata -> RawLevel -> !Base16ByteString ByteString -> OperationContentsSeedNonceRevelation
[_operationContentsSeedNonceRevelation_metadata] :: OperationContentsSeedNonceRevelation -> SeedNonceRevelationMetadata
[_operationContentsSeedNonceRevelation_level] :: OperationContentsSeedNonceRevelation -> RawLevel
[_operationContentsSeedNonceRevelation_nonce] :: OperationContentsSeedNonceRevelation -> !Base16ByteString ByteString
data EndorsementMetadata
EndorsementMetadata :: !Seq BalanceUpdate -> !PublicKeyHash -> !Seq Word8 -> EndorsementMetadata
[_endorsementMetadata_balanceUpdates] :: EndorsementMetadata -> !Seq BalanceUpdate
[_endorsementMetadata_delegate] :: EndorsementMetadata -> !PublicKeyHash
[_endorsementMetadata_slots] :: EndorsementMetadata -> !Seq Word8

-- | "kind": { "type": "string", "enum": [ "endorsement" ] },
data OperationContentsEndorsement
OperationContentsEndorsement :: EndorsementMetadata -> RawLevel -> OperationContentsEndorsement
[_operationContentsEndorsement_metadata] :: OperationContentsEndorsement -> EndorsementMetadata
[_operationContentsEndorsement_level] :: OperationContentsEndorsement -> RawLevel
data OpContentsDelegation
OpContentsDelegation :: !Maybe PublicKeyHash -> OpContentsDelegation
[_opContentsDelegation_delegate] :: OpContentsDelegation -> !Maybe PublicKeyHash
data OpContentsOrigination
OpContentsOrigination :: !Tez -> !Maybe PublicKeyHash -> !ContractScript -> OpContentsOrigination
[_opContentsOrigination_balance] :: OpContentsOrigination -> !Tez
[_opContentsOrigination_delegate] :: OpContentsOrigination -> !Maybe PublicKeyHash
[_opContentsOrigination_script] :: OpContentsOrigination -> !ContractScript
data OpContentsTransaction
OpContentsTransaction :: !Tez -> !ContractId -> !Maybe OpParameters -> OpContentsTransaction
[_opContentsTransaction_amount] :: OpContentsTransaction -> !Tez
[_opContentsTransaction_destination] :: OpContentsTransaction -> !ContractId
[_opContentsTransaction_parameters] :: OpContentsTransaction -> !Maybe OpParameters
data OpParameters
OpParameters :: !Entrypoint -> !Expression -> OpParameters
[_opParameters_entrypoint] :: OpParameters -> !Entrypoint
[_opParameters_value] :: OpParameters -> !Expression
data Entrypoint
EntrypointDefault :: Entrypoint
EntrypointRoot :: Entrypoint
EntrypointDo :: Entrypoint
EntrypointSetDelegate :: Entrypoint
EntrypointRemoveDelegate :: Entrypoint
EntrypointOther :: !EntrypointName -> Entrypoint
newtype EntrypointName
EntrypointName :: ByteString -> EntrypointName
[unEntrypointName] :: EntrypointName -> ByteString
data OpContentsReveal
OpContentsReveal :: !PublicKey -> OpContentsReveal
[_opContentsReveal_publicKey] :: OpContentsReveal -> !PublicKey
data OpContentsManager op
OpContentsManager :: !PublicKeyHash -> !Tez -> !Counter -> !TezosPositiveBigNum -> !TezosPositiveBigNum -> !op -> OpContentsManager op
[_opContentsManager_source] :: OpContentsManager op -> !PublicKeyHash
[_opContentsManager_fee] :: OpContentsManager op -> !Tez
[_opContentsManager_counter] :: OpContentsManager op -> !Counter
[_opContentsManager_gasLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_storageLimit] :: OpContentsManager op -> !TezosPositiveBigNum
[_opContentsManager_operation] :: OpContentsManager op -> !op
data OpContentsBallot
OpContentsBallot :: !PublicKeyHash -> !RawLevel -> !ProtocolHash -> !Ballot -> OpContentsBallot
[_opContentsBallot_source] :: OpContentsBallot -> !PublicKeyHash
[_opContentsBallot_period] :: OpContentsBallot -> !RawLevel
[_opContentsBallot_proposal] :: OpContentsBallot -> !ProtocolHash
[_opContentsBallot_ballot] :: OpContentsBallot -> !Ballot
data OpContentsProposals
OpContentsProposals :: !PublicKeyHash -> !RawLevel -> !Seq ProtocolHash -> OpContentsProposals
[_opContentsProposals_source] :: OpContentsProposals -> !PublicKeyHash
[_opContentsProposals_period] :: OpContentsProposals -> !RawLevel
[_opContentsProposals_proposals] :: OpContentsProposals -> !Seq ProtocolHash
data OpContentsActivateAccount
OpContentsActivateAccount :: !Ed25519PublicKeyHash -> !Base16ByteString ByteString -> OpContentsActivateAccount
[_opContentsActivateAccount_pkh] :: OpContentsActivateAccount -> !Ed25519PublicKeyHash
[_opContentsActivateAccount_secret] :: OpContentsActivateAccount -> !Base16ByteString ByteString
data OpContentsDoubleBakingEvidence
OpContentsDoubleBakingEvidence :: !BlockHeaderFull -> !BlockHeaderFull -> OpContentsDoubleBakingEvidence
[_opContentsDoubleBakingEvidence_bh1] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
[_opContentsDoubleBakingEvidence_bh2] :: OpContentsDoubleBakingEvidence -> !BlockHeaderFull
data OpContentsDoubleEndorsementEvidence
OpContentsDoubleEndorsementEvidence :: !InlinedEndorsement -> !InlinedEndorsement -> OpContentsDoubleEndorsementEvidence
[_opContentsDoubleEndorsementEvidence_op1] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
[_opContentsDoubleEndorsementEvidence_op2] :: OpContentsDoubleEndorsementEvidence -> !InlinedEndorsement
data OpContentsSeedNonceRevelation
OpContentsSeedNonceRevelation :: !RawLevel -> !Base16ByteString ByteString -> OpContentsSeedNonceRevelation
[_opContentsSeedNonceRevelation_level] :: OpContentsSeedNonceRevelation -> !RawLevel
[_opContentsSeedNonceRevelation_nonce] :: OpContentsSeedNonceRevelation -> !Base16ByteString ByteString
data OpContentsEndorsement
OpContentsEndorsement :: !RawLevel -> OpContentsEndorsement
[_opContentsEndorsement_level] :: OpContentsEndorsement -> !RawLevel
data OpContents (a :: OpKind)
[OpContents_Endorsement] :: !OpContentsEndorsement -> OpContents  'OpKind_Endorsement
[OpContents_SeedNonceRevelation] :: !OpContentsSeedNonceRevelation -> OpContents  'OpKind_SeedNonceRevelation
[OpContents_DoubleEndorsementEvidence] :: !OpContentsDoubleEndorsementEvidence -> OpContents  'OpKind_DoubleEndorsementEvidence
[OpContents_DoubleBakingEvidence] :: !OpContentsDoubleBakingEvidence -> OpContents  'OpKind_DoubleBakingEvidence
[OpContents_ActivateAccount] :: !OpContentsActivateAccount -> OpContents  'OpKind_ActivateAccount
[OpContents_Proposals] :: !OpContentsProposals -> OpContents  'OpKind_Proposals
[OpContents_Ballot] :: !OpContentsBallot -> OpContents  'OpKind_Ballot
[OpContents_Reveal] :: !OpContentsManager OpContentsReveal -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Reveal])
[OpContents_Transaction] :: !OpContentsManager OpContentsTransaction -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Transaction])
[OpContents_Origination] :: !OpContentsManager OpContentsOrigination -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Origination])
[OpContents_Delegation] :: !OpContentsManager OpContentsDelegation -> OpContents ( 'OpKind_Manager '[ 'OpKindManager_Delegation])
data OpContentsList (a :: OpKind)
[OpContentsList_Single] :: OpContents a -> OpContentsList a
[OpContentsList_Cons] :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager (kk : ks)) -> OpContentsList ( 'OpKind_Manager (k : (kk : ks)))

-- | "operation.alpha.operation_contents_and_result": {
data OperationContents
OperationContents_Endorsement :: !OperationContentsEndorsement -> OperationContents
OperationContents_SeedNonceRevelation :: !OperationContentsSeedNonceRevelation -> OperationContents
OperationContents_DoubleEndorsementEvidence :: !OperationContentsDoubleEndorsementEvidence -> OperationContents
OperationContents_DoubleBakingEvidence :: !OperationContentsDoubleBakingEvidence -> OperationContents
OperationContents_ActivateAccount :: !OperationContentsActivateAccount -> OperationContents
OperationContents_Proposals :: !OperationContentsProposals -> OperationContents
OperationContents_Ballot :: !OperationContentsBallot -> OperationContents
OperationContents_Reveal :: !OperationContentsReveal -> OperationContents
OperationContents_Transaction :: !OperationContentsTransaction -> OperationContents
OperationContents_Origination :: !OperationContentsOrigination -> OperationContents
OperationContents_Delegation :: !OperationContentsDelegation -> OperationContents

-- | operation.alpha.operation_with_metadata { "contents": [
--   $operation.alpha.operation_contents_and_result ... ], "signature"?:
--   $Signature } || { "contents": [ $operation.alpha.contents ... ],
--   "signature"?: $Signature }
--   
--   This is the return value of the run_operation RPC.
data NoContextOperation
NoContextOperation :: !Seq OperationContents -> !Maybe Signature -> NoContextOperation
[_noContextOperation_contents] :: NoContextOperation -> !Seq OperationContents
[_noContextOperation_signature] :: NoContextOperation -> !Maybe Signature
data EmptyMetadata
EmptyMetadata :: EmptyMetadata

-- | This is also used in the mempool for operations that will not be
--   applied for one reason or another.
data ErroredOp (a :: OpKind)
ErroredOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Signature -> !Value -> ErroredOp
[_erroredOp_protocol] :: ErroredOp -> !ProtocolHash
[_erroredOp_branch] :: ErroredOp -> !BlockHash
[_erroredOp_contents] :: ErroredOp -> !OpContentsList a
[_erroredOp_signature] :: ErroredOp -> !Signature
[_erroredOp_error] :: ErroredOp -> !Value

-- | Like Op but with its own hash. Used in the mempool.
data PendingOp (a :: OpKind)
PendingOp :: !OperationHash -> !BlockHash -> !OpContentsList a -> !Signature -> PendingOp
[_pendingOp_hash] :: PendingOp -> !OperationHash
[_pendingOp_branch] :: PendingOp -> !BlockHash
[_pendingOp_contents] :: PendingOp -> !OpContentsList a
[_pendingOp_signature] :: PendingOp -> !Signature

-- | next_operation: { "protocol":
--   <a>Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd</a>, "branch":
--   $block_hash, "contents": [ $operation.alpha.contents ... ],
--   "signature": $Signature }
--   
--   Like Op but with a protocol hash added. Used in preapply.
data ProtoOp (a :: OpKind)
ProtoOp :: !ProtocolHash -> !BlockHash -> !OpContentsList a -> !Maybe Signature -> ProtoOp
[_protoOp_protocol] :: ProtoOp -> !ProtocolHash
[_protoOp_branch] :: ProtoOp -> !BlockHash
[_protoOp_contents] :: ProtoOp -> !OpContentsList a
[_protoOp_signature] :: ProtoOp -> !Maybe Signature
data OpWithChain a
OpWithChain :: !a -> !ChainId -> OpWithChain a
[_opWithChain_operation] :: OpWithChain a -> !a
[_opWithChain_chain_id] :: OpWithChain a -> !ChainId
data Op (a :: OpKind)
Op :: !BlockHash -> !OpContentsList a -> !Maybe Signature -> Op
[_op_branch] :: Op -> !BlockHash
[_op_contents] :: Op -> !OpContentsList a
[_op_signature] :: Op -> !Maybe Signature
data BatchableOp k
[BatchableOp] :: OpKindManagerTag k -> BatchableOp ( 'OpKind_Manager '[k])
data OpKindManagerTag opKindManager
[OpKindManagerTag_Reveal] :: OpKindManagerTag  'OpKindManager_Reveal
[OpKindManagerTag_Transaction] :: OpKindManagerTag  'OpKindManager_Transaction
[OpKindManagerTag_Origination] :: OpKindManagerTag  'OpKindManager_Origination
[OpKindManagerTag_Delegation] :: OpKindManagerTag  'OpKindManager_Delegation
data OpKindManager
OpKindManager_Reveal :: OpKindManager
OpKindManager_Transaction :: OpKindManager
OpKindManager_Origination :: OpKindManager
OpKindManager_Delegation :: OpKindManager
data OpsKindTag opKinds
[OpsKindTag_Single] :: OpKindTag k -> OpsKindTag k
[OpsKindTag_Cons] :: OpKindTag ( 'OpKind_Manager (k : '[])) -> OpsKindTag ( 'OpKind_Manager (kk : ks)) -> OpsKindTag ( 'OpKind_Manager (k : (kk : ks)))
data OpKindTag opKind
[OpKindTag_Endorsement] :: OpKindTag  'OpKind_Endorsement
[OpKindTag_SeedNonceRevelation] :: OpKindTag  'OpKind_SeedNonceRevelation
[OpKindTag_DoubleEndorsementEvidence] :: OpKindTag  'OpKind_DoubleEndorsementEvidence
[OpKindTag_DoubleBakingEvidence] :: OpKindTag  'OpKind_DoubleBakingEvidence
[OpKindTag_ActivateAccount] :: OpKindTag  'OpKind_ActivateAccount
[OpKindTag_Proposals] :: OpKindTag  'OpKind_Proposals
[OpKindTag_Ballot] :: OpKindTag  'OpKind_Ballot
[OpKindTag_Manager] :: OpKindManagerTag opKindManager -> OpKindTag ( 'OpKind_Manager (opKindManager : '[]))
data OpKind
OpKind_SeedNonceRevelation :: OpKind
OpKind_DoubleEndorsementEvidence :: OpKind
OpKind_DoubleBakingEvidence :: OpKind
OpKind_ActivateAccount :: OpKind
OpKind_Endorsement :: OpKind
OpKind_Proposals :: OpKind
OpKind_Ballot :: OpKind
OpKind_Manager :: [OpKindManager] -> OpKind
data OperationWithMetadata
OperationWithMetadata :: !Seq OperationContents -> !Maybe Signature -> OperationWithMetadata
[_operationWithMetadata_contents] :: OperationWithMetadata -> !Seq OperationContents
[_operationWithMetadata_signature] :: OperationWithMetadata -> !Maybe Signature

-- | "operation": {
data Operation
Operation :: !ProtocolHash -> !ChainId -> !OperationHash -> !BlockHash -> !Seq OperationContents -> !Maybe Signature -> Operation
[_operation_protocol] :: Operation -> !ProtocolHash
[_operation_chainId] :: Operation -> !ChainId
[_operation_hash] :: Operation -> !OperationHash
[_operation_branch] :: Operation -> !BlockHash
[_operation_contents] :: Operation -> !Seq OperationContents
[_operation_signature] :: Operation -> !Maybe Signature
stripOpProtocol :: ProtoOp a -> Op a
entrypointName :: MonadFail m => ByteString -> m EntrypointName
stripEndorsement :: Operation -> Maybe (Op  'OpKind_Endorsement)
outlineEndorsement :: InlinedEndorsement -> Op  'OpKind_Endorsement
nonce_size :: Int
activation_code_size :: Int
jsonAddKeys :: [(Text, Value)] -> Value -> Value
checkBatch :: MonadFail m => [DSum OpKindTag OpContents] -> m (DSum OpsKindTag OpContentsList)
_OperationContents_Endorsement :: Prism' OperationContents OperationContentsEndorsement
_OperationContents_SeedNonceRevelation :: Prism' OperationContents OperationContentsSeedNonceRevelation
_OperationContents_DoubleEndorsementEvidence :: Prism' OperationContents OperationContentsDoubleEndorsementEvidence
_OperationContents_DoubleBakingEvidence :: Prism' OperationContents OperationContentsDoubleBakingEvidence
_OperationContents_ActivateAccount :: Prism' OperationContents OperationContentsActivateAccount
_OperationContents_Proposals :: Prism' OperationContents OperationContentsProposals
_OperationContents_Ballot :: Prism' OperationContents OperationContentsBallot
_OperationContents_Reveal :: Prism' OperationContents OperationContentsReveal
_OperationContents_Transaction :: Prism' OperationContents OperationContentsTransaction
_OperationContents_Origination :: Prism' OperationContents OperationContentsOrigination
_OperationContents_Delegation :: Prism' OperationContents OperationContentsDelegation
_EntrypointDefault :: Prism' Entrypoint ()
_EntrypointRoot :: Prism' Entrypoint ()
_EntrypointDo :: Prism' Entrypoint ()
_EntrypointSetDelegate :: Prism' Entrypoint ()
_EntrypointRemoveDelegate :: Prism' Entrypoint ()
_EntrypointOther :: Prism' Entrypoint EntrypointName
_InternalOperationResult_Reveal :: Prism' InternalOperationResult InternalOperationContentsReveal
_InternalOperationResult_Transaction :: Prism' InternalOperationResult InternalOperationContentsTransaction
_InternalOperationResult_Origination :: Prism' InternalOperationResult InternalOperationContentsOrigination
_InternalOperationResult_Delegation :: Prism' InternalOperationResult InternalOperationContentsDelegation
_OpContentsList_Single :: forall a_a4w3X. Prism' (OpContentsList a_a4w3X) (OpContents a_a4w3X)
_OpContentsList_Cons :: forall a_a4w3X k_a4E3f kk_a4E3g ks_a4E3h. a_a4w3X ~  'OpKind_Manager ( '(:) k_a4E3f ( '(:) kk_a4E3g ks_a4E3h)) => Review (OpContentsList a_a4w3X) (OpContents ( 'OpKind_Manager ( '(:) k_a4E3f ('[] :: [OpKindManager]))), OpContentsList ( 'OpKind_Manager ( '(:) kk_a4E3g ks_a4E3h)))
_OperationResultStatus_Applied :: Prism' OperationResultStatus ()
_OperationResultStatus_Failed :: Prism' OperationResultStatus ()
_OperationResultStatus_Skipped :: Prism' OperationResultStatus ()
_OperationResultStatus_Backtracked :: Prism' OperationResultStatus ()
operation_branch :: Lens' Operation BlockHash
operation_chainId :: Lens' Operation ChainId
operation_contents :: Lens' Operation (Seq OperationContents)
operation_hash :: Lens' Operation OperationHash
operation_protocol :: Lens' Operation ProtocolHash
operation_signature :: Lens' Operation (Maybe Signature)
noContextOperation_contents :: Lens' NoContextOperation (Seq OperationContents)
noContextOperation_signature :: Lens' NoContextOperation (Maybe Signature)
activateMetadata_balanceUpdates :: Iso' ActivateMetadata (Seq BalanceUpdate)
doubleBakingEvidenceMetadata_balanceUpdates :: Iso' DoubleBakingEvidenceMetadata (Seq BalanceUpdate)
doubleEndorsementEvidenceMetadata_balanceUpdates :: Iso' DoubleEndorsementEvidenceMetadata (Seq BalanceUpdate)
endorsementMetadata_balanceUpdates :: Lens' EndorsementMetadata (Seq BalanceUpdate)
endorsementMetadata_delegate :: Lens' EndorsementMetadata PublicKeyHash
endorsementMetadata_slots :: Lens' EndorsementMetadata (Seq Word8)
inlinedEndorsement_branch :: Lens' InlinedEndorsement BlockHash
inlinedEndorsement_operations :: Lens' InlinedEndorsement InlinedEndorsementContents
inlinedEndorsement_signature :: Lens' InlinedEndorsement (Maybe Signature)
inlinedEndorsementContents_level :: Iso' InlinedEndorsementContents RawLevel
internalOperationContentsTransaction_amount :: Lens' InternalOperationContentsTransaction Tez
internalOperationContentsTransaction_destination :: Lens' InternalOperationContentsTransaction ContractId
internalOperationContentsTransaction_nonce :: Lens' InternalOperationContentsTransaction Word16
internalOperationContentsTransaction_parameters :: Lens' InternalOperationContentsTransaction (Maybe OpParameters)
internalOperationContentsTransaction_result :: Lens' InternalOperationContentsTransaction OperationResultTransaction
internalOperationContentsTransaction_source :: Lens' InternalOperationContentsTransaction ContractId
managerOperationMetadata_balanceUpdates :: forall a_a4w3U. Lens' (ManagerOperationMetadata a_a4w3U) (Seq BalanceUpdate)
managerOperationMetadata_internalOperationResults :: forall a_a4w3U. Lens' (ManagerOperationMetadata a_a4w3U) (Maybe (Seq InternalOperationResult))
managerOperationMetadata_operationResult :: forall a_a4w3U a_a4E5J. Lens (ManagerOperationMetadata a_a4w3U) (ManagerOperationMetadata a_a4E5J) (OperationResult a_a4w3U) (OperationResult a_a4E5J)
operationContentsActivateAccount_metadata :: Lens' OperationContentsActivateAccount ActivateMetadata
operationContentsActivateAccount_pkh :: Lens' OperationContentsActivateAccount Ed25519PublicKeyHash
operationContentsActivateAccount_secret :: Lens' OperationContentsActivateAccount (Base16ByteString ByteString)
operationContentsBallot_ballot :: Lens' OperationContentsBallot Ballot
operationContentsBallot_metadata :: Lens' OperationContentsBallot EmptyMetadata
operationContentsBallot_period :: Lens' OperationContentsBallot RawLevel
operationContentsBallot_proposal :: Lens' OperationContentsBallot ProtocolHash
operationContentsBallot_source :: Lens' OperationContentsBallot PublicKeyHash
operationContentsDelegation_counter :: Lens' OperationContentsDelegation Counter
operationContentsDelegation_delegate :: Lens' OperationContentsDelegation (Maybe PublicKeyHash)
operationContentsDelegation_fee :: Lens' OperationContentsDelegation Tez
operationContentsDelegation_gasLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDelegation_metadata :: Lens' OperationContentsDelegation (ManagerOperationMetadata OperationResultDelegation)
operationContentsDelegation_source :: Lens' OperationContentsDelegation ContractId
operationContentsDelegation_storageLimit :: Lens' OperationContentsDelegation TezosPositiveBigNum
operationContentsDoubleBakingEvidence_bh1 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_bh2 :: Lens' OperationContentsDoubleBakingEvidence BlockHeaderFull
operationContentsDoubleBakingEvidence_metadata :: Lens' OperationContentsDoubleBakingEvidence DoubleBakingEvidenceMetadata
operationContentsDoubleEndorsementEvidence_metadata :: Lens' OperationContentsDoubleEndorsementEvidence DoubleEndorsementEvidenceMetadata
operationContentsDoubleEndorsementEvidence_op1 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsDoubleEndorsementEvidence_op2 :: Lens' OperationContentsDoubleEndorsementEvidence InlinedEndorsement
operationContentsEndorsement_level :: Lens' OperationContentsEndorsement RawLevel
operationContentsEndorsement_metadata :: Lens' OperationContentsEndorsement EndorsementMetadata
operationContentsOrigination_balance :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_counter :: Lens' OperationContentsOrigination Counter
operationContentsOrigination_delegate :: Lens' OperationContentsOrigination (Maybe PublicKeyHash)
operationContentsOrigination_fee :: Lens' OperationContentsOrigination Tez
operationContentsOrigination_gasLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsOrigination_metadata :: Lens' OperationContentsOrigination (ManagerOperationMetadata OperationResultOrigination)
operationContentsOrigination_script :: Lens' OperationContentsOrigination ContractScript
operationContentsOrigination_source :: Lens' OperationContentsOrigination ContractId
operationContentsOrigination_storageLimit :: Lens' OperationContentsOrigination TezosPositiveBigNum
operationContentsProposals_metadata :: Lens' OperationContentsProposals EmptyMetadata
operationContentsProposals_period :: Lens' OperationContentsProposals RawLevel
operationContentsProposals_proposals :: Lens' OperationContentsProposals (Seq ProtocolHash)
operationContentsProposals_source :: Lens' OperationContentsProposals PublicKeyHash
operationContentsReveal_counter :: Lens' OperationContentsReveal Counter
operationContentsReveal_fee :: Lens' OperationContentsReveal Tez
operationContentsReveal_gasLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsReveal_metadata :: Lens' OperationContentsReveal (ManagerOperationMetadata OperationResultReveal)
operationContentsReveal_publicKey :: Lens' OperationContentsReveal PublicKey
operationContentsReveal_source :: Lens' OperationContentsReveal ContractId
operationContentsReveal_storageLimit :: Lens' OperationContentsReveal TezosPositiveBigNum
operationContentsSeedNonceRevelation_level :: Lens' OperationContentsSeedNonceRevelation RawLevel
operationContentsSeedNonceRevelation_metadata :: Lens' OperationContentsSeedNonceRevelation SeedNonceRevelationMetadata
operationContentsSeedNonceRevelation_nonce :: Lens' OperationContentsSeedNonceRevelation (Base16ByteString ByteString)
operationContentsTransaction_amount :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_counter :: Lens' OperationContentsTransaction Counter
operationContentsTransaction_destination :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_fee :: Lens' OperationContentsTransaction Tez
operationContentsTransaction_gasLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationContentsTransaction_metadata :: Lens' OperationContentsTransaction (ManagerOperationMetadata OperationResultTransaction)
operationContentsTransaction_parameters :: Lens' OperationContentsTransaction (Maybe OpParameters)
operationContentsTransaction_source :: Lens' OperationContentsTransaction ContractId
operationContentsTransaction_storageLimit :: Lens' OperationContentsTransaction TezosPositiveBigNum
operationResult_content :: forall a_a4w3T a_a4Edh. Lens (OperationResult a_a4w3T) (OperationResult a_a4Edh) (Maybe a_a4w3T) (Maybe a_a4Edh)
operationResult_errors :: forall a_a4w3T. Lens' (OperationResult a_a4w3T) (Maybe (Seq JsonRpcError))
operationResult_status :: forall a_a4w3T. Lens' (OperationResult a_a4w3T) OperationResultStatus
operationResultOrigination_balanceUpdates :: Lens' OperationResultOrigination (Seq BalanceUpdate)
operationResultOrigination_consumedGas :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_originatedContracts :: Lens' OperationResultOrigination (Seq ContractId)
operationResultOrigination_paidStorageSizeDiff :: Lens' OperationResultOrigination TezosBigNum
operationResultOrigination_storageSize :: Lens' OperationResultOrigination TezosBigNum
operationResultTransaction_balanceUpdates :: Lens' OperationResultTransaction (Seq BalanceUpdate)
operationResultTransaction_consumedGas :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_originatedContracts :: Lens' OperationResultTransaction (Seq ContractId)
operationResultTransaction_paidStorageSizeDiff :: Lens' OperationResultTransaction TezosBigNum
operationResultTransaction_storage :: Lens' OperationResultTransaction (Maybe Expression)
operationResultTransaction_storageSize :: Lens' OperationResultTransaction TezosBigNum
operationWithMetadata_contents :: Lens' OperationWithMetadata (Seq OperationContents)
operationWithMetadata_signature :: Lens' OperationWithMetadata (Maybe Signature)
op_branch :: forall a_a4w46. Lens' (Op a_a4w46) BlockHash
op_contents :: forall a_a4w46 a_a4Ef1. Lens (Op a_a4w46) (Op a_a4Ef1) (OpContentsList a_a4w46) (OpContentsList a_a4Ef1)
op_signature :: forall a_a4w46. Lens' (Op a_a4w46) (Maybe Signature)
opContentsEndorsement_level :: Iso' OpContentsEndorsement RawLevel
opContentsManager_counter :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) Counter
opContentsManager_fee :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) Tez
opContentsManager_gasLimit :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) TezosPositiveBigNum
opContentsManager_operation :: forall op_a4w3V op_a4Efj. Lens (OpContentsManager op_a4w3V) (OpContentsManager op_a4Efj) op_a4w3V op_a4Efj
opContentsManager_source :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) PublicKeyHash
opContentsManager_storageLimit :: forall op_a4w3V. Lens' (OpContentsManager op_a4w3V) TezosPositiveBigNum
opContentsTransaction_amount :: Lens' OpContentsTransaction Tez
opContentsTransaction_destination :: Lens' OpContentsTransaction ContractId
opContentsTransaction_parameters :: Lens' OpContentsTransaction (Maybe OpParameters)
opContentsOrigination_balance :: Lens' OpContentsOrigination Tez
opContentsOrigination_delegate :: Lens' OpContentsOrigination (Maybe PublicKeyHash)
opContentsOrigination_script :: Lens' OpContentsOrigination ContractScript
seedNonceRevelationMetadata_balanceUpdates :: Iso' SeedNonceRevelationMetadata (Seq BalanceUpdate)
opParameters_entrypoint :: Lens' OpParameters Entrypoint
opParameters_value :: Lens' OpParameters Expression
mkOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Maybe Signature -> DSum OpsKindTag Op
mkSignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> Signature -> DSum OpsKindTag Op
mkUnsignedOp :: BlockHash -> DSum OpsKindTag OpContentsList -> DSum OpsKindTag Op
batchOperations :: NonEmpty (DSum BatchableOp OpContents) -> DSum OpsKindTag OpContentsList
consOpTags :: OpKindManagerTag k -> OpsKindTag ( 'OpKind_Manager ks) -> OpsKindTag ( 'OpKind_Manager (k : ks))
consOpContents :: OpContents ( 'OpKind_Manager '[k]) -> OpContentsList ( 'OpKind_Manager ks) -> OpContentsList ( 'OpKind_Manager (k : ks))
batchUnfoldrM :: forall m a. Monad m => (a -> m (DSum BatchableOp OpContents, Maybe a)) -> a -> m (DSum OpsKindTag OpContentsList)
data Mempool
Mempool :: [DSum OpsKindTag PendingOp] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ErroredOp)] -> [(OperationHash, DSum OpsKindTag ProtoOp)] -> Mempool
[_mempool_applied] :: Mempool -> [DSum OpsKindTag PendingOp]
[_mempool_refused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchRefused] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_branchDelayed] :: Mempool -> [(OperationHash, DSum OpsKindTag ErroredOp)]
[_mempool_unprocessed] :: Mempool -> [(OperationHash, DSum OpsKindTag ProtoOp)]
data Envelope
Envelope_BlockHeader :: !ChainId -> !BlockHeaderFull -> Envelope
Envelope_Endorsement :: !ChainId -> !Op  'OpKind_Endorsement -> Envelope
data MonitorBlock
MonitorBlock :: !BlockHash -> !RawLevel -> !Word8 -> !BlockHash -> !UTCTime -> !Word8 -> !OperationListListHash -> !Fitness -> !ContextHash -> MonitorBlock
[_monitorBlock_hash] :: MonitorBlock -> !BlockHash
[_monitorBlock_level] :: MonitorBlock -> !RawLevel
[_monitorBlock_proto] :: MonitorBlock -> !Word8
[_monitorBlock_predecessor] :: MonitorBlock -> !BlockHash
[_monitorBlock_timestamp] :: MonitorBlock -> !UTCTime
[_monitorBlock_validationPass] :: MonitorBlock -> !Word8
[_monitorBlock_operationsHash] :: MonitorBlock -> !OperationListListHash
[_monitorBlock_fitness] :: MonitorBlock -> !Fitness
[_monitorBlock_context] :: MonitorBlock -> !ContextHash

-- | "description": "All the information about a block.",
data Block
Block :: !ProtocolHash -> !ChainId -> !BlockHash -> !BlockHeaderFull -> !BlockMetadata -> !Seq (Seq Operation) -> Block
[_block_protocol] :: Block -> !ProtocolHash
[_block_chainId] :: Block -> !ChainId
[_block_hash] :: Block -> !BlockHash
[_block_header] :: Block -> !BlockHeaderFull
[_block_metadata] :: Block -> !BlockMetadata
[_block_operations] :: Block -> !Seq (Seq Operation)
toBlockHeader :: Block -> BlockHeader
block_chainId :: Lens' Block ChainId
block_hash :: Lens' Block BlockHash
block_header :: Lens' Block BlockHeaderFull
block_metadata :: Lens' Block BlockMetadata
block_operations :: Lens' Block (Seq (Seq Operation))
block_protocol :: Lens' Block ProtocolHash
monitorBlock_context :: Lens' MonitorBlock ContextHash
monitorBlock_fitness :: Lens' MonitorBlock Fitness
monitorBlock_hash :: Lens' MonitorBlock BlockHash
monitorBlock_level :: Lens' MonitorBlock RawLevel
monitorBlock_operationsHash :: Lens' MonitorBlock OperationListListHash
monitorBlock_predecessor :: Lens' MonitorBlock BlockHash
monitorBlock_proto :: Lens' MonitorBlock Word8
monitorBlock_timestamp :: Lens' MonitorBlock UTCTime
monitorBlock_validationPass :: Lens' MonitorBlock Word8
data ProtoInfo
ProtoInfo :: !Word8 -> !Word8 -> !Word8 -> !Int -> !Cycle -> !RawLevel -> !RawLevel -> !RawLevel -> !RawLevel -> !PeriodSequence -> !Word16 -> !TezosBigNum -> !TezosBigNum -> !TezosInt64 -> !Tez -> !Word16 -> !Tez -> !Tez -> !Int -> !Tez -> !Tez -> !Tez -> !Tez -> !Tez -> !TezosBigNum -> !Maybe TezosInt64 -> !Maybe Word16 -> !Maybe Int -> !Maybe Int -> !Maybe Int -> ProtoInfo
[_protoInfo_proofOfWorkNonceSize] :: ProtoInfo -> !Word8
[_protoInfo_nonceLength] :: ProtoInfo -> !Word8
[_protoInfo_maxRevelationsPerBlock] :: ProtoInfo -> !Word8
[_protoInfo_maxOperationDataLength] :: ProtoInfo -> !Int
[_protoInfo_preservedCycles] :: ProtoInfo -> !Cycle
[_protoInfo_blocksPerCycle] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerCommitment] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerRollSnapshot] :: ProtoInfo -> !RawLevel
[_protoInfo_blocksPerVotingPeriod] :: ProtoInfo -> !RawLevel
[_protoInfo_timeBetweenBlocks] :: ProtoInfo -> !PeriodSequence
[_protoInfo_endorsersPerBlock] :: ProtoInfo -> !Word16
[_protoInfo_hardGasLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_hardGasLimitPerBlock] :: ProtoInfo -> !TezosBigNum
[_protoInfo_proofOfWorkThreshold] :: ProtoInfo -> !TezosInt64
[_protoInfo_tokensPerRoll] :: ProtoInfo -> !Tez
[_protoInfo_michelsonMaximumTypeSize] :: ProtoInfo -> !Word16
[_protoInfo_seedNonceRevelationTip] :: ProtoInfo -> !Tez
[_protoInfo_originationBurn] :: ProtoInfo -> !Tez
[_protoInfo_originationSize] :: ProtoInfo -> !Int
[_protoInfo_blockSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_endorsementSecurityDeposit] :: ProtoInfo -> !Tez
[_protoInfo_blockReward] :: ProtoInfo -> !Tez
[_protoInfo_endorsementReward] :: ProtoInfo -> !Tez
[_protoInfo_costPerByte] :: ProtoInfo -> !Tez
[_protoInfo_hardStorageLimitPerOperation] :: ProtoInfo -> !TezosBigNum
[_protoInfo_delayPerMissingEndorsement] :: ProtoInfo -> !Maybe TezosInt64
[_protoInfo_initialEndorsers] :: ProtoInfo -> !Maybe Word16
[_protoInfo_quorumMin] :: ProtoInfo -> !Maybe Int
[_protoInfo_quorumMax] :: ProtoInfo -> !Maybe Int
[_protoInfo_minProposalQuorum] :: ProtoInfo -> !Maybe Int
calcTimeBetweenBlocks :: ProtoInfo -> NominalDiffTime
protoInfo_blockReward :: Lens' ProtoInfo Tez
protoInfo_blockSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_blocksPerCommitment :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerCycle :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerRollSnapshot :: Lens' ProtoInfo RawLevel
protoInfo_blocksPerVotingPeriod :: Lens' ProtoInfo RawLevel
protoInfo_costPerByte :: Lens' ProtoInfo Tez
protoInfo_delayPerMissingEndorsement :: Lens' ProtoInfo (Maybe TezosInt64)
protoInfo_endorsementReward :: Lens' ProtoInfo Tez
protoInfo_endorsementSecurityDeposit :: Lens' ProtoInfo Tez
protoInfo_endorsersPerBlock :: Lens' ProtoInfo Word16
protoInfo_hardGasLimitPerBlock :: Lens' ProtoInfo TezosBigNum
protoInfo_hardGasLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_hardStorageLimitPerOperation :: Lens' ProtoInfo TezosBigNum
protoInfo_initialEndorsers :: Lens' ProtoInfo (Maybe Word16)
protoInfo_maxOperationDataLength :: Lens' ProtoInfo Int
protoInfo_maxRevelationsPerBlock :: Lens' ProtoInfo Word8
protoInfo_michelsonMaximumTypeSize :: Lens' ProtoInfo Word16
protoInfo_minProposalQuorum :: Lens' ProtoInfo (Maybe Int)
protoInfo_nonceLength :: Lens' ProtoInfo Word8
protoInfo_originationBurn :: Lens' ProtoInfo Tez
protoInfo_originationSize :: Lens' ProtoInfo Int
protoInfo_preservedCycles :: Lens' ProtoInfo Cycle
protoInfo_proofOfWorkNonceSize :: Lens' ProtoInfo Word8
protoInfo_proofOfWorkThreshold :: Lens' ProtoInfo TezosInt64
protoInfo_quorumMax :: Lens' ProtoInfo (Maybe Int)
protoInfo_quorumMin :: Lens' ProtoInfo (Maybe Int)
protoInfo_seedNonceRevelationTip :: Lens' ProtoInfo Tez
protoInfo_timeBetweenBlocks :: Lens' ProtoInfo PeriodSequence
protoInfo_tokensPerRoll :: Lens' ProtoInfo Tez
predictFutureTimestamp :: BlockLike blk => ProtoInfo -> RawLevel -> blk -> UTCTime

module Tezos.V005.NodeRPC.CrossCompat
data AccountCrossCompat
AccountV004 :: Account -> AccountCrossCompat
AccountV005 :: Account -> AccountCrossCompat
accountCrossCompat_delegatePkh :: Getter AccountCrossCompat (Maybe PublicKeyHash)
data ManagerKeyCrossCompat
ManagerKeyV004 :: ManagerKey -> ManagerKeyCrossCompat
ManagerKeyV005 :: ManagerKey -> ManagerKeyCrossCompat
managerKeyCrossCompat_key :: Getter ManagerKeyCrossCompat (Maybe PublicKey)
data BlockCrossCompat
BlockV004 :: Block -> BlockCrossCompat
BlockV005 :: Block -> BlockCrossCompat
blockCrossCata :: (Block -> a) -> (Block -> a) -> BlockCrossCompat -> a
instance GHC.Show.Show Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance GHC.Classes.Eq Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance GHC.Show.Show Tezos.V005.NodeRPC.CrossCompat.ManagerKeyCrossCompat
instance GHC.Classes.Eq Tezos.V005.NodeRPC.CrossCompat.ManagerKeyCrossCompat
instance GHC.Show.Show Tezos.V005.NodeRPC.CrossCompat.AccountCrossCompat
instance GHC.Classes.Eq Tezos.V005.NodeRPC.CrossCompat.AccountCrossCompat
instance Tezos.V004.Block.HasProtocolHash Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Tezos.V004.Block.HasChainId Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Tezos.V004.Block.HasBlockMetadata Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Tezos.V004.Block.HasBlockHeaderFull Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Tezos.V004.Block.BlockLike Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Tezos.V004.BalanceUpdate.HasBalanceUpdates Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.NodeRPC.CrossCompat.BlockCrossCompat
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.NodeRPC.CrossCompat.ManagerKeyCrossCompat
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.NodeRPC.CrossCompat.ManagerKeyCrossCompat
instance Data.Aeson.Types.FromJSON.FromJSON Tezos.V005.NodeRPC.CrossCompat.AccountCrossCompat
instance Data.Aeson.Types.ToJSON.ToJSON Tezos.V005.NodeRPC.CrossCompat.AccountCrossCompat

module Tezos.V005.NodeRPC.Class
class QueryChain repr
rChain :: QueryChain repr => repr ChainId
type family ChainType (repr :: * -> *) :: *
class QueryBlock (repr :: * -> *) where {
    type family BlockType repr;
    type family BlockHeaderType repr;
}
rHead :: QueryBlock repr => ChainType repr -> repr (BlockType repr)
rBlock :: QueryBlock repr => ChainType repr -> BlockHash -> repr (BlockType repr)
rBlockHeader :: QueryBlock repr => ChainType repr -> BlockHash -> repr (BlockHeaderType repr)
class QueryHistory repr
rBlocks :: QueryHistory repr => ChainId -> RawLevel -> Set BlockHash -> repr (Map BlockHash (Seq BlockHash))
rBlockPred :: QueryHistory repr => RawLevel -> ChainId -> BlockHash -> repr (BlockType repr)
rProtoConstants :: QueryHistory repr => ChainId -> BlockHash -> repr ProtoInfo
rContract :: QueryHistory repr => ContractId -> ChainType repr -> BlockHash -> repr AccountCrossCompat
rBallots :: QueryHistory repr => ChainId -> BlockHash -> repr Ballots
rListings :: QueryHistory repr => ChainId -> BlockHash -> repr (Seq VoterDelegate)
rProposals :: QueryHistory repr => ChainId -> BlockHash -> repr (Seq ProposalVotes)
rCurrentProposal :: QueryHistory repr => ChainId -> BlockHash -> repr (Maybe ProtocolHash)
rCurrentQuorum :: QueryHistory repr => ChainId -> BlockHash -> repr Int
rBallot :: QueryHistory repr => ChainId -> BlockHash -> PublicKeyHash -> repr (Maybe Ballot)
rProposalVote :: QueryHistory repr => ChainId -> BlockHash -> PublicKeyHash -> repr (Set ProtocolHash)
rManagerKey :: QueryHistory repr => ContractId -> ChainId -> BlockHash -> repr ManagerKeyCrossCompat
rBakingRights :: QueryHistory repr => Set (Either RawLevel Cycle) -> ChainId -> BlockHash -> repr (Seq BakingRights)
rBakingRightsFull :: QueryHistory repr => Set (Either RawLevel Cycle) -> Int -> ChainId -> BlockHash -> repr (Seq BakingRights)
rEndorsingRights :: QueryHistory repr => Set (Either RawLevel Cycle) -> ChainId -> BlockHash -> repr (Seq EndorsingRights)
rDelegateInfo :: QueryHistory repr => PublicKeyHash -> ChainId -> BlockHash -> repr DelegateInfo
rRunOperation :: QueryHistory repr => ChainId -> BlockHash -> OpWithChain (DSum OpsKindTag Op) -> repr OperationWithMetadata
class QueryNode repr
rConnections :: QueryNode repr => repr Word64
rNetworkStat :: QueryNode repr => repr NetworkStat
rCheckpoint :: QueryNode repr => ChainId -> repr Checkpoint
class MonitorHeads repr
rMonitorHeads :: MonitorHeads repr => ChainId -> repr MonitorBlock
class Injection repr
rInjectOperation :: Injection repr => DSum OpsKindTag Op -> repr OperationHash
data RpcQuery a
RpcQuery :: (ByteString -> Either String a) -> Encoding -> Method -> Text -> RpcQuery a
[_RpcQuery_decoder] :: RpcQuery a -> ByteString -> Either String a
[_RpcQuery_body] :: RpcQuery a -> Encoding
[_RpcQuery_method] :: RpcQuery a -> Method
[_RpcQuery_resource] :: RpcQuery a -> Text
plainNodeRequest :: FromJSON a => Method -> Text -> RpcQuery a
postNodeRequest :: (ToJSON b, FromJSON a) => b -> Text -> RpcQuery a
newtype PlainNode a
PlainNode :: RpcQuery a -> PlainNode a
newtype PlainNodeStream a
PlainNodeStream :: RpcQuery a -> PlainNodeStream a
chainAPI :: FromJSON a => Text -> ChainId -> RpcQuery a
chainAPI' :: FromJSON a => Text -> ChainTag -> RpcQuery a
blockAPI :: FromJSON a => Text -> ChainId -> BlockHash -> RpcQuery a
blockAPI' :: FromJSON a => Text -> ChainTag -> BlockHash -> RpcQuery a
chainBlockUrl :: ChainId -> BlockHash -> Text
chainBlockUrl' :: ChainTag -> BlockHash -> Text
dynamicParamRightsRangeToQueryArg :: Either RawLevel Cycle -> Text
instance GHC.Base.Functor Tezos.V005.NodeRPC.Class.RpcQuery
instance Tezos.V005.NodeRPC.Class.MonitorHeads Tezos.V005.NodeRPC.Class.PlainNodeStream
instance Tezos.V005.NodeRPC.Class.QueryChain Tezos.V005.NodeRPC.Class.RpcQuery
instance Tezos.V005.NodeRPC.Class.QueryBlock Tezos.V005.NodeRPC.Class.RpcQuery
instance Tezos.V005.NodeRPC.Class.QueryHistory Tezos.V005.NodeRPC.Class.RpcQuery
instance Tezos.V005.NodeRPC.Class.QueryNode Tezos.V005.NodeRPC.Class.RpcQuery
instance Tezos.V005.NodeRPC.Class.Injection Tezos.V005.NodeRPC.Class.RpcQuery

module Tezos.Types
